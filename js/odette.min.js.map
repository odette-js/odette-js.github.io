{"version":3,"sources":["beforeSetup.js","setup.js","scopeStart.js","utils.js","constants.js","shims.js","Strings.js","Directives.js","Collection.js","Messenger.js","Events.js","Model.js","Data.js","Linguistics.js","Promise.js","Associator.js","HTTP.js","Module.js","DOMA.js","Looper.js","Element.js","View.js","Buster.js","tests.js"],"names":["this","Odette","global","WHERE","version","fn","Application","name","parent","scoped","BOOLEAN_TRUE","missedDefinitions","createdAt","now","UNDEFINED","odette_version","LENGTH","PARENT","PROTOTYPE","TOUCH_TOP","TOP_ACCESS","PERIOD","global_","window","doc","document","BOOLEAN_FALSE","NULL","noop","typeConstructor","str","thing","Date","map","arra","i","len","arr","isString","isNumber","isFunction","executionTime","makeParody","apply","arguments","wraptry","trythis","errthat","finalfunction","returnValue","err","e","maxVersion","string1","string2","split1","split2","provenLarger","cvs1Result","convertVersionString","cvs2Result","split","value","index","string_","converted","string","destroy","extend","obj","n","app","hasOwnProperty","undefine","handler","push","parody","list","extendor","scope","name_","fn_","application","versions","versionOrder","VERSION","shared","registerVersion","defaultVersion","cachedOrCreated","newApp","currentVersion","definition","windo","defined","call","unRegisterVersion","saved","orderIdx","indexOf","splice","hash","registerScopedMethod","expects_","expects","args","args_","argLen","shift","applyTo","get","which","method","getCurrentScript","d","allScripts","scripts","currentScript","lastScript","touchTop","preventMap","topAccess","origin","top","innerSharedApp","scopedApp","Extendable","attributes","options","win","EMPTY_STRING","SPACE","HYPHEN","SLASH","PIXELS","ID","DESTROY","BEFORE_DESTROY","BEFORE_COLON","DESTROYING","TO_STRING","TO_JSON","CONSTRUCTOR","CURRENT","NAME","TYPE","SELECTOR","ELEMENT","CHILD","COLON","NONE","HIDDEN","BEFORE","CHANGE","TARGET","ORIGIN","CHANGE_COLON","RESET","DATA","OBJECT","STRING","BOOLEAN","FUNCTION","INDEX_OF","WINDOW","DOCUMENT","STACK","START","STOP","CLASS","CLASSNAME","TOP","LEFT","RIGHT","BOTTOM","WIDTH","__ELID__","HEIGHT","INDEX","INNER_HEIGHT","INNER_WIDTH","DISPATCH_EVENT","HTTP","HTTPS","CONSTRUCTOR_KEY","LOCATION","EXTEND","STYLE","BODY","TWO_TO_THE_31","factories","Function","FunctionConstructor","array","Array","String","number","Number","BRACKET_OBJECT_SPACE","nativeKeys","Object","keys","hasEnumBug","toString","propertyIsEnumerable","MAX_VALUE","MIN_VALUE","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","indexOfNaN","fromIndex","toIndex","fromRight","other","limit","incrementor","binaryIndexOf","item","minIndex_","maxIndex_","guess","min","max","bitwise","smartIndexOf","_from","_to","_rtl","stringify","isObject","JSON","sort","reversed","context","a","b","bind","result","numericResult","isNaN","returnsFirstArgument","has","prop","val","previousConstructor","instance","isInstance","constructor_","constructor","splitGen","delimiter","joinGen","join","gapJoin","gapSplit","isWrap","type","ret","isBoolean","isNull","isUndefined","isBlank","negate","isFinite_","isFinite","isArray","isEmpty","nonEnumerableProps","invert","objKeys","length","collectNonEnumProps","nonEnumIdx","proto","ObjProto","contains","now_shim","offset","_performance","performance","webkitNow","msNow","oNow","mozNow","deep","base","merge","obj1","obj2","key","allKeys","l","returnDysmorphicBase","values","object","collected","each","zip","lists","aggregator","duff","listCount","destination","MAX_ARRAY_INDEX","Math","pow","isArrayLike","collection","iterates","iterator","iteratee","idx","eachProxy","obj_","iteratee_","context_","direction_","direction","createPredicateIndexFinder","dir","predicate","index_","callback","findIndex","findLastIndex","validKey","finder","findHelper","startpoint","find","findLast","func","toArray","slice","runner_","runner","iterations","leftover","parseInt","tackRight","duffRight","eachRight","toBoolean","thingMod","trim","parseDecimal","num","parseFloat","pI","constructorExtend","protoProps","attach","child","passedParent","hasConstructor","nameIsStr","Surrogate","constructorWrapper","__super__","Constructor","__","one","two","three","four","five","six","once","doIt","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","clone","fullClone","parse","wrap","noExecute","newObj","_isArray","wasfunction","exports","_","Image","fetch","url","img","stringifyQuery","onload","unshift","src","passesFirstArgument","first","concat","concatUnique","foldl","memo","argument","cycle","num_","piece","uncycle","isMatch","attrs","keysResult","matches","pluck","filter","isArrayResult","bound","runCount","all","where","findWhere","findLastWhere","whereNot","val_","coerced","console","error","evaluate","debounce","wait","immediate","timeout","callNow","later","clearTimeout","setTimeout","objs","arrayLikeToArray","arrayLike","objectToArray","flattenArray","deep_","handle","item_","flatten","gather","newList","baseClamp","lower","upper","safeInteger","number_","MIN_SAFE_VALUE","MAX_SAFE_VALUE","isValidInteger","floatToInteger","remainder","toInteger","notSafe","isLength","throttle","threshold","last","deferTimer","_now","query","encodeURIComponent","encodeURI","protoProperty","farDown","uuid","cryptoCheck","crypto","sid","replace","c","rnd","r","v","getRandomValues","Uint32Array","floor","random","intendedIteration","iterator_","isObjectResult","key_","intendedObject","ctx","reverseParams","iteratorFn","third","roundFloat","power","mult","arg","knows","maths","mathArray","ensureFunction","_fn","createReduce","currentKey","actualKeys","foldr","some","_console","_log","log","exception","Error","message","assert","boolean_","toggle","current","returns","flow","bool","list_","start","is","nan","function","boolean","null","validInteger","months","weekdays","protoProp","reduce","math","shims","f","quote","escapable","lastIndex","test","meta","charCodeAt","holder","k","partial","mind","gap","toJSON","rep","indent","prototype","lengthString","getTime","valueOf","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Boolean","cx","\b","\t","\n","\f","\r","\"","\\","replacer","space","","text","reviver","walk","undefined","j","SyntaxError","oThis","TypeError","aArgs","fToBind","FNOP","fBound","matchMedia","styleMedia","media","style","createElement","script","getElementsByTagName","info","id","parentNode","insertBefore","getComputedStyle","currentStyle","matchMedium","styleSheet","cssText","textContent","width","cacheable","cache","input","categoricallyCacheable","baseCategory","category","cacher","wrapAll","deprefix","prefix","unUpcase","nuStr","toLowerCase","deprefixAll","camelcase","splitter","myStr","camelCase","unCamelCase","prefixAll","parseObject","found","uniqueId","stash","globalPrefix","s","upCase","toUpperCase","snakeCase","customUnits","unitList_","lengthHash","lengths","unitList","aLength","bLength","str_","unit","substr","baseUnitList","units","isHttp","parseHash","hashIdx","itemIs","startsWith","parseSearch","search","parms","temp","items","dcUriComp","decodeURIComponent","PUSH","urlToString","href","newlocation","newparsed","parseUrl","previous","reference","match","referrer","protocols","extraslashes","http:","https:","url__","startPath_","windo_","garbage","hostnameSplit","questionable","startPath","hostSplit","host","pathname","port","hostname","searchIdx","searchObject","protocolLength","protocolSplit","globalProtocol","location","protocol","protocol_","question","passed","friendlyProtocol","SIXTY","SEVEN","THIRTY","TWENTY_FOUR","ONE_THOUSAND","THREE_HUNDRED_SIXTY_FIVE","ONE_THOUSAND_SIXTY","THREE_HUNDRED_SIXTY_THOUSAND","EIGHTY_SIX_MILLION_FOUR_HUNDRED_THOUSAND","SIX_HUNDRED_FOUR_MILLION_EIGHT_HUNDRED_THOUSAND","TWO_BILLION_FIVE_HUNDRED_NINETY_TWO_MILLION","THIRTY_ONE_BILLION_FIVE_HUNDRED_THIRTY_SIX_MILLION","NUMBERS_LENGTH","ms","secs","mins","hrs","days","wks","mnths","yrs","timeUnits","timeUnitToNumber","commaSplit","monthsHash","time","monthIndex","spinalCase","STATUS","STATUSES","directives","creation","destruction","returnsNull","returnsObject","returnsThird","directive","iterate","checkParody","defaultValue","defaultIsFunction","defineDirective","destruction_","alreadyCreated","extendDirective","oldName","newName","handler_","Destruction","Handler","StatusMarker","Directive","mark","unmark","remark","that","directiveDestruction","status","isNot","COLLECTION","REVERSED","eachCall","mapCall","eachCallRight","isNullMessage","validIdMessage","cannotModifyMessage","doToAll","lookAfter","lookBefore","count","remove","removeAt","removeAll","add","addAll","insertAt","caller_","caller","numb","isNumberResult","isArrayLikeResult","range","stop","step","inclusive","ceil","ctx_","end","abs","countTo","countFrom","closestIndex","searchElement","currentIndex","currentElement","minIndex","maxIndex","recreateSelf","__constructor__","REGISTRY","Registry","reset","cat","register","keep","group","setter","swap","cached","drop","registry","cachedCount","recreatingSelfList","eachHandlers","forEach","forEachRight","abstractedCanModify","abstractedCannotModify","nativeCannotModify","reverseList","splatHandlers","joinHandlers","countingList","foldIteration","findIteration","indexers","foldFindIteration","marksIterating","iterating","wrappedListMethods","seeker","args0","args1","args2","fromHere","toThere","List","LIST","obliteration","empty","unwrap","results","Collection","unRegister","swapRegister","SortedCollection","skip","sorted","load","reverse","closest","validIDType","sm","registryDirective","valueOfResult","retrieved","StringObject","isValid","valid","increment","generate","StringManager","Child","changeCounter","decrement","wasFound","rebuild","collectable","parentRegistry","stringInstance","delimiter_","previousDelimiter","currentValue","ensure","value_","madeString","refill","array_","request","affection","reply","EVENTS","STOP_LISTENING","TALKER_ID","LISTENING_TO","LISTENING_PREFIX","HANDLERS","methodExchange","eventer","iterateOverList","names","eventName","make","flattenMatrix","_nameOrObjectIndex","fills","eventsDirective","firstTimeRound","isObj","curriedEquality","original","makeHandler","comparator","triggersOnce","detach","setupWatcher","nameOrObjectIndex","handlersIndex","nameOrObject","eventerDirective","original_handler","targetDirective","isObject_","fun_things","made","listenToModifier","attachEventObject","target","listeningObject","retreiveListeningObject","listening","onceModification","evnt","modifier","onceHandler","onFillerMaker","onFiller","listenToFiller","listener","talker","listenerDirective","talkerDirective","talkerId","listeningTo","listenToHandler","listenToOnceHandler","uniqueKey","Events","initialize","bubble","on","listenTo","listenToOnce","watch","watchOnce","watchOther","watchOtherOnce","when","opts","model","off","currentObj","events","handlers","seekAndDestroy","stopListening","notTalking","ids","targetEventsDirective","stillListening","originEventsDirective","dispatchEvents","dispatchStack","dispatchEvent","data","running","queued","create","dispatch","CHILDREN","SORT","ADDED","UNWRAP","REMOVED","_DELEGATED_CHILD_EVENTS","_PARENT_DELEGATED_CHILD_EVENTS","modelMaker","Model","_delegateChildEvents","childsEventDirective","childEvents","_unDelegateChildEvents","_delegateParentEvents","parent_","parentEvents","_unDelegateParentEvents","SYNCER","Syncer","sync","update","Children","evt","addToHash","removeFromHash","newModel","children","cid","save","Parent","isChildType","objs_","secondary_","childAdded","secondary","foundModel","set","idModel_","retList","models","idModel","comparator_","comparingAttribute","isReversed","val_A","val_B","removeRet","uniqueCounter","setId","idAttribute","unset","data_","firstReset","defaultsResult","newAttributes","idAttributeResult","dataDirective","changedList","changing","queueStack","digest","unQueueStack","ACTIONS","IS_STOPPED","UPCASED_IS_STOPPED","PROPAGATION","DEFAULT_PREVENTED","PROPAGATION_IS_STOPPED","IMMEDIATE_PROP_IS_STOPPED","event_incrementer","listeningCounter","returnsId","PASSED_DATA","ObjectEvent","timestamp","timeStamp","isStopped","datum","stopImmediatePropagation","stopPropagation","preventDefault","defaultIsPrevented","action","finished","actions","isTrusted","EventsDirective","cancelled","listenId","stack","removeQueue","proxyStack","eventObject","disabled","namespace","nextBubble","next","detachCurrent","removed","wipe","scrub","scrubbed","queue","unQueue","subset","subLength","stopped","periodSplit","CHANGE_COUNTER","CHANGING","DataDirective","newValue","getDeep","lastkey","path","no_more","SUCCESS","REGISTERED","STATE","EVERY","FAILURES","COUNTER","GROUP_INDEX","LINGUISTICS","curriedEquivalence","curriedGreaterThan","curriedLessThan","sequencer","addValue","constant1","constant2","makeLogic","negative_bound","abstractedStopListening","Linguistics","then","always","otherwise","isnt","isGreaterThan","isLessThan","isNotGreaterThan","isNotLessThan","logic","change","and","or","registered","unbind","defaultFn","check","restart","run","checked","LINGUISTICS_MANAGER","LinguisticsManager","newish","FAILURE","PENDING","ERROR","ALWAYS","FULFILLED","SETTLED","REJECTED","EMPTYING","ALL_STATES","STASHED_ARGUMENT","STASHED_HANDLERS","executeHandlers","countLimit","promise","shouldstop","finalName","allstates","addHandler","checkAll","notSuccessful","allSettled","argumentAggregate","resolveAs","checkAny","baseStates","success","failure","collect","pro","listen","unbound","Promise","constructor:Model","state","reason","auxiliaryStates","allStates","resolveAs_","opts_","reason_","fulfill","resolve","reject","stashedHandlers","byName","race","PromisePrototype","appPromise","dependency","ITEMS","objectToString","Associator","idxOf","objIsObj","sameType","eldata","dataArray","readData","el","extensor","isObj_","isWindow","lowerType","globalindex","indexOfWindow","READY_STATE","XDomainRequest","GET","validTypes","baseEvents","attachBaseListeners","ajax","prog","req","requestObject","percent","loaded","total","counter","originalEvent","sendthething","xhrReq","send","alterurlHandler","getUrl","attachResponseHandler","open","headers","typeThing","XMLHttpRequest","async","code","setRequestHeader","status:0","status:200","status:202","status:205","status:302","status:304","status:400","status:401","status:403","status:404","status:405","status:406","status:500","status:502","status:505","status:511","abort","xhrReqObj","hasFinished","rawData","responseText","STARTED","INITIALIZED","DEFINED","startableMethods","startable","doStart","Startable","startWithParent","doStop","stopWithParent","createArguments","module","checks","exporting","moduleMethods","initResult","globalname","arg2","parentModulesDirective","triggerBubble","Module","DOMA","export","topLevel","require","modulename","mappedArguments","extraModuleArguments","baseModuleArguments","addModuleArguments","removeModuleArguments","ATTACHED","IFRAME","ATTRIBUTES","globalAssociator","DOM_MANAGER_STRING","NODE_TYPE","DESTROYED","CUSTOM","REMOVING","ACCESSABLE","CUSTOM_LISTENER","LOCAL_NAME","UPPER_CHILD","APPEND_CHILD","REMOVE","PARENT_NODE","INNER_HTML","INNER_TEXT","OUTER_HTML","ATTRIBUTE_CHANGE","ATTRIBUTES_CHANGING","DELEGATE_COUNT","CAPTURE_COUNT","CUSTOM_KEY","CUSTOM_ATTRIBUTE","CLASS__NAME","FONT_SIZE","DEFAULT_VIEW","DIV","devicePixelRatio","owner","DomManager","noMatch","escapes","'"," "," ","escapeRegExp","escapeChar","escapeMap","&","<",">","`","unescapeMap","createEscaper","escaper","source","testRegexp","RegExp","replaceRegexp","escape","unescape","templateGenerator","templateSettings","settings","matcher","interpolate","render","variable","template","compile","template_","templates","templateHandler","$","html","isElement","ELEMENT_NODE","isDocument","DOCUMENT_NODE","isFragment","frag","DOCUMENT_FRAGMENT_NODE","getClosestWindow","ownerGlobal","getComputed","allStyles","rkeyEvent","rmouseEvent","motionMorph","rforceEvent","writeAttribute","countdown","emptyqueue","onerror","cb","removeAttribute","setAttribute","readAttribute","getAttribute","convertAttributeValue","attributeApi","preventUnCamel","read","write","DO_NOT_TRUST","cannotTrust","cachedTrust","makeEachTrigger","attr","api","whichever","manager","element","ALL_EVENTS_HASH","triggerEventWrapperManager","attr_","eachHandler","fn2","capturing","SVGEvent","KeyboardEvent","GamePadEvent","CompositionEvent","MouseEvents","TouchEvents","DeviceEvents","FocusEvent","TimeEvent","AnimationEvent","AudioProcessingEvent","UIEvents","ProgressEvent","AllEvents","knownPrefixes","validTagNames","validTagsNamesHash","readProperty","property","writeProperty","removeProperty","propertyApi","ensureManager","attribute","_attributeManager","getStringManager","clientRect","getBoundingClientRect","computedStyle","marginTop","unitRemoval","marginLeft","marginRight","marginBottom","height","left","right","bottom","numberBasedCss","columnCount","columns","fontWeight","lineHeight","opacity","zIndex","zoom","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","lineClamp","order","orphans","tabSize","widows","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","strokeWidth","timeBasedCss","transitionDuration","animationDuration","transitionDelay","animationDelay","prefixedStyles","prefixIndex","__prefix","styleName","currentCheck","deprefixed","currentLen","validCssNames","prefixed","addPrefix","convertStyleValue","box","clientrect","computed","borderBottom","borderBottomWidth","borderRight","borderRightWidth","borderLeft","borderLeftWidth","borderTop","borderTopWidth","paddingBottom","paddingRight","paddingLeft","paddingTop","computedBottom","computedRight","computedLeft","computedTop","clientWidth","clientHeight","getStyleSize","elStyle","filterExpressions",":even",":odd","numberToUnit","in","styleAttr","vh","px","cm","vw","em","mm","vmin","rem","pt","vmax","%","_val","pc","unitToNumber","tag","tagName","newElement","newManager","documnt","registeredElements","foundElement","elementName","returnsManager","append","makeTree","div","makeBranch","selector","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","ownerDocument","createDocumentFragment","nulled","mappedConcat","createElements","fragment","els_","els","manager_","dispatchDetached","htmlTextManipulator","dom","getInnard","horizontalTraverser","_idxChange","attachPrevious","idxChange_","idxChange","traversal","makeDataKey","_key","dataString","sliced","prev","_previous","covers","coords","_clientRect","tippytop","x","y","center","distance","xdiff","ydiff","sqrt","closer","challenger","createSelector","doma","fun","expandEventListenerArguments","validateEvent","AT_TARGET","bubbles","eventPhase","cancelable","defaultPrevented","isCapturing","_eventExpander","ready","deviceorientation","fullscreenalter","hover","forcewillbegin","forcechange","forcedown","forceup","force","distilledEventName","eventExpander","expanders","stack_","nme","hadInList","addEventListener","capture","_addEventListener","addEventListenerOnce","types","_callback","_removeEventListener","removeEventListener","eventNames","wasCustom","passedName","nameStack","domName","domTarget","markCustom","isAttached","appendChild","prependChild","attributeParody","parentElement","isIframe","testIframe","body","outerHTML","setInnard","cachedValue","doTheThing","close","innardManipulator","contentWindow","contentWindowManager","iframe","markGlobal","cachedContent","cachedDispatch","eventDispatcher","capturing_","directAttributes","classes","videoDirectEvents","play","pause","directEvents","allDirectMethods","element_","isAttachedResult","potential","dispatchDomEvent","managers","dispatchAttached","applyStyle","important","newStyles","itemSplit","setValue","attributeValuesHash","attributeManager","togglers","toggler","unmarkChange","queueAttributeValues","attribute_","second_","third_","domHappy_","passedTrigger_","domHappy","unCamelCased","withClass","trigger","generated","second","currentMerge","domAttributeManipulatorExtended","proc","innerHandler","normalize","alternateApi","hasAttributeValue","values_","removeValue","toggleValue","changeValue","getValue","hasValue","getSetter","givenApi","keyprocess","understandsContext","api_","reverseCache","firstIsString","usingApi","processor","attrApi","dataApi","propApi","domIterates","returnsFirst","domContextFind","makeValueTarget","passed_","domaHappy","method_","forceCustom","resultant","isCustomValue","registeredAs","markElement","isAccessable","isTop","setAddress","sameOrigin","registeredElementName","documentId","iframeContent","head","doc_","querySelectorAll","DOMA_SETUP","setup","wrapped","cachedMotionEvent","unregisteredElements","lastCalculatedMotionEvent","cachedMotionCalculation","defaultMotion","z","motionX","motionY","motionZ","interval","rotationRate","alpha","beta","gamma","absolute","DOMContentLoadedEvent","sel","custom","svg","keyboard","gamepad","composition","mouse","touch","device","focus","animation","audioProcessing","ui","progress","supports","expandEvent","passedEvent","actualEvent","customEvent","orderEventsByHeirarchy","stashMotionEvent","motion","acc","acc_","someData","acceleration","accelerationIncludingGravity","plugin","plugins","allSetups","collectTemplates","unregisteredElement","registerElement","options_","wasDefined","onCreate","onDestroy","directiveCreation","newDirective","validCustomElement","History","registerAs","runSupport","setupDomContentLoaded","testWithHandler","evntname","supported","windowManager","windowElement","deviceMotion","DeviceMotionEvent","deviceOrientation","DeviceOrientationEvent","styleManipulator","unCameled","styles","getStyle","getValueCurried","setValueCurried","classApi","manager_query","isAppendable","isValidDomManager","iframeChangeHandler","childByTraversal","ask","collectChildren","startIndex","managerHorizontalTraverser","_idxChange_","stringResult","traversed","collectCustom","markedListener","IS_TRUSTED","FULLSCREEN","fixHooks","props","fixedHooks","keyHooks","charCode","keyCode","forceHooks","webkitForce","motionHooks","reaction","mouseHooks","button","pageX","clientX","evntDoc","documentElement","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","movementX","movementY","layerX","layerY","copy","fixHook","originalType","view","event","currentTarget","delegateTarget","cachedObjectEventConstructor","fullscreenDocument","fullScreen","webkitFullscreenElement","mozFullScreenElement","fullscreenElement","DomEvent","removeEvent","mainHandler","detachEvent","DomEventsDirective","elementHandlers","foundDuplicate","delegateCount","eventHandler","hadMainHandler","customEvents","captureCount","currentEvent","attachEvent","temporaryTarget","sumCount","afterwards","parentNodeNumber","windowIsVisible","perspective","notVisible","visible","dimensionFinder","directive:creation:EventManager","prepend","css","siblings","filtr","createDomFilter","owner_","elements","rets","parentManager","speshal","defaultView","elementIsWindow","frameElement","doDefault","managerElement","isValidDOMA","node","fragmentManager","fragmentChildren","address","emit","message_","referrer_","srcElement","postMessage","parsedReference","windoElement","registeredAs_","historyDirective","client","innerHeight","innerWidth","display","visibility","hide","show","cachedRemoving","removeChild","frame","content","customName","temporaryFragment","childrenLength","nodeValue","capture_","removeFromList","objectMatches","unwrapsOnLoop","dataReconstructor","arg1","arg3","domFilter","canBeProcessed","childNodes","documentManager","domHandler","applyToEach","allEachMethods","firstMethods","applyToFirst","shouldBeContext","readMethods","applyToTarget","validContext","documentContext","unwrapped","addBack","matchers","allElements","appendTo","replaceWith","shouldClone_","isStringResult","setupWindow","lastAFId","lastTId","lastOverrideId","lastTime","frameTime","nowish","vendors","RUNNING","HALTED","STOPPED","TIMEOUT","CLEAR_TIMEOUT","ANIMATION_FRAME","REQUEST_ANIMATION_FRAME","CANCEL_ANIMATION_FRAME","allLoopers","runningLoopers","focused","nextFrame","Looper","playWhileBlurred","basicHandler","teardown","looper","LOOPER","currTime","timeToCall","_runner","removable","halt","_nowish","tween","queueRemoval","unqueue","dequeue","id_","frames","timey","times","time__","added","time_","diff","frameRate","minimum","expectedFrameRate","lastDate","lastSkip","tweener","Scheduler","AF","basicViewTrigger","makeDelegateEventKeys","bindings","viewNamespace","indexOfAt","hasAt","normalizeUIString","uiString","Element","degenerateUIBindings","uiBindings","generateUIBindings","delegateEvents","elementBindings","__events","cachedElementBindings","undelegateEvents","binding","delegateTriggers","elementTriggers","cachedElementTriggers","undelegateTriggers","setAttributes","bindUI","RENDER","RENDERED","BUFFERED_VIEWS","REGION_MANAGER","getRegion","addRegion","regionManagerDirective","region","establish","makesView","view_","View","disown","Region","setElement","models_","adopt","bufferDirective","_owner$","elementDirective","establishRegions","regions","regionsResult","addChildView","views","regionKey","region_","removeChildView","removeRegion","templateIsElement","parentView","newelementisDifferent","json","settingElement","neverRendered","establishRegion","$selected","createRegion","bufferedEnsure","buffers","resetEls","bufferedReset","bufferedElsReset","ENCODED_BRACKET","IS_LATE","DOCUMENT_READY","IS_WINDOW","DEFERRED","RESOLVED","IS_DEFERRED","GROUP","POST_TO","COMMAND","RUN_COUNT","FLUSHING","CONNECT","CONNECTED","DISCONNECTED","INITIALIZE","RESPONSE","MESSAGE","CAPITAL_RESPONSE","LATEST_RESPONSE","LAST_RESPONSE","RESPONDED","RESPONDED_WITH","RECEIVED","BEFORE_RESPONDED","BEFORE_RECEIVED","SENT_MESSAGE_INDEX","RECEIVED_REFERRER","EMIT_REFERRER","BUSTER","PACKET","busterGroupHash","receive","buster","postTo","isDestroyed","originalMessage","messageId","response","emitWindow","defaultGroupId","RESPOND_HANDLERS","Message","saveReceived","saveDeferred","responseEventObject","deferredEventObject","packet","defaults","command","deferred","latestResponse","isDeferred","flush","receiveWindowEvents","groupHash","previousbuster","disconnected","connectPromise","connectReceived","respond","UPCASED_BUSTER","defaultMessage","from","bounce","connected","originalData","receiveHistory","originMessageId","setGroup","defineWindows","receiveWindow","busterData","defineIframe","setupIframe","emitReferrer","hrefSplit","receiveReferrer","iframeSrc","useTop","useParent","begin","stripData","hashSplit","hashShift","hashString","decodeURI","talk","settings_","received:update","received:unload","received:initialize received:connect","change:group change:id","childrenLen","queuedMsg","dataManager","currentIdx","initedFrom","flushing","extra","packet_","messageData","newMessage","isResponse","currentTest","pollerTimeout","failedTests","testisrunning","EXPECTED","SPACE_NOT","TO_EQUAL","AN_ERROR","TO_BE_THROWN","TO_BE_STRICTLY_EQUAL_STRING","allIts","successfulIts","failedIts","allExpectations","successfulExpectations","failedExpectations","globalBeforeEachStack","globalAfterEachStack","errIfFalse","makemessage","expectation","expectationsHash","not","expect","maker","positive","negative","errHandler","errRan","comparison","erred","executedone","endTime","runningEach","afterStack","setupPoller","describe","makesOwnCallback","stringHandler","runId","errThat","doThis","errThis","finallyThis","beforeStack","timeoutId","startTime","it","globalStack","itemized","beforeEach","afterEach","loops","theIt","totalTime"],"mappings":"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","file":"odette.min.js","sourcesContent":["this.Odette = function (global, WHERE, version, fn) {\n    'use strict';\n    var UNDEFINED, odette_version = '0.0.0',\n        LENGTH = 'length',\n        PARENT = 'global',\n        PROTOTYPE = 'prototype',\n        TOUCH_TOP = 'touchTop',\n        TOP_ACCESS = 'topAccess',\n        PERIOD = '.',\n        global_ = this || window || global,\n        doc = global_.document,\n        BOOLEAN_TRUE = !0,\n        BOOLEAN_FALSE = !1,\n        NULL = null,\n        noop = function () {},\n        typeConstructor = function (str) {\n            return function (thing) {\n                return typeof thing === str;\n            };\n        },\n        now = function () {\n            return +(new Date());\n        },\n        map = function (arra, fn) {\n            var i = 0,\n                len = arra[LENGTH],\n                arr = [];\n            while (len > i) {\n                arr[i] = fn(arra[i], i, arra);\n                i++;\n            }\n            return arr;\n        },\n        isString = typeConstructor('string'),\n        isNumber = typeConstructor('number'),\n        isFunction = typeConstructor('function'),\n        executionTime = now(),\n        makeParody = function (parent, fn) {\n            return function () {\n                return fn.apply(parent, arguments);\n            };\n        },\n        wraptry = function (trythis, errthat, finalfunction) {\n            var returnValue, err = NULL;\n            try {\n                returnValue = trythis();\n            } catch (e) {\n                err = e;\n                returnValue = errthat ? errthat(e) : returnValue;\n            } finally {\n                returnValue = finalfunction ? finalfunction(err, returnValue) : returnValue;\n            }\n            return returnValue;\n        },\n        isVersionString = function (string) {\n            return isNumber(string) || (isString(string) && (string.split(PERIOD)[LENGTH] > 1 || +string === +string)) ? BOOLEAN_TRUE : BOOLEAN_FALSE;\n        },\n        maxVersion = function (string1, string2) {\n            // string 2 is always the underdog\n            var split1, split2, provenLarger, cvs1Result = convertVersionString(string1);\n            var cvs2Result = convertVersionString(string2);\n            // keyword checks\n            if (cvs1Result === BOOLEAN_TRUE) {\n                return cvs1Result;\n            }\n            if (cvs2Result === BOOLEAN_TRUE) {\n                return cvs2Result;\n            }\n            if (cvs1Result === BOOLEAN_FALSE && cvs2Result === BOOLEAN_FALSE) {\n                // compare them as version strings\n                split1 = string1.split(PERIOD);\n                split2 = string2.split(PERIOD);\n                map(split1, function (value, index) {\n                    if (+value < +(split2[index] || 0)) {\n                        provenLarger = BOOLEAN_TRUE;\n                    }\n                });\n                if (provenLarger === UNDEFINED && split2[LENGTH] > split1[LENGTH]) {\n                    provenLarger = BOOLEAN_TRUE;\n                }\n                return !!provenLarger ? string2 : string1;\n            } else {\n                return string1 > string2 ? string1 : string2;\n            }\n        },\n        convertVersionString = function (string_) {\n            var converted, string = string_;\n            if (isNumber(string)) {\n                return string;\n            } else {\n                string += '';\n                converted = +string;\n                // could be a number hiding as a string\n                if (converted === converted) {\n                    return converted;\n                } else {\n                    return string.split(PERIOD)[LENGTH] === 1;\n                }\n            }\n        };\n\n    function Application(name, parent) {\n        this.version = name;\n        this.scoped = BOOLEAN_TRUE;\n        this.missedDefinitions = [];\n        this.createdAt = now();\n        return this;\n    }\n    Application[PROTOTYPE].destroy = noop;\n    Application[PROTOTYPE].wraptry = wraptry;\n    Application[PROTOTYPE].now = now;\n    Application[PROTOTYPE].extend = function (obj) {\n        var n, app = this;\n        for (n in obj) {\n            if (obj.hasOwnProperty(n)) {\n                app[n] = obj[n];\n            }\n        }\n        return app;\n    };\n    Application[PROTOTYPE].undefine = function (handler) {\n        this.missedDefinitions.push(handler);\n        return this;\n    };\n    Application[PROTOTYPE].parody = function (list) {\n        var app = this,\n            i = 0,\n            extendor = {},\n            parent = app[PARENT];\n        for (; i < list[LENGTH]; i++) {\n            extendor[list[i]] = makeParody(parent, parent[list[i]]);\n        }\n        app.extend(extendor);\n        return app;\n    };\n    Application[PROTOTYPE].scope = function (name_, fn_) {\n        var name = name_ && isString(name_) ? name_ : this.version;\n        var fn = name_ && (isFunction(name_) ? name_ : (isFunction(fn_) ? fn_ : NULL));\n        return this[PARENT].scope(name, fn);\n    };\n    Application[PROTOTYPE][TOUCH_TOP] = function () {\n        // allows the top part of this script to be swapped out against different globals_\n        return this[PARENT][TOUCH_TOP](global_);\n    };\n    Application[PROTOTYPE][TOP_ACCESS] = function () {\n        this[TOUCH_TOP]();\n        return this[PARENT][TOP_ACCESS];\n    };\n    var app, application = global_[WHERE] = global_[WHERE] || {\n        versions: {},\n        executionTime: executionTime,\n        versionOrder: [],\n        VERSION: odette_version,\n        shared: BOOLEAN_TRUE,\n        scoped: BOOLEAN_FALSE,\n        wraptry: wraptry,\n        maxVersion: maxVersion,\n        registerVersion: function (name, app) {\n            var defaultVersion, application = this,\n                cachedOrCreated = application.versions[name],\n                newApp = application.versions[name] = cachedOrCreated || app || new Application(name, application);\n            newApp[PARENT] = application;\n            application.currentVersion = name;\n            application.defaultVersion = (defaultVersion = application.defaultVersion) === UNDEFINED ? version : maxVersion(defaultVersion, version);\n            if (!cachedOrCreated) {\n                application.versionOrder.push(name);\n            }\n            return newApp;\n        },\n        definition: function (version, windo, handler) {\n            var application = this,\n                app = application.registerVersion(version);\n            if (app.defined) {\n                application.map(app.missedDefinitions, function (handler) {\n                    handler.call(app, windo);\n                });\n            } else {\n                app.defined = BOOLEAN_TRUE;\n                handler.call(app, app);\n            }\n            return app;\n        },\n        unRegisterVersion: function (name) {\n            var application = this,\n                saved = application.versions[name],\n                orderIdx = application.versionOrder.indexOf(name);\n            if (orderIdx === -1) {\n                return application;\n            }\n            saved.destroy();\n            application.versionOrder.splice(orderIdx, 1);\n            saved[PARENT] = UNDEFINED;\n            application.versions[name] = UNDEFINED;\n            return saved;\n        },\n        scope: function (name_, fn_) {\n            var name, fn, scoped, app = this,\n                hash = app.versions;\n            if (isString(name_) || isNumber(name_)) {\n                name = name_;\n                fn = fn_;\n            } else {\n                fn = name_;\n                name = app.defaultVersion;\n            }\n            if (!hash[name]) {\n                app.registerVersion(name);\n            } else {\n                app.currentVersion = name;\n            }\n            scoped = hash[name];\n            if (!isFunction(fn)) {\n                return scoped;\n            }\n            this.wraptry(function () {\n                fn.call(app, scoped);\n            });\n            return scoped;\n        },\n        map: map,\n        registerScopedMethod: function (name, expects_) {\n            var application = this,\n                expects = expects_ || 3,\n                method = application[name] = application[name] || function () {\n                    var i = 0,\n                        args = arguments,\n                        args_ = args,\n                        argLen = args[LENGTH],\n                        version = args[0];\n                    // expects is equivalent to what it would be if the version was passed in\n                    if (argLen < expects) {\n                        version = application.currentVersion;\n                    } else {\n                        args_ = [];\n                        for (; i < args[LENGTH]; i++) {\n                            args_.push(args[i]);\n                        }\n                        version = args_.shift();\n                    }\n                    application.applyTo(version, name, args_);\n                };\n            return application;\n        },\n        get: function (version) {\n            return this.versions[version];\n        },\n        applyTo: function (which, method, args) {\n            var application = this,\n                app = application.get(which);\n            return app && app[method] && app[method].apply(app, args);\n        },\n        getCurrentScript: function (d) {\n            var allScripts = (d || doc).scripts,\n                currentScript = d.currentScript,\n                lastScript = allScripts[allScripts[LENGTH] - 1];\n            return currentScript || lastScript;\n        },\n        touchTop: function (global_, preventMap) {\n            // assume you have top access\n            var topAccess, origin = this,\n                application = origin;\n            if (application[TOP_ACCESS] === UNDEFINED) {\n                // we dont get a top variable on the global object in node\n                // probably because there are no scoped globals\n                if (global_ === global_.top || !global_.top) {\n                    topAccess = BOOLEAN_TRUE;\n                } else {\n                    // test for browsers\n                    topAccess = wraptry(function () {\n                        var doc = global_.top.document;\n                        // overwrite the scoped application variable\n                        application = global_.top[WHERE] || application;\n                        return BOOLEAN_TRUE;\n                    }, function () {\n                        return BOOLEAN_FALSE;\n                    });\n                }\n                if (topAccess) {\n                    global_.top[WHERE] = application;\n                }\n                application[TOP_ACCESS] = topAccess;\n            }\n            if (!preventMap && global_[WHERE] !== application) {\n                map(origin.versionOrder, function (version) {\n                    application.registerVersion(version, origin.versions[version]);\n                });\n            }\n            global_[WHERE] = application;\n            return application;\n        }\n    };\n    app = application.get(version);\n    if (app) {\n        // there is already an app with this same version that originated from this global object\n        return app;\n    }\n    app = application.registerVersion(version);\n    // call is used because apply is finicky and bind is not universal\n    fn.call(global_, application, app);\n    return app;\n};","Odette(this, 'application', '0.0.0', function (innerSharedApp, scopedApp) {\n    // custom setup code for this version\n    var global = this;\n    // scopedApp.version === 'dev'\n    // global app is the object that will be shared with all other iframes\n    var globalSharedApp = innerSharedApp.touchTop(global);\n});","application.definition('0.0.0', this, function (app) {\n        'use strict';","var factories = {},\n    // object = Object,\n    fn = Function,\n    FunctionConstructor = fn[CONSTRUCTOR],\n    array = Array,\n    string = String,\n    number = Number,\n    BRACKET_OBJECT_SPACE = '[object ',\n    stringProto = string[PROTOTYPE],\n    // objectProto = object[PROTOTYPE],\n    arrayProto = array[PROTOTYPE],\n    funcProto = fn[PROTOTYPE],\n    nativeKeys = Object.keys,\n    hasEnumBug = !{\n        toString: NULL\n    }.propertyIsEnumerable(TO_STRING),\n    MAX_VALUE = number.MAX_VALUE,\n    MIN_VALUE = number.MIN_VALUE,\n    MAX_SAFE_INTEGER = number.MAX_SAFE_INTEGER,\n    MIN_SAFE_INTEGER = number.MIN_SAFE_INTEGER,\n    MAX_ARRAY_LENGTH = 4294967295,\n    noop = function () {},\n    /**\n     * @func\n     */\n    indexOfNaN = function (array, fromIndex, toIndex, fromRight) {\n        if (!array) {\n            return -1;\n        }\n        var other, limit = toIndex || array[LENGTH],\n            index = fromIndex + (fromRight ? 0 : -1),\n            incrementor = fromRight ? -1 : 1;\n        while ((index += incrementor) < limit) {\n            other = array[index];\n            if (other !== other) {\n                return index;\n            }\n        }\n        return -1;\n    },\n    property = function (string) {\n        return function (object) {\n            return object[string];\n        };\n    },\n    indexOf = function (array, value, fromIndex, toIndex, fromRight) {\n        var index, limit, incrementor;\n        if (!array) {\n            return -1;\n        }\n        if (value !== value) {\n            return indexOfNaN(array, fromIndex, toIndex, fromRight);\n        }\n        index = (fromIndex || 0) - 1;\n        limit = toIndex || array[LENGTH];\n        incrementor = fromRight ? -1 : 1;\n        while ((index += incrementor) < limit) {\n            if (array[index] === value) {\n                return index;\n            }\n        }\n        return -1;\n    },\n    binaryIndexOf = function (list, item, minIndex_, maxIndex_, fromRight) {\n        var guess, min = minIndex_ || 0,\n            max = maxIndex_ || list[LENGTH] - 1,\n            bitwise = (max <= TWO_TO_THE_31) ? BOOLEAN_TRUE : BOOLEAN_FALSE;\n        if (item !== item) {\n            return indexOfNaN(list, min, max, fromRight);\n        }\n        if (bitwise) {\n            while (min <= max) {\n                guess = (min + max) >> 1;\n                if (list[guess] === item) {\n                    return guess;\n                } else {\n                    if (list[guess] < item) {\n                        min = guess + 1;\n                    } else {\n                        max = guess - 1;\n                    }\n                }\n            }\n        } else {\n            while (min <= max) {\n                guess = (min + max) / 2 | 0;\n                if (list[guess] === item) {\n                    return guess;\n                } else {\n                    if (list[guess] < item) {\n                        min = guess + 1;\n                    } else {\n                        max = guess - 1;\n                    }\n                }\n            }\n        }\n        return -1;\n    },\n    smartIndexOf = function (array, item, _from, _to, _rtl) {\n        return (_from === BOOLEAN_TRUE && array && array[LENGTH] > 100 ? binaryIndexOf : indexOf)(array, item, _from, _to, _rtl);\n    },\n    /**\n     * @func\n     */\n    toString = function (obj) {\n        return obj == NULL ? EMPTY_STRING : obj + EMPTY_STRING;\n    },\n    stringify = function (obj) {\n        return (isObject(obj) ? JSON.stringify(obj) : isFunction(obj) ? obj.toString() : obj) + EMPTY_STRING;\n    },\n    /**\n     * @func\n     */\n    sort = function (obj, fn_, reversed, context) {\n        var fn = fn_ || function (a, b) {\n            return a > b;\n        };\n        if (context) {\n            fn = bind(fn, context);\n        }\n        // normalize sort function handling for safari\n        return obj.sort(function (a, b) {\n            var result = fn(a, b),\n                numericResult = +result;\n            if (numericResult == NULL) {\n                numericResult = 0;\n            }\n            if (isNaN(numericResult)) {\n                numericResult = 0;\n            }\n            if (numericResult > 1) {\n                numericResult = 1;\n            }\n            if (result === BOOLEAN_FALSE || numericResult < -1) {\n                numericResult = -1;\n            }\n            return reversed ? numericResult * -1 : numericResult;\n        });\n    },\n    returnsFirstArgument = function (value) {\n        return value;\n    },\n    normalizeToFunction = function (value, context, argCount) {\n        if (value == NULL) return returnsFirstArgument;\n        if (isFunction(value)) return bind(value, context);\n        if (isObject(value)) return _.matcher(value);\n        return property(value);\n    },\n    // Sort the object's values by a criterion produced by an iteratee.\n    // _.sortBy = function(obj, iteratee, context) {\n    //   iteratee = cb(iteratee, context);\n    //   return _.pluck(_.map(obj, function(value, index, list) {\n    //     return {\n    //       value: value,\n    //       index: index,\n    //       criteria: iteratee(value, index, list)\n    //     };\n    //   }).sort(function(left, right) {\n    //     var a = left.criteria;\n    //     var b = right.criteria;\n    //     if (a !== b) {\n    //       if (a > b || a === void 0) return 1;\n    //       if (a < b || b === void 0) return -1;\n    //     }\n    //     return left.index - right.index;\n    //   }), 'value');\n    // };\n    sortBy = function (list, string) {},\n    /**\n     * @func\n     */\n    has = function (obj, prop) {\n        var val = BOOLEAN_FALSE;\n        if (obj && isFunction(obj.hasOwnProperty)) {\n            val = obj.hasOwnProperty(prop);\n        }\n        return val;\n    },\n    /**\n     * @func\n     */\n    previousConstructor = function (instance) {\n        return instance && instance[CONSTRUCTOR_KEY] && instance[CONSTRUCTOR_KEY][CONSTRUCTOR] || instance[CONSTRUCTOR];\n    },\n    // nativeIsInstance = function (instance, constructor) {\n    //     return instance instanceof constructor;\n    // },\n    isInstance = function (instance, constructor_) {\n        var constructor = constructor_;\n        if (has(constructor, CONSTRUCTOR)) {\n            constructor = constructor[CONSTRUCTOR];\n        }\n        return instance instanceof constructor;\n    },\n    /**\n     * @func\n     */\n    splitGen = function (delimiter) {\n        return function (list) {\n            return isString(list) ? list.split(delimiter) : list;\n        };\n    },\n    /**\n     * @func\n     */\n    joinGen = function (delimiter) {\n        return function (arr) {\n            return arr.join(delimiter);\n        };\n    },\n    /**\n     * @func\n     */\n    gapJoin = joinGen(SPACE),\n    /**\n     * @func\n     */\n    gapSplit = splitGen(SPACE),\n    /**\n     * @func\n     */\n    isWrap = function (type, fn) {\n        if (!fn) {\n            fn = function () {\n                return BOOLEAN_TRUE;\n            };\n        }\n        return function (thing) {\n            var ret = 0;\n            if (typeof thing === type && fn(thing)) {\n                ret = BOOLEAN_TRUE;\n            }\n            return !!ret;\n        };\n    },\n    /**\n     * @func\n     */\n    isFunction = isWrap(FUNCTION),\n    /**\n     * @func\n     */\n    isBoolean = isWrap(BOOLEAN),\n    /**\n     * @func\n     */\n    isString = isWrap(STRING),\n    /**\n     * @func\n     */\n    isNull = function (thing) {\n        return thing === NULL;\n    },\n    isUndefined = function (thing) {\n        return thing === UNDEFINED;\n    },\n    isBlank = function (thing) {\n        return isUndefined(thing) || isNull(thing);\n    },\n    /**\n     * @func\n     */\n    isNaN = function (thing) {\n        return thing !== thing;\n    },\n    negate = function (fn) {\n        return function () {\n            return !fn.apply(this, arguments);\n        };\n    },\n    isNumber = isWrap('number', function (thing) {\n        return thing === thing;\n    }),\n    isFinite_ = win.isFinite,\n    isFinite = function (thing) {\n        return isNumber(thing) && isFinite_(thing);\n    },\n    /**\n     * @func\n     */\n    isObject = isWrap(OBJECT, function (thing) {\n        return !!thing;\n    }),\n    /**\n     * @func\n     */\n    isArray = Array.isArray,\n    /**\n     * @func\n     */\n    isEmpty = function (obj) {\n        return !keys(obj)[LENGTH];\n    },\n    nonEnumerableProps = gapSplit('valueOf isPrototypeOf ' + TO_STRING + ' propertyIsEnumerable hasOwnProperty toLocaleString'),\n    /**\n     * @func\n     */\n    invert = function (obj) {\n        var i = 0,\n            result = {},\n            objKeys = keys(obj),\n            length = objKeys[LENGTH];\n        for (; i < length; i++) {\n            result[obj[objKeys[i]]] = objKeys[i];\n        }\n        return result;\n    },\n    /**\n     * @func\n     */\n    collectNonEnumProps = function (obj, keys) {\n        var nonEnumIdx = nonEnumerableProps[LENGTH];\n        var constructor = obj[CONSTRUCTOR];\n        var proto = (isFunction(constructor) && constructor[PROTOTYPE]) || ObjProto;\n        // Constructor is a special case.\n        var prop = CONSTRUCTOR;\n        if (has(obj, prop) && !contains(keys, prop)) keys.push(prop);\n        while (nonEnumIdx--) {\n            prop = nonEnumerableProps[nonEnumIdx];\n            if (prop in obj && obj[prop] !== proto[prop] && !contains(keys, prop)) {\n                keys.push(prop);\n            }\n        }\n    },\n    /**\n     * @func\n     */\n    // stringify = toString,\n    // stringify = function (obj) {\n    //     return (isObject(obj) ? JSON.stringify(obj) : isFunction(obj) ? obj.toString() : obj) + EMPTY_STRING;\n    // },\n    /**\n     * @func\n     */\n    now = function () {\n        return +(new Date());\n    },\n    now_offset = now(),\n    now_shim = function () {\n        return now() - this.offset;\n    },\n    _performance = window.performance,\n    performance = _performance ? (_performance.now = (_performance.now || _performance.webkitNow || _performance.msNow || _performance.oNow || _performance.mozNow || now_shim)) && _performance : {\n        now: now_shim\n    },\n    /**\n     * @func\n     */\n    extend = function () {\n        var deep = BOOLEAN_FALSE,\n            args = arguments,\n            length = args[LENGTH],\n            index = 1,\n            first = 0,\n            base = args[0];\n        if (base === BOOLEAN_TRUE) {\n            deep = BOOLEAN_TRUE;\n            base = args[1];\n            index = 2;\n        }\n        base = base || {};\n        for (; index < length; index++) {\n            merge(base, args[index], deep);\n        }\n        return base;\n    },\n    merge = function (obj1, obj2, deep) {\n        var key, val, i = 0,\n            keys = allKeys(obj2),\n            l = keys[LENGTH];\n        for (; i < l; i++) {\n            key = keys[i];\n            // ignore undefined\n            if (obj2[key] !== UNDEFINED) {\n                val = obj2[key];\n                if (deep) {\n                    if (isObject(obj2[key])) {\n                        if (!isObject(obj1[key])) {\n                            obj1[key] = returnDysmorphicBase(obj2[key]);\n                        }\n                        merge(obj1[key], obj2[key], deep);\n                    } else {\n                        obj1[key] = val;\n                    }\n                } else {\n                    obj1[key] = val;\n                }\n            }\n        }\n        return obj1;\n    },\n    values = function (object) {\n        var collected = [];\n        each(object, function (value) {\n            collected.push(value);\n        });\n        return collected;\n    },\n    zip = function (lists) {\n        var aggregator = [];\n        duff(lists, function (list, listCount) {\n            // var zipped = aggregator\n            duff(list, function (item, index) {\n                var destination = aggregator[index];\n                if (!aggregator[index]) {\n                    destination = aggregator[index] = [];\n                }\n                destination[listCount] = item;\n            });\n        });\n        return aggregator;\n    },\n    object = function (keys, values) {\n        var obj = {};\n        if (values) {\n            duff(keys, function (key, index) {\n                obj[key] = values[index];\n            });\n        } else {\n            duff(keys, function (key, index) {\n                obj[key[0]] = key[1];\n            });\n        }\n        return obj;\n    },\n    /**\n     * @func\n     */\n    // Helper for collection methods to determine whether a collection\n    // should be iterated as an array or as an object\n    // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n    // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n    MAX_ARRAY_INDEX = Math.pow(2, 53) - 1,\n    /**\n     * @func\n     */\n    isArrayLike = function (collection) {\n        var length = !!collection && collection[LENGTH];\n        return isArray(collection) || (isNumber(length) && !isString(collection) && length >= 0 && length <= MAX_ARRAY_INDEX && !isFunction(collection));\n    },\n    iterates = function (obj, iterator, context) {\n        var list = keys(obj),\n            iteratee = bind(iterator, context);\n        return {\n            keys: list,\n            handler: function (key, idx, list) {\n                // gives you the key, use that to get the value\n                return iteratee(obj[key], key, obj);\n            }\n        };\n    },\n    eachProxy = function (fn) {\n        return function (obj_, iteratee_, context_, direction_) {\n            var ret, obj = obj_,\n                list = obj,\n                iteratee = iteratee_,\n                iterator = iteratee,\n                context = context_,\n                direction = direction_;\n            if (!obj) {\n                return obj;\n            }\n            if (!isArrayLike(obj)) {\n                ret = iterates(list, iteratee, context);\n                iterator = ret.handler;\n                list = ret.keys;\n                // prevent duff from binding again\n                context = NULL;\n            }\n            return fn(list, iterator, context, direction);\n        };\n    },\n    /**\n     * @func\n     */\n    createPredicateIndexFinder = function (dir) {\n        return eachProxy(function (array, predicate, context, index_) {\n            var length = array[LENGTH],\n                callback = bind(predicate, context),\n                index = index_ || (dir > 0 ? 0 : length - 1);\n            for (; index >= 0 && index < length; index += dir) {\n                if (callback(array[index], index, array)) {\n                    return index;\n                }\n            }\n            return -1;\n        });\n    },\n    /**\n     * @func\n     */\n    // Returns the first index on an array-like that passes a predicate test\n    findIndex = createPredicateIndexFinder(1),\n    /**\n     * @func\n     */\n    findLastIndex = createPredicateIndexFinder(-1),\n    /**\n     * @func\n     */\n    validKey = function (key) {\n        // -1 for arrays\n        // any other data type ensures string\n        return key !== -1 && key === key && key !== UNDEFINED && key !== NULL && key !== BOOLEAN_FALSE && key !== BOOLEAN_TRUE;\n    },\n    finder = function (findHelper) {\n        return function (obj, predicate, context, startpoint) {\n            var key = findHelper(obj, predicate, context, startpoint);\n            if (validKey(key)) {\n                return obj[key];\n            }\n        };\n    },\n    find = finder(findIndex),\n    findLast = finder(findLastIndex),\n    bind = function (func) {\n        var args = toArray(arguments).slice(1);\n        return func.bind.apply(func, args);\n    },\n    duff = function (values, runner_, context, direction_) {\n        var direction, runner, iterations, val, i, leftover, deltaFn;\n        if (!values) {\n            return;\n        }\n        i = 0;\n        val = values[LENGTH];\n        leftover = val % 8;\n        iterations = parseInt(val / 8, 10);\n        if (direction_ < 0) {\n            i = val - 1;\n        }\n        direction = direction_ || 1;\n        runner = bind(runner_, context);\n        if (leftover > 0) {\n            do {\n                runner(values[i], i, values);\n                i += direction;\n            } while (--leftover > 0);\n        }\n        if (iterations) {\n            do {\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n                runner(values[i], i, values);\n                i += direction;\n            } while (--iterations > 0);\n        }\n        return values;\n    },\n    each = eachProxy(duff),\n    tackRight = function (fn) {\n        return function (list, iterator, context) {\n            return fn(list, iterator, arguments[LENGTH] < 3 ? NULL : context, -1);\n        };\n    },\n    duffRight = tackRight(duff),\n    eachRight = tackRight(each),\n    /**\n     * @func\n     */\n    toBoolean = function (thing) {\n        var ret, thingMod = thing + EMPTY_STRING;\n        thingMod = thingMod.trim();\n        if (thingMod === BOOLEAN_FALSE + EMPTY_STRING) {\n            ret = BOOLEAN_FALSE;\n        }\n        if (thingMod === BOOLEAN_TRUE + EMPTY_STRING) {\n            ret = BOOLEAN_TRUE;\n        }\n        if (ret === UNDEFINED) {\n            ret = thing;\n        }\n        return ret;\n    },\n    /**\n     * @func\n     */\n    parseDecimal = function (num) {\n        return parseFloat(num) || 0;\n    },\n    pI = function (num) {\n        return parseInt(num, 10) || 0;\n    },\n    allKeys = function (obj) {\n        var key, keys = [];\n        for (key in obj) {\n            keys.push(key);\n        }\n        // Ahem, IE < 9.\n        if (hasEnumBug) {\n            collectNonEnumProps(obj, keys);\n        }\n        return keys;\n    },\n    keys = function (obj) {\n        var key, keys = [];\n        if (!obj || (!isObject(obj) && !isFunction(obj))) {\n            return keys;\n        }\n        if (nativeKeys) {\n            return nativeKeys(obj);\n        }\n        for (key in obj) {\n            if (has(obj, key)) {\n                keys.push(key);\n            }\n        }\n        // Ahem, IE < 9.\n        if (hasEnumBug) {\n            collectNonEnumProps(obj, keys);\n        }\n        return keys;\n    },\n    /**\n     * @func\n     */\n    constructorExtend = function (name, protoProps, attach) {\n        var nameString, child, passedParent, hasConstructor, constructor, parent = this,\n            nameIsStr = isString(name);\n        if (name === BOOLEAN_FALSE) {\n            extend(parent[PROTOTYPE], protoProps);\n            return parent;\n        }\n        if (!nameIsStr) {\n            protoProps = name;\n        }\n        hasConstructor = has(protoProps, CONSTRUCTOR);\n        if (protoProps && hasConstructor) {\n            child = protoProps[CONSTRUCTOR];\n        }\n        if (nameIsStr) {\n            passedParent = parent;\n            if (child) {\n                passedParent = child;\n            }\n            child = new FunctionConstructor('parent', 'return function ' + name + '(){return parent.apply(this,arguments);}')(passedParent);\n        } else {\n            child = child || new FunctionConstructor('parent', 'return ' + parent.toString())(parent);\n        }\n        child[EXTEND] = constructorExtend;\n        var Surrogate = function () {\n            this[CONSTRUCTOR] = child;\n        };\n        Surrogate[PROTOTYPE] = parent[PROTOTYPE];\n        child[PROTOTYPE] = new Surrogate;\n        // don't call the function if nothing exists\n        if (protoProps) {\n            extend(child[PROTOTYPE], protoProps);\n        }\n        constructor = child;\n        child = constructorWrapper(constructor);\n        child.__super__ = parent;\n        constructor[PROTOTYPE][CONSTRUCTOR_KEY] = child;\n        // if (nameIsStr && attach && !_._preventConstructorAttach) {\n        //     factories[name] = child;\n        // }\n        return child;\n    },\n    constructorWrapper = function (Constructor) {\n        var __ = function (one, two, three, four, five, six) {\n            return one instanceof Constructor ? one : new Constructor(one, two, three, four, five, six);\n        };\n        __.isInstance = Constructor.isInstance = function (instance) {\n            return isInstance(instance, Constructor);\n        };\n        __[CONSTRUCTOR] = Constructor;\n        __[EXTEND] = Constructor[EXTEND] = function () {\n            return constructorExtend.apply(Constructor, arguments);\n        };\n        return __;\n    },\n    /**\n     * @func\n     */\n    once = function (fn) {\n        var doIt;\n        return function () {\n            if (!doIt) {\n                doIt = 1;\n                return fn.apply(this, arguments);\n            }\n        };\n    },\n    /**\n     * @func\n     */\n    // Internal recursive comparison function for `isEqual`.\n    eq = function (a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b) {\n            return a !== 0 || 1 / a === 1 / b;\n        }\n        // A strict comparison is necessary because `NULL == undefined`.\n        if (a === NULL || a === UNDEFINED || b === UNDEFINED || b === NULL) {\n            return a === b;\n        }\n        // Unwrap any wrapped objects.\n        // if (a instanceof _) a = a._wrapped;\n        // if (b instanceof _) b = b._wrapped;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className !== toString.call(b)) return BOOLEAN_FALSE;\n        switch (className) {\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case BRACKET_OBJECT_SPACE + 'RegExp]':\n            // RegExps are coerced to strings for comparison (Note: EMPTY_STRING + /a/i === '/a/i')\n        case BRACKET_OBJECT_SPACE + 'String]':\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return EMPTY_STRING + a === EMPTY_STRING + b;\n        case BRACKET_OBJECT_SPACE + 'Number]':\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN\n            if (+a !== +a) return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case BRACKET_OBJECT_SPACE + 'Date]':\n        case BRACKET_OBJECT_SPACE + 'Boolean]':\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        }\n        var areArrays = className === BRACKET_OBJECT_SPACE + 'Array]';\n        if (!areArrays) {\n            if (!isObject(a) || !isObject(b)) {\n                return BOOLEAN_FALSE;\n            }\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n            // from different frames are.\n            var aCtor = a[CONSTRUCTOR],\n                bCtor = b[CONSTRUCTOR];\n            if (aCtor !== bCtor && !(isFunction(aCtor) && (aCtor instanceof aCtor) && isFunction(bCtor) && (bCtor instanceof bCtor)) && (CONSTRUCTOR in a && CONSTRUCTOR in b)) {\n                return BOOLEAN_FALSE;\n            }\n        }\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n        // Initializing stack of traversed objects.\n        // It's done here since we only need them for objects and arrays comparison.\n        // aStack = aStack || [];\n        // bStack = bStack || [];\n        var length = aStack[LENGTH];\n        while (length--) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (aStack[length] === a) {\n                return bStack[length] === b;\n            }\n        }\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n        // Recursively compare objects and arrays.\n        if (areArrays) {\n            // Compare array lengths to determine if a deep comparison is necessary.\n            length = a[LENGTH];\n            if (length !== b[LENGTH]) {\n                return BOOLEAN_FALSE;\n            }\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (length--) {\n                if (!eq(a[length], b[length], aStack, bStack)) {\n                    return BOOLEAN_FALSE;\n                }\n            }\n        } else {\n            // Deep compare objects.\n            var objKeys = keys(a),\n                key;\n            length = objKeys[LENGTH];\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\n            if (keys(b)[LENGTH] !== length) return BOOLEAN_FALSE;\n            while (length--) {\n                // Deep compare each member\n                key = objKeys[length];\n                if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return BOOLEAN_FALSE;\n            }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return BOOLEAN_TRUE;\n    },\n    /**\n     * @func\n     */\n    // Perform a deep comparison to check if two objects are equal.\n    isEqual = function (a, b) {\n        return eq(a, b, [], []);\n    },\n    /**\n     * @func\n     */\n    // very shallow clone\n    clone = function (obj) {\n        return map(obj, function (value) {\n            return value;\n        });\n    },\n    fullClone = function (obj) {\n        return parse(stringify(obj));\n    },\n    /**\n     * @func\n     */\n    wrap = function (obj, fn, noExecute) {\n        var newObj = {},\n            _isArray = isArray(obj),\n            wasfunction = isFunction(fn);\n        each(obj, function (value, key) {\n            if (_isArray) {\n                if (!wasfunction || noExecute) {\n                    newObj[value] = fn;\n                } else {\n                    newObj[value] = fn(value);\n                }\n            } else {\n                newObj[key] = fn(obj[key], key);\n            }\n        });\n        return newObj;\n    },\n    /**\n     * @func\n     */\n    // unshift = function (thing, items) {\n    //     return thing.unshift.apply(thing, items);\n    // },\n    /**\n     * @func\n     */\n    exports = function (obj) {\n        return extend(_, obj);\n    },\n    /**\n     * @func\n     */\n    Image = win.Image,\n    fetch = function (url, callback) {\n        var img = new Image();\n        url = stringifyQuery(url);\n        if (callback) {\n            img.onload = function () {\n                _.unshift(arguments, url);\n                callback.apply(this, arguments);\n            };\n        }\n        img.src = url;\n        return img;\n    },\n    passesFirstArgument = function (fn) {\n        return function (first) {\n            return fn(first);\n        };\n    },\n    concat = function () {\n        var base = [];\n        return base.concat.apply(base, map(arguments, passesFirstArgument(toArray)));\n    },\n    /**\n     * @func\n     */\n    concatUnique = function () {\n        return foldl(arguments, function (memo, argument) {\n            duff(argument, function (item) {\n                if (smartIndexOf(memo, item) === -1) {\n                    memo.push(item);\n                }\n            });\n            return memo;\n        }, []);\n    },\n    cycle = function (arr, num_) {\n        var length = arr[LENGTH],\n            num = num_ % length,\n            piece = arr.splice(num);\n        arr.unshift.apply(arr, piece);\n        return arr;\n    },\n    uncycle = function (arr, num_) {\n        var length = arr[LENGTH],\n            num = num_ % length,\n            piece = arr.splice(0, length - num);\n        arr.push.apply(arr, piece);\n        return arr;\n    },\n    isMatch = function (object, attrs) {\n        var key, i = 0,\n            keysResult = keys(attrs),\n            obj = Object(object);\n        return !find(keysResult, function (val) {\n            if (attrs[val] !== obj[val] || !(val in obj)) {\n                return BOOLEAN_TRUE;\n            }\n        });\n    },\n    matches = function (obj1) {\n        return function (obj2) {\n            return isMatch(obj2, obj1);\n        };\n    },\n    // uncycle = internalMambo(cycle),\n    pluck = function (arr, key) {\n        return map(arr, function (item) {\n            return result(item, key);\n        });\n    },\n    filter = function (obj, iteratee, context) {\n        var isArrayResult = isArrayLike(obj),\n            bound = bind(iteratee, context),\n            runCount = 0;\n        return foldl(obj, function (memo, item, key, all) {\n            runCount++;\n            if (bound(item, key, all)) {\n                if (isArrayResult) {\n                    memo.push(item);\n                } else {\n                    memo[key] = item;\n                }\n            }\n            return memo;\n        }, isArrayResult ? [] : {});\n    },\n    where = function (obj, attrs) {\n        return filter(obj, matches(attrs));\n    },\n    findWhere = function (obj, attrs) {\n        return find(obj, matches(attrs));\n    },\n    findLastWhere = function (obj, attrs) {\n        return findLast(obj, matches(attrs));\n    },\n    whereNot = function (obj, attrs) {\n        return filter(obj, negate(matches(attrs)));\n    },\n    parse = function (val_) {\n        var coerced, val = val_;\n        if (isString(val)) {\n            val = val.trim();\n            if ((val[0] === '{' && val[val[LENGTH] - 1] === '}') || (val[0] === '[' && val[val[LENGTH] - 1] === ']')) {\n                wraptry(function () {\n                    val = JSON.parse(val);\n                }, console.error);\n            } else {\n                if (val === 'true') {\n                    val = BOOLEAN_TRUE;\n                } else {\n                    coerced = +val;\n                    if (coerced === coerced) {\n                        val = coerced;\n                    } else {\n                        if (val === 'false') {\n                            val = BOOLEAN_FALSE;\n                        } else {\n                            if (val === 'null') {\n                                val = NULL;\n                            } else {\n                                if (val === 'undefined') {\n                                    val = UNDEFINED;\n                                } else {\n                                    if (val.slice(0, 8) === 'function') {\n                                        val = new FunctionConstructor('return ' + val)();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return val;\n    },\n    evaluate = function (context, string_) {\n        var split, string = string_.toString();\n        if (isFunction(string_)) {\n            split = string.split('{');\n            string = split.shift();\n            string = (string = split.join('{')).slice(0, string[LENGTH] - 1);\n        }\n        return new FunctionConstructor('context', 'with(context) {\\n' + string + '\\n}')(context);\n    },\n    debounce = function (func, wait, immediate) {\n        var timeout;\n        return function () {\n            var context = this,\n                args = arguments,\n                callNow = immediate && !timeout,\n                later = function () {\n                    timeout = NULL;\n                    if (!immediate) {\n                        func.apply(context, args);\n                    }\n                };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n            return timeout;\n        };\n    },\n    returnDysmorphicBase = function (obj) {\n        return isArrayLike(obj) ? [] : {};\n    },\n    map = function (objs, iteratee, context) {\n        var collection = returnDysmorphicBase(objs),\n            bound = bind(iteratee, context);\n        return !objs ? collection : each(objs, function (item, index) {\n            collection[index] = bound(item, index, objs);\n        }) && collection;\n    },\n    arrayLikeToArray = function (arrayLike) {\n        if (arrayLike[LENGTH] === 1) {\n            return [arrayLike[0]];\n        } else {\n            return Array.apply(NULL, arrayLike);\n        }\n    },\n    objectToArray = function (obj) {\n        return !obj ? [] : foldl(obj, function (memo, item) {\n            memo.push(item);\n            return memo;\n        }, []);\n    },\n    toArray = function (object, delimiter) {\n        return isArrayLike(object) ? isArray(object) ? object : arrayLikeToArray(object) : (isString(object) ? object.split(isString(delimiter) ? delimiter : EMPTY_STRING) : (delimiter === BOOLEAN_TRUE ? objectToArray(object) : [object]));\n    },\n    flattenArray = function (list, deep_, handle) {\n        var deep = !!deep_;\n        return foldl(list, function (memo, item_) {\n            var item;\n            if (isArrayLike(item_)) {\n                item = deep ? flattenArray(item_, deep, handle) : item_;\n                return memo.concat(item);\n            } else {\n                if (handle) {\n                    handle(item_);\n                }\n                memo.push(item_);\n                return memo;\n            }\n        }, []);\n    },\n    flatten = function (list, deep, handler) {\n        return flattenArray(isArrayLike(list) ? list : objectToArray(list), deep, handler);\n    },\n    gather = function (list, handler) {\n        var newList = [];\n        return newList.concat.apply(newList, map(list, handler));\n    },\n    baseClamp = function (number, lower, upper) {\n        if (number === number) {\n            if (upper !== UNDEFINED) {\n                number = number <= upper ? number : upper;\n            }\n            if (lower !== UNDEFINED) {\n                number = number >= lower ? number : lower;\n            }\n        }\n        return number;\n    },\n    safeInteger = function (number_) {\n        return baseClamp(number_, MIN_SAFE_VALUE, MAX_SAFE_VALUE);\n    },\n    isValidInteger = function (number) {\n        return number < MAX_VALUE && number > MIN_VALUE;\n    },\n    clampInteger = function (number) {\n        return baseClamp(number, MIN_VALUE, MAX_VALUE);\n    },\n    floatToInteger = function (value) {\n        var remainder = value % 1;\n        return value === value ? (remainder ? value - remainder : value) : 0;\n    },\n    toInteger = function (number, notSafe) {\n        var converted;\n        return floatToInteger((converted = +number) == number ? (notSafe ? converted : safeInteger(converted)) : 0);\n    },\n    isLength = function (number) {\n        return isNumber(number) && isValidInteger(number);\n    },\n    toLength = function (number) {\n        return number ? clampInteger(toInteger(number, BOOLEAN_TRUE), 0, MAX_ARRAY_LENGTH) : 0;\n    },\n    /**\n     * @func\n     */\n    throttle = function (fn, threshold, scope) {\n        var last,\n            deferTimer;\n        if (!threshold) {\n            threshold = 250;\n        }\n        return function () {\n            var context = scope || this,\n                _now = now(),\n                args = arguments;\n            if (last && _now < last + threshold) {\n                // hold on to it\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = _now;\n                    fn.apply(context, args);\n                }, threshold);\n            } else {\n                last = _now;\n                fn.apply(context, args);\n            }\n        };\n    },\n    /**\n     * @func\n     */\n    stringifyQuery = function (obj) {\n        var val, n, base = obj.url,\n            query = [];\n        if (isObject(obj)) {\n            each(obj.query, function (val, n) {\n                if (val !== UNDEFINED) {\n                    val = encodeURIComponent(stringify(val));\n                    query.push(n + '=' + val);\n                }\n            });\n            if (query[LENGTH]) {\n                base += '?';\n            }\n            base += query.join('&');\n            if (obj.hash) {\n                obj.hash = isObject(obj.hash) ? encodeURI(stringify(obj.hash)) : hash;\n                base += ('#' + obj.hash);\n            }\n        } else {\n            base = obj;\n        }\n        return base;\n    },\n    protoProperty = function (instance, key, farDown) {\n        var val, proto, constructor = previousConstructor(instance);\n        farDown = farDown || 1;\n        do {\n            proto = constructor[PROTOTYPE];\n            val = proto[key];\n            constructor = previousConstructor(proto);\n        } while (--farDown > 0 && constructor && isFinite(farDown));\n        return val;\n    },\n    uuid = function () {\n        var cryptoCheck = 'crypto' in win && 'getRandomValues' in crypto,\n            sid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var rnd, r, v;\n                if (cryptoCheck) {\n                    rnd = win.crypto.getRandomValues(new Uint32Array(1));\n                    if (rnd === UNDEFINED) {\n                        cryptoCheck = BOOLEAN_FALSE;\n                    }\n                }\n                if (!cryptoCheck) {\n                    rnd = [Math.floor(Math.random() * 10000000000)];\n                }\n                rnd = rnd[0];\n                r = rnd % 16;\n                v = (c === 'x') ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n        return cryptoCheck ? sid : 'SF' + sid;\n    },\n    intendedApi = function (fn) {\n        return function (one, two) {\n            var context = this;\n            intendedObject(one, two, fn, context);\n            return context;\n        };\n    },\n    intendedIteration = function (key, value, iterator_, context) {\n        var keysResult, isObjectResult = isObject(key),\n            iterator = bind(iterator_, context);\n        if (isObjectResult) {\n            keysResult = keys(key);\n        }\n        return function (one, two, three, four, five, six) {\n            if (isObjectResult) {\n                duff(keysResult, function (key_) {\n                    iterator(key_, key[key_], one, two, three, four, five, six);\n                });\n            } else {\n                iterator(key, value, one, two, three, four, five, six);\n            }\n        };\n    },\n    intendedObject = function (key, value, fn_, ctx) {\n        var fn = ctx ? bind(fn_, ctx) : fn_,\n            obj = isObject(key) ? key : BOOLEAN_FALSE;\n        if (obj) {\n            each(obj, reverseParams(fn));\n        } else {\n            fn(key, value);\n        }\n    },\n    reverseParams = function (iteratorFn) {\n        return function (value, key, third) {\n            iteratorFn(key, value, third);\n        };\n    },\n    /**\n     * @func\n     */\n    roundFloat = function (val, power, base) {\n        var mult;\n        if (!isNumber(power)) {\n            power = 1;\n        }\n        mult = Math.pow(base || 10, power);\n        return (parseInt((mult * val), 10) / mult);\n    },\n    result = function (obj, str, arg, knows) {\n        return obj == NULL ? obj : (isFunction(obj[str]) ? obj[str](arg) : (isObject(obj) ? obj[str] : obj));\n    },\n    maths = Math,\n    mathArray = function (method) {\n        return function (args) {\n            return maths[method].apply(maths, args);\n        };\n    },\n    ensureFunction = function (fn) {\n        return function (_fn) {\n            _fn = _fn || noop;\n            return fn.call(this, _fn);\n        };\n    },\n    /**\n     * @func\n     */\n    // Create a reducing function iterating left or right.\n    createReduce = function (dir) {\n        // Optimized iterator function as using arguments[LENGTH]\n        // in the main function will deoptimize the, see #1991.\n        var iterator = function (obj, iteratee, memo, keys, index, length) {\n            var currentKey;\n            for (; index >= 0 && index < length; index += dir) {\n                currentKey = keys ? keys[index] : index;\n                memo = iteratee(memo, obj[currentKey], currentKey, obj);\n            }\n            return memo;\n        };\n        return function (obj, iteratee, memo, context) {\n            // iteratee = optimizeCb(iteratee, context, 4);\n            var actualKeys = !isArrayLike(obj) && keys(obj),\n                length = (actualKeys || obj)[LENGTH],\n                index = dir > 0 ? 0 : length - 1;\n            // Determine the initial value if none is provided.\n            if (arguments[LENGTH] < 3) {\n                memo = obj[actualKeys ? actualKeys[index] : index];\n                index += dir;\n            }\n            return iterator(obj, iteratee, memo, actualKeys, index, length);\n        };\n    },\n    // **Reduce** builds up a single result from a list of values, aka `inject`,\n    // or `foldl`.\n    /**\n     * @func\n     */\n    foldl = createReduce(1),\n    // The right-associative version of reduce, also known as `foldr`.\n    /**\n     * @func\n     */\n    foldr = createReduce(-1),\n    some = function (array, handler) {\n        return foldl(array, function (memo, value, key) {\n            if (handler(value, key, array)) {\n                memo.push(value);\n            }\n            return memo;\n        }, []);\n    },\n    _console = win.console || {},\n    _log = _console.log || noop,\n    // use same name so that we can ensure browser compatability\n    console = extend(wrap(gapSplit('trace log dir error'), function (key) {\n        var method = _console[key] || _log;\n        return function () {\n            return method.apply(_console, arguments);\n        };\n    }), {\n        exception: function (options) {\n            throw new Error(options && options.message || options);\n        },\n        assert: function (boolean_, options) {\n            if (!boolean_) {\n                exception(options);\n            }\n        }\n    }),\n    // make global\n    exception = console.exception,\n    // mitigate\n    wraptry = function (trythis, errthat, finalfunction) {\n        var returnValue, err = NULL;\n        try {\n            returnValue = trythis();\n        } catch (e) {\n            err = e;\n            returnValue = errthat ? errthat(e) : returnValue;\n        } finally {\n            returnValue = finalfunction ? finalfunction(err, returnValue) : returnValue;\n        }\n        return returnValue;\n    },\n    // directed toggle\n    toggle = function (current, which) {\n        if (which === UNDEFINED) {\n            return !current;\n        } else {\n            return !!which;\n        }\n    },\n    returns = function (thing) {\n        return function () {\n            return thing;\n        };\n    },\n    flow = function (bool, list_) {\n        var list = bool === BOOLEAN_TRUE ? list_ : arguments,\n            length = list[LENGTH];\n        return function () {\n            var start = 1,\n                args = arguments,\n                arg = list[0].apply(this, args);\n            while (start < length) {\n                arg = list[start].call(this, arg);\n                ++start;\n            }\n            return arg;\n        };\n    },\n    is = {\n        number: isNumber,\n        string: isString,\n        object: isObject,\n        nan: isNaN,\n        array: isArray,\n        'function': isFunction,\n        boolean: isBoolean,\n        'null': isNull,\n        length: isLength,\n        validInteger: isValidInteger,\n        arrayLike: isArrayLike\n    },\n    _ = app._ = {\n        is: is,\n        performance: performance,\n        months: gapSplit('january feburary march april may june july august september october november december'),\n        weekdays: gapSplit('sunday monday tuesday wednesday thursday friday saturday'),\n        constructorWrapper: constructorWrapper,\n        stringifyQuery: stringifyQuery,\n        intendedObject: intendedObject,\n        intendedIteration: intendedIteration,\n        ensureFunction: ensureFunction,\n        parseDecimal: parseDecimal,\n        flatten: flatten,\n        gather: gather,\n        isArrayLike: isArrayLike,\n        isInstance: isInstance,\n        hasEnumBug: hasEnumBug,\n        roundFloat: roundFloat,\n        factories: factories,\n        // listSlice: listSlice,\n        fullClone: fullClone,\n        toBoolean: toBoolean,\n        stringify: stringify,\n        splitGen: splitGen,\n        gapSplit: gapSplit,\n        values: values,\n        zip: zip,\n        object: object,\n        // uniqueId: uniqueId,\n        wraptry: wraptry,\n        toString: toString,\n        throttle: throttle,\n        debounce: debounce,\n        protoProperty: protoProperty,\n        protoProp: protoProperty,\n        // reverse: reverse,\n        binaryIndexOf: binaryIndexOf,\n        indexOfNaN: indexOfNaN,\n        toInteger: toInteger,\n        indexOf: indexOf,\n        joinGen: joinGen,\n        toArray: toArray,\n        isEqual: isEqual,\n        // unshift: unshift,\n        gapJoin: gapJoin,\n        isArray: isArray,\n        isEmpty: isEmpty,\n        // splice: splice,\n        returns: returns,\n        isBoolean: isBoolean,\n        invert: invert,\n        extend: extend,\n        noop: noop,\n        toggle: toggle,\n        reduce: foldl,\n        foldl: foldl,\n        foldr: foldr,\n        now: now,\n        some: some,\n        map: map,\n        result: result,\n        isUndefined: isUndefined,\n        isFunction: isFunction,\n        isObject: isObject,\n        isNumber: isNumber,\n        isFinite: isFinite,\n        isString: isString,\n        isBlank: isBlank,\n        isNull: isNull,\n        isNaN: isNaN,\n        eachProxy: eachProxy,\n        exports: exports,\n        allKeys: allKeys,\n        evaluate: evaluate,\n        // slice: slice,\n        parse: parse,\n        // shift: shift,\n        merge: merge,\n        fetch: fetch,\n        // split: split,\n        clone: clone,\n        bind: bind,\n        duff: duff,\n        duffRight: duffRight,\n        eachRight: eachRight,\n        iterates: iterates,\n        sort: sort,\n        // join: join,\n        wrap: wrap,\n        uuid: uuid,\n        keys: keys,\n        once: once,\n        each: each,\n        // push: push,\n        flow: flow,\n        // pop: pop,\n        has: has,\n        negate: negate,\n        pI: pI,\n        createPredicateIndexFinder: createPredicateIndexFinder,\n        findIndex: findIndex,\n        findLastIndex: findLastIndex,\n        validKey: validKey,\n        finder: finder,\n        find: find,\n        findLast: findLast,\n        console: console,\n        min: mathArray('min'),\n        max: mathArray('max'),\n        arrayLikeToArray: arrayLikeToArray,\n        objectToArray: objectToArray,\n        math: wrap(gapSplit('E LN2 LN10 LOG2E LOG10E PI SQRT1_2 SQRT2 abs acos acosh asin asinh atan atan2 atanh cbrt ceil clz32 cos cosh exp expm1 floor fround hypot imul log log1p log2 log10 pow random round sign sin sinh sqrt tan tanh trunc'), function (key) {\n            return Math[key];\n        })\n    };\n/**\n * @class Extendable\n */\nfunction Extendable(attributes, options) {\n    return this;\n}\nfactories.Extendable = constructorWrapper(Extendable);","var UNDEFINED, win = window,\n    doc = win.document,\n    EMPTY_STRING = '',\n    SPACE = ' ',\n    HYPHEN = '-',\n    PERIOD = '.',\n    SLASH = '/',\n    HASHTAG = '#',\n    PIXELS = 'px',\n    ID = 'id',\n    DESTROY = 'destroy',\n    BEFORE_DESTROY = BEFORE_COLON + DESTROY,\n    DESTROYING = 'destroying',\n    TO_STRING = 'toString',\n    TO_JSON = 'toJSON',\n    VALUE_OF = 'valueOf',\n    PROTOTYPE = 'prototype',\n    CONSTRUCTOR = 'constructor',\n    CURRENT = 'current',\n    PREVIOUS = 'previous',\n    NAME = 'name',\n    TYPE = 'type',\n    SELECTOR = 'selector',\n    ELEMENT = 'element',\n    CURRENT = 'current',\n    CHILD = 'child',\n    COLON = ':',\n    NONE = 'none',\n    HIDDEN = 'hidden',\n    BEFORE = 'before',\n    CHANGE = 'change',\n    TARGET = 'target',\n    ORIGIN = 'origin',\n    BEFORE_COLON = BEFORE + COLON,\n    CHANGE_COLON = CHANGE + COLON,\n    RESET = 'reset',\n    ATTRIBUTES = 'attributes',\n    DATA = 'data',\n    PARENT = 'parent',\n    DESTROY = 'destroy',\n    LENGTH = 'length',\n    OBJECT = 'object',\n    STRING = 'string',\n    BOOLEAN = 'boolean',\n    FUNCTION = 'function',\n    INDEX_OF = 'indexOf',\n    WINDOW = 'window',\n    DOCUMENT = 'document',\n    WRITE = 'write',\n    STACK = 'stack',\n    START = 'start',\n    STOP = 'stop',\n    COMPONENTS = 'components',\n    CLASS = 'class',\n    CLASSNAME = 'className',\n    TOP = 'top',\n    LEFT = 'left',\n    RIGHT = 'right',\n    BOTTOM = 'bottom',\n    WIDTH = 'width',\n    INDEX_OF = 'indexOf',\n    __ELID__ = '__elid__',\n    HEIGHT = 'height',\n    INDEX = 'index',\n    INNER_HEIGHT = 'innerHeight',\n    INNER_WIDTH = 'innerWidth',\n    DISPATCH_EVENT = 'dispatchEvent',\n    HTTP = 'http',\n    HTTPS = HTTP + 's',\n    TO_ARRAY = 'toArray',\n    CONSTRUCTOR_KEY = '__' + CONSTRUCTOR + '__',\n    LOCATION = 'location',\n    EXTEND = 'extend',\n    STYLE = 'style',\n    BODY = 'body',\n    BOOLEAN_TRUE = !0,\n    BOOLEAN_FALSE = !1,\n    INFINITY = Infinity,\n    NEGATIVE_INFINITY = -INFINITY,\n    BIG_INTEGER = 32767,\n    NEGATIVE_BIG_INTEGER = BIG_INTEGER - 1,\n    TWO_TO_THE_31 = 2147483647,\n    NULL = null;","app.scope(function (app) {\n    app.shims = function (win) {\n        var fn = function () {\n            var win = this,\n                lengthString = 'length';\n            win.performance = win.performance || {};\n            win.performance.now = (function () {\n                var performance = win.performance;\n                return performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function () {\n                    return new Date().getTime();\n                };\n            })();\n\n            function f(n) {\n                return n < 10 ? \"0\" + n : n;\n            }\n\n            function quote(string) {\n                escapable.lastIndex = 0;\n                return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n                    var c = meta[a];\n                    return typeof c === \"string\" ? c : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n                }) + '\"' : '\"' + string + '\"';\n            }\n\n            function str(key, holder) {\n                var i, k, v, length, mind = gap,\n                    partial, value = holder[key];\n                if (value && typeof value === \"object\" && typeof value.toJSON === \"function\") {\n                    value = value.toJSON(key);\n                }\n                if (typeof rep === \"function\") {\n                    value = rep.call(holder, key, value);\n                }\n                switch (typeof value) {\n                case \"string\":\n                    return quote(value);\n                case \"number\":\n                    return isFinite(value) ? String(value) : \"null\";\n                case \"boolean\":\n                case \"null\":\n                    return String(value);\n                case \"object\":\n                    if (!value) {\n                        return \"null\";\n                    }\n                    gap += indent;\n                    partial = [];\n                    if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n                        length = value[lengthString];\n                        for (i = 0; i < length; i += 1) {\n                            partial[i] = str(i, value) || \"null\";\n                        }\n                        v = partial[lengthString] === 0 ? \"[]\" : gap ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\" : \"[\" + partial.join(\",\") + \"]\";\n                        gap = mind;\n                        return v;\n                    }\n                    if (rep && typeof rep === \"object\") {\n                        length = rep[lengthString];\n                        for (i = 0; i < length; i += 1) {\n                            if (typeof rep[i] === \"string\") {\n                                k = rep[i];\n                                v = str(k, value);\n                                if (v) {\n                                    partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                                }\n                            }\n                        }\n                    } else {\n                        for (k in value) {\n                            if (Object.prototype.hasOwnProperty.call(value, k)) {\n                                v = str(k, value);\n                                if (v) {\n                                    partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                                }\n                            }\n                        }\n                    }\n                    v = partial[lengthString] === 0 ? \"{}\" : gap ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\" : \"{\" + partial.join(\",\") + \"}\";\n                    gap = mind;\n                    return v;\n                }\n            }\n            if (!JSON) {\n                if (typeof Date.prototype.toJSON !== \"function\") {\n                    Date.prototype.toJSON = function (key) {\n                        return isFinite(this.valueOf()) ? this.getUTCFullYear() + \"-\" + f(this.getUTCMonth() + 1) + \"-\" + f(this.getUTCDate()) + \"T\" + f(this.getUTCHours()) + \":\" + f(this.getUTCMinutes()) + \":\" + f(this.getUTCSeconds()) + \"Z\" : null;\n                    };\n                    String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (key) {\n                        return this.valueOf();\n                    };\n                }\n                var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n                    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n                    gap, indent, meta = {\n                        \"\\b\": \"\\\\b\",\n                        \"\\t\": \"\\\\t\",\n                        \"\\n\": \"\\\\n\",\n                        \"\\f\": \"\\\\f\",\n                        \"\\r\": \"\\\\r\",\n                        '\"': '\\\\\"',\n                        \"\\\\\": \"\\\\\\\\\"\n                    },\n                    rep;\n                if (typeof JSON.stringify !== \"function\") {\n                    JSON.stringify = function (value, replacer, space) {\n                        var i;\n                        gap = \"\";\n                        indent = \"\";\n                        if (typeof space === \"number\") {\n                            for (i = 0; i < space; i += 1) {\n                                indent += \" \";\n                            }\n                        } else {\n                            if (typeof space === \"string\") {\n                                indent = space;\n                            }\n                        }\n                        rep = replacer;\n                        if (replacer && typeof replacer !== \"function\" && (typeof replacer !== \"object\" || typeof replacer[lengthString] !== \"number\")) {\n                            throw new Error(\"JSON.stringify\");\n                        }\n                        return str(\"\", {\n                            \"\": value\n                        });\n                    };\n                }\n                if (typeof JSON.parse !== \"function\") {\n                    JSON.parse = function (text, reviver) {\n                        var j;\n\n                        function walk(holder, key) {\n                            var k, v, value = holder[key];\n                            if (value && typeof value === \"object\") {\n                                for (k in value) {\n                                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                                        v = walk(value, k);\n                                        if (v !== undefined) {\n                                            value[k] = v;\n                                        } else {\n                                            delete value[k];\n                                        }\n                                    }\n                                }\n                            }\n                            return reviver.call(holder, key, value);\n                        }\n                        text = String(text);\n                        cx.lastIndex = 0;\n                        if (cx.test(text)) {\n                            text = text.replace(cx, function (a) {\n                                return \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n                            });\n                        }\n                        if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, \"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g, \"\"))) {\n                            j = Function.prototype.constructor(\"(\" + text + \")\");\n                            return typeof reviver === \"function\" ? walk({\n                                \"\": j\n                            }, \"\") : j;\n                        }\n                        throw new SyntaxError(\"JSON.parse\");\n                    };\n                }\n            }\n            if (!Function.prototype.bind) {\n                Function.prototype.bind = function (oThis) {\n                    if (typeof this !== 'function') {\n                        // closest thing possible to the ECMAScript 5\n                        // internal IsCallable function\n                        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n                    }\n                    var aArgs = Array.prototype.slice.call(arguments, 1),\n                        fToBind = this,\n                        FNOP = function () {},\n                        fBound = function () {\n                            return fToBind.apply(this instanceof FNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n                        };\n                    if (this.prototype) {\n                        // native functions don't have a prototype\n                        FNOP.prototype = this.prototype;\n                    }\n                    fBound.prototype = new FNOP();\n                    return fBound;\n                };\n            }\n            win.matchMedia = win.matchMedia || function () {\n                // \"use strict\";\n                // For browsers that support matchMedium api such as IE 9 and webkit\n                var styleMedia = (win.styleMedia || win.media);\n                // For those that don't support matchMedium\n                if (!styleMedia) {\n                    var style = document.createElement('style'),\n                        script = document.getElementsByTagName('script')[0],\n                        info = null;\n                    style.type = 'text/css';\n                    style.id = 'matchmediajs-test';\n                    script.parentNode.insertBefore(style, script);\n                    // 'style.currentStyle' is used by IE <= 8 and 'win.getComputedStyle' for all other browsers\n                    info = ('getComputedStyle' in win) && win.getComputedStyle(style, null) || style.currentStyle;\n                    styleMedia = {\n                        matchMedium: function (media) {\n                            var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n                            // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                            if (style.styleSheet) {\n                                style.styleSheet.cssText = text;\n                            } else {\n                                style.textContent = text;\n                            }\n                            // Test if media query is true or false\n                            return info.width === '1px';\n                        }\n                    };\n                }\n                return function (media) {\n                    media = media || 'all';\n                    return {\n                        matches: styleMedia.matchMedium(media),\n                        media: media\n                    };\n                };\n            }();\n        };\n        fn.call(win);\n    };\n    app.shims(win);\n});","var cacheable = function (fn) {\n        var cache = {};\n        return function (input) {\n            if (!has(cache, input)) {\n                cache[input] = fn(input);\n            }\n            return cache[input];\n        };\n    },\n    categoricallyCacheable = function (fn, baseCategory) {\n        var cache = {};\n        return function (string, category) {\n            var cacher;\n            category = category || baseCategory;\n            cacher = cache[category] = cache[category] || cacheable(fn(category));\n            return cacher(string);\n        };\n    },\n    string = _.extend(wrap(gapSplit('toLowerCase toUpperCase trim'), function (method) {\n        return cacheable(function (item) {\n            return item[method]();\n        });\n    }), wrap(gapSplit('match search'), function (method) {\n        return categoricallyCacheable(function (input) {\n            return function (item) {\n                return item[method](input);\n            };\n        });\n    })),\n    wrapAll = function (fn) {\n        return function () {\n            var args = toArray(arguments),\n                ctx = this;\n            return map(args[0], function (thing) {\n                args[0] = thing;\n                return fn.apply(ctx, args);\n            });\n        };\n    },\n    deprefix = function (str, prefix, unUpcase) {\n        var nuStr = str.slice(prefix[LENGTH]),\n            first = nuStr[0];\n        if (unUpcase) {\n            first = nuStr[0].toLowerCase();\n        }\n        nuStr = first + nuStr.slice(1);\n        return nuStr;\n    },\n    deprefixAll = wrapAll(deprefix),\n    prefix = function (str, prefix, camelcase, splitter) {\n        var myStr = prefix + str;\n        if (camelcase !== UNDEFINED) {\n            myStr = prefix + (splitter || HYPHEN) + str;\n            if (camelcase) {\n                myStr = camelCase(myStr, splitter);\n            } else {\n                myStr = unCamelCase(myStr, splitter);\n            }\n        }\n        return myStr;\n    },\n    prefixAll = wrapAll(prefix),\n    parseObject = (function () {\n        var cache = {};\n        return function (string) {\n            var found = cache[string];\n            if (!found) {\n                cache[string] = found = new Function[CONSTRUCTOR]('return ' + string);\n            }\n            return found();\n        };\n    }()),\n    uniqueId = (function () {\n        var stash = {};\n        var globalPrefix = 0;\n        return function (prefix) {\n            var value;\n            if (prefix) {\n                stash[prefix] = stash[prefix] || 0;\n                ++stash[prefix];\n                value = stash[prefix];\n            } else {\n                ++globalPrefix;\n                value = globalPrefix;\n            }\n            return prefix ? prefix + value : value;\n        };\n    }()),\n    /**\n     * @func\n     */\n    camelCase = categoricallyCacheable(function (splitter) {\n        return function (str) {\n            var i, s, val;\n            if (isString(str)) {\n                if (str[0] === splitter) {\n                    str = str.slice(1);\n                }\n                s = str.split(splitter);\n                for (i = s[LENGTH] - 1; i >= 1; i--) {\n                    if (s[i]) {\n                        s[i] = upCase(s[i]);\n                    }\n                }\n                val = s.join(EMPTY_STRING);\n            }\n            return val;\n        };\n    }, HYPHEN),\n    /**\n     * @func\n     */\n    upCase = cacheable(function (s) {\n        return s[0].toUpperCase() + s.slice(1);\n    }),\n    /**\n     * @func\n     */\n    unCamelCase = categoricallyCacheable(function (splitter) {\n        return function (str) {\n            return str.replace(/([a-z])([A-Z])/g, '$1' + splitter + '$2').replace(/[A-Z]/g, function (s) {\n                return s.toLowerCase();\n            });\n        };\n    }, HYPHEN),\n    snakeCase = function (string) {\n        return unCamelCase(string, '_');\n    },\n    /**\n     * @func\n     */\n    customUnits = categoricallyCacheable(function (unitList_) {\n        var lengthHash = {},\n            hash = {},\n            lengths = [],\n            unitList = gapSplit(unitList_),\n            sortedUnitList = unitList.sort(function (a, b) {\n                var aLength = a[LENGTH],\n                    bLength = b[LENGTH],\n                    value = _.max([-1, _.min([1, aLength - bLength])]);\n                hash[a] = hash[b] = BOOLEAN_TRUE;\n                if (!lengthHash[aLength]) {\n                    lengthHash[aLength] = BOOLEAN_TRUE;\n                    lengths.push(aLength);\n                }\n                if (!lengthHash[bLength]) {\n                    lengthHash[bLength] = BOOLEAN_TRUE;\n                    lengths.push(bLength);\n                }\n                return -1 * (value === 0 ? (a > b ? -1 : 1) : value);\n            });\n        lengths.sort(function (a, b) {\n            return -1 * _.max([-1, _.min([1, a - b])]);\n        });\n        return function (str_) {\n            var ch, unitStr, unit,\n                i = 0,\n                str = (str_ + EMPTY_STRING).trim(),\n                length = str[LENGTH];\n            while (lengths[i]) {\n                if (lengths[i] < length) {\n                    unit = str.substr(length - lengths[i], length);\n                    if (hash[unit]) {\n                        return unit;\n                    }\n                }\n                i++;\n            }\n            return BOOLEAN_FALSE;\n        };\n    }),\n    baseUnitList = gapSplit('px em rem ex in cm % vh vw pc pt mm vmax vmin'),\n    units = function (str) {\n        return customUnits(str, baseUnitList);\n    },\n    isHttp = cacheable(function (str) {\n        var ret = !1;\n        if ((str.indexOf(HTTP) === 0 && str.split('//')[LENGTH] >= 2) || str.indexOf('//') === 0) {\n            ret = !0;\n        }\n        return ret;\n    }),\n    parseHash = cacheable(function (url) {\n        var hash = EMPTY_STRING,\n            hashIdx = smartIndexOf(url, '#') + 1;\n        if (hashIdx) {\n            hash = url.slice(hashIdx - 1);\n        }\n        return hash;\n    }),\n    itemIs = function (list, item, index) {\n        return list[index || 0] === item;\n    },\n    startsWith = itemIs,\n    parseSearch = function (search) {\n        var parms, temp, items, val, converted, i = 0,\n            dcUriComp = win.decodeURIComponent;\n        if (!search) {\n            search = win[LOCATION].search;\n        }\n        items = search.slice(1).split(\"&\");\n        parms = {};\n        for (; i < items[LENGTH]; i++) {\n            temp = items[i].split(\"=\");\n            if (temp[0]) {\n                if (temp[LENGTH] < 2) {\n                    temp[PUSH](EMPTY_STRING);\n                }\n                val = temp[1];\n                val = dcUriComp(val);\n                if (val[0] === \"'\" || val[0] === '\"') {\n                    val = val.slice(1, val[LENGTH] - 1);\n                }\n                if (val === BOOLEAN_TRUE + EMPTY_STRING) {\n                    val = BOOLEAN_TRUE;\n                }\n                if (val === BOOLEAN_FALSE + EMPTY_STRING) {\n                    val = BOOLEAN_FALSE;\n                }\n                if (isString(val)) {\n                    converted = +val;\n                    if (converted == val && converted + EMPTY_STRING === val) {\n                        val = converted;\n                    }\n                }\n                parms[dcUriComp(temp[0])] = val;\n            }\n        }\n        return parms;\n    },\n    urlToString = function (object) {\n        object.toString = function () {\n            return object.href;\n        };\n        object.replace = function (newlocation) {\n            var newparsed = parseUrl(newlocation);\n            newparsed.previous = object;\n            return newparsed;\n        };\n        return object;\n    },\n    reference = cacheable(function (str) {\n        var match;\n        if (str) {\n            if (!isString(str)) {\n                str = str.referrer;\n            }\n            if (isString(str)) {\n                // gives it a chance to match\n                str += SLASH;\n                match = str.match(/^http?:\\/\\/.*?\\//);\n                if (match) {\n                    match = match[0].slice(0, match[0][LENGTH] - 1);\n                }\n            }\n        }\n        return match || EMPTY_STRING;\n    }),\n    protocols = [HTTP, HTTPS, 'file', 'about', 'javascript'],\n    extraslashes = {\n        'http:': BOOLEAN_TRUE,\n        'https:': BOOLEAN_TRUE\n    },\n    parseUrl = function (url__, startPath_, windo_) {\n        var garbage, href, origin, hostnameSplit, questionable, firstSlash, object, startPath, hostSplit, originNoProtocol, windo = windo_ || window,\n            url = url__ || EMPTY_STRING,\n            search = EMPTY_STRING,\n            hash = EMPTY_STRING,\n            host = EMPTY_STRING,\n            pathname = EMPTY_STRING,\n            port = EMPTY_STRING,\n            hostname = EMPTY_STRING,\n            searchIdx = indexOf(url, '?') + 1,\n            searchObject = {},\n            protocolLength = protocols[LENGTH],\n            doubleSlash = SLASH + SLASH,\n            protocolSplit = url.split(COLON),\n            globalProtocol = windo.location.protocol,\n            protocol_ = (protocolSplit[LENGTH] - 1) && (questionable = protocolSplit.shift()),\n            protocol = ((protocol_ && find(protocols, function (question) {\n                return question === questionable;\n            }) || globalProtocol.slice(0, globalProtocol[LENGTH] - 1))) + COLON;\n        if (searchIdx) {\n            search = url.slice(searchIdx - 1);\n            hash = parseHash(search);\n        } else {\n            hash = parseHash(url);\n        }\n        if (searchIdx) {\n            search = search.split(hash).join(EMPTY_STRING);\n            searchObject = parseSearch(search);\n            url = url.slice(0, searchIdx - 1);\n        }\n        if (url[0] === SLASH && url[1] === SLASH) {\n            protocol = win.location.protocol;\n        } else {\n            while (protocolLength-- && !protocol) {\n                if (url.slice(0, protocols[protocolLength][LENGTH]) === protocols[protocolLength]) {\n                    protocol = protocols[protocolLength];\n                }\n            }\n            if (!protocol) {\n                protocol = HTTP;\n            }\n        }\n        // passed a protocol\n        protocolSplit = url.split(COLON);\n        if (protocolSplit[LENGTH] - 1) {\n            // protocolSplit\n            questionable = protocolSplit.shift();\n            hostSplit = protocolSplit.join(COLON).split(SLASH);\n            while (!host) {\n                host = hostSplit.shift();\n            }\n            hostnameSplit = host.split(COLON);\n            hostname = hostnameSplit.shift();\n            port = hostnameSplit[LENGTH] ? hostnameSplit[0] : EMPTY_STRING;\n            garbage = protocolSplit.shift();\n            url = protocolSplit.join(COLON).slice(host[LENGTH]);\n        } else {\n            host = windo.location.host;\n            port = windo.location.port;\n            hostname = windo.location.hostname;\n        }\n        startPath = windo.location.pathname.slice(1);\n        if (url[0] === SLASH && url[1] !== SLASH) {\n            url = url.slice(1);\n            startPath = EMPTY_STRING;\n        }\n        if (url[0] === PERIOD) {\n            url = url.slice(2);\n        }\n        pathname = SLASH + startPath + url;\n        origin = protocol + (extraslashes[protocol] ? SLASH + SLASH : EMPTY_STRING) + hostname + (port ? COLON + port : EMPTY_STRING);\n        href = origin + pathname + (search || EMPTY_STRING) + (hash || EMPTY_STRING);\n        return urlToString({\n            passed: url__,\n            port: port,\n            hostname: hostname,\n            pathname: pathname,\n            search: search.slice(1),\n            host: host,\n            hash: hash.slice(1),\n            href: href,\n            protocol: protocol.slice(0, protocol[LENGTH] - 1),\n            friendlyProtocol: !extraslashes[protocol],\n            origin: origin,\n            searchObject: searchObject\n        });\n    },\n    SIXTY = 60,\n    SEVEN = 7,\n    THIRTY = 30,\n    TWENTY_FOUR = 24,\n    ONE_THOUSAND = 1000,\n    THREE_HUNDRED_SIXTY_FIVE = 365,\n    ONE_THOUSAND_SIXTY = ONE_THOUSAND * SIXTY,\n    THREE_HUNDRED_SIXTY_THOUSAND = ONE_THOUSAND_SIXTY * SIXTY,\n    EIGHTY_SIX_MILLION_FOUR_HUNDRED_THOUSAND = THREE_HUNDRED_SIXTY_THOUSAND * TWENTY_FOUR,\n    SIX_HUNDRED_FOUR_MILLION_EIGHT_HUNDRED_THOUSAND = THREE_HUNDRED_SIXTY_THOUSAND * SEVEN,\n    TWO_BILLION_FIVE_HUNDRED_NINETY_TWO_MILLION = THREE_HUNDRED_SIXTY_THOUSAND * THIRTY,\n    THIRTY_ONE_BILLION_FIVE_HUNDRED_THIRTY_SIX_MILLION = THREE_HUNDRED_SIXTY_THOUSAND * THREE_HUNDRED_SIXTY_FIVE,\n    NUMBERS_LENGTH = {\n        ms: 1,\n        secs: ONE_THOUSAND,\n        s: ONE_THOUSAND,\n        mins: ONE_THOUSAND_SIXTY,\n        hrs: THREE_HUNDRED_SIXTY_THOUSAND,\n        days: EIGHTY_SIX_MILLION_FOUR_HUNDRED_THOUSAND,\n        wks: SIX_HUNDRED_FOUR_MILLION_EIGHT_HUNDRED_THOUSAND,\n        mnths: TWO_BILLION_FIVE_HUNDRED_NINETY_TWO_MILLION,\n        yrs: THIRTY_ONE_BILLION_FIVE_HUNDRED_THIRTY_SIX_MILLION\n    },\n    timeUnits = [],\n    timeUnitToNumber = foldl(NUMBERS_LENGTH, function (memo, number, unit) {\n        timeUnits.push(unit);\n        memo[unit] = function (input) {\n            return input * number;\n        };\n        return memo;\n    }, {}),\n    commaSplit = splitGen(','),\n    weekdays = gapSplit('sunday monday tuesday wednesday thursday friday saturday'),\n    months = gapSplit('january feburary march april may june july august september october november december'),\n    monthsHash = wrap(months, BOOLEAN_TRUE),\n    time = cacheable(function (number_) {\n        var time = 0;\n        duff(commaSplit(number_ + EMPTY_STRING), function (num_) {\n            var num = num_,\n                unit = customUnits(num, timeUnits),\n                number = +(num.split(unit || EMPTY_STRING).join(EMPTY_STRING)),\n                handler = timeUnitToNumber[unit];\n            // there's a handler for this unit, adn it's not NaN\n            if (number === number) {\n                if (handler) {\n                    number = handler(number);\n                }\n                time += number;\n            }\n        });\n        return time;\n    });\n_.exports({\n    monthIndex: monthsHash,\n    months: months,\n    weekdays: weekdays,\n    // constants\n    customUnits: customUnits,\n    // cache makers\n    uniqueId: uniqueId,\n    cacheable: cacheable,\n    categoricallyCacheable: categoricallyCacheable,\n    // cacheable\n    deprefix: deprefix,\n    deprefixAll: deprefixAll,\n    prefix: prefix,\n    prefixAll: prefixAll,\n    upCase: upCase,\n    unCamelCase: unCamelCase,\n    spinalCase: unCamelCase,\n    camelCase: camelCase,\n    snakeCase: snakeCase,\n    reference: reference,\n    string: string,\n    units: units,\n    baseUnitList: baseUnitList,\n    isHttp: isHttp,\n    parseHash: parseHash,\n    parseUrl: parseUrl,\n    parseSearch: parseSearch,\n    parseObject: parseObject,\n    time: time,\n    startsWith: startsWith,\n    itemIs: itemIs\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        STATUS = 'StatusMarker',\n        STATUSES = 'statuses',\n        directives = {\n            creation: {},\n            destruction: {}\n        },\n        returnsNull = returns(NULL),\n        returnsObject = function () {\n            return {};\n        },\n        returnsThird = function (one, two, three) {\n            return three;\n        },\n        parody = function (directive, method) {\n            return function (one, two, three) {\n                return this.directive(directive)[method](one, two, three);\n            };\n        },\n        iterate = function (directive, method) {\n            return function (list) {\n                var instance = this,\n                    dir = instance.directive(directive);\n                duff(list, dir[method], dir);\n                return instance;\n            };\n        },\n        checkParody = function (directive, method, defaultValue) {\n            var defaultIsFunction = isFunction(defaultValue);\n            return function (one, two, three, four, five, six) {\n                var item = this;\n                return item[directive] ? item[directive][method](one, two, three, four, five, six) : (defaultIsFunction ? defaultValue(item) : defaultValue);\n            };\n        },\n        defineDirective = function (name, creation, destruction_) {\n            var alreadyCreated, err = (!isString(name) && exception({\n                message: 'directives must be registered with a string for a name'\n            })) || (!isFunction(creation)) && exception({\n                message: 'directives must be registered with at least a create function'\n            });\n            directives.creation[name] = (alreadyCreated = directives.creation[name]) || creation;\n            directives.destruction[name] = directives.destruction[name] || destruction_;\n            // returns whether or not that directive is new or not\n            return !alreadyCreated;\n        },\n        extendDirective = function (oldName, newName, handler_, destruction_) {\n            var Destruction = destruction_ || returnsThird;\n            var Handler = handler_ || returnsThird;\n            var oldDirective = directives.creation[oldName] || exception({\n                message: 'directives must exist before they can be extended'\n            });\n            return app.defineDirective(newName, function (instance, name, third) {\n                var directive = new directives.creation[oldName](instance, name, third);\n                return new Handler(instance, name, directive);\n            }, function (instance, name, third) {\n                var directive = directives.destruction[oldName](instance, name, third);\n                return Destruction(instance, name, directive);\n            });\n        },\n        Directive = factories.Directive = factories.Extendable.extend('Directive', {\n            mark: parody(STATUS, 'mark'),\n            unmark: parody(STATUS, 'unmark'),\n            remark: parody(STATUS, 'remark'),\n            is: checkParody(STATUS, 'is', BOOLEAN_FALSE),\n            directive: function (name) {\n                var Handler, directive, that = this;\n                if ((directive = that[name])) {\n                    return directive;\n                }\n                Handler = (that['directive:creation:' + name] || directives.creation[name] || returnsObject);\n                that[name] = new Handler(that, name);\n                return that[name];\n            },\n            directiveDestruction: function (name) {\n                var result = (directives.destruction[name] || returnsNull)(this[name], this, name);\n                delete this[name];\n                return result;\n            }\n        }),\n        StatusMarker = factories.Extendable.extend(STATUS, {\n            constructor: function () {\n                this[STATUSES] = {};\n                return this;\n            },\n            has: function (status) {\n                return this[STATUSES][status] !== UNDEFINED;\n            },\n            mark: function (status) {\n                var previous = this[STATUSES][status];\n                this[STATUSES][status] = BOOLEAN_TRUE;\n                return previous !== BOOLEAN_TRUE;\n            },\n            unmark: function (status) {\n                var previous = this[STATUSES][status];\n                this[STATUSES][status] = BOOLEAN_FALSE;\n                return previous !== BOOLEAN_FALSE;\n            },\n            remark: function (status, direction) {\n                var previous = this[STATUSES][status];\n                var result = this[STATUSES][status] = direction === UNDEFINED ? !this[STATUSES][status] : !!direction;\n                return previous !== result;\n            },\n            is: function (status) {\n                return !!this[STATUSES][status];\n            },\n            isNot: function (status) {\n                return !this[STATUSES][status];\n            }\n        });\n    defineDirective(STATUS, StatusMarker[CONSTRUCTOR]);\n    app.defineDirective = defineDirective;\n    app.extendDirective = extendDirective;\n    _.exports({\n        directives: {\n            parody: parody,\n            checkParody: checkParody,\n            iterate: iterate\n        }\n    });\n});\nvar directives = _.directives;","var COLLECTION = 'Collection',\n    REVERSED = 'reversed',\n    eachCall = function (array, method, arg) {\n        return duff(array, function (item) {\n            result(item, method, arg);\n        });\n    },\n    mapCall = function (array, method, arg) {\n        return map(array, function (item) {\n            return result(item, method, arg);\n        });\n    },\n    eachCallRight = function (array, method, arg) {\n        return duff(array, function (item) {\n            result(item, method, arg);\n        }, NULL, -1);\n    };\napp.scope(function (app) {\n    var isNullMessage = {\n            message: 'object must not be null or undefined'\n        },\n        validIdMessage = {\n            message: 'objects in sorted collections must have either a number or string for their valueOf result'\n        },\n        cannotModifyMessage = {\n            message: 'list cannot be modified while it is being iterated over'\n        },\n        /**\n         * @func\n         */\n        doToAll = function (handler) {\n            return function (list, items, lookAfter, lookBefore, fromRight) {\n                var count = 0;\n                duff(items, function (item) {\n                    count += remove(list, item, lookAfter, lookBefore, fromRight);\n                });\n                return count === list[LENGTH];\n            };\n        },\n        remove = function (list, item, lookAfter, lookBefore, fromRight) {\n            var index = indexOf(list, item, lookAfter, lookBefore, fromRight);\n            if (index + 1) {\n                removeAt(list, index);\n            }\n            index = index + 1;\n            return !!index;\n        },\n        removeAll = doToAll(remove),\n        removeAt = function (list, index) {\n            return list.splice(index, 1)[0];\n        },\n        add = function (list, item, lookAfter, lookBefore, fromRight) {\n            var value = 0,\n                index = indexOf(list, item, lookAfter, lookBefore, fromRight);\n            if (index === -1) {\n                value = list.push(item);\n            }\n            return !!value;\n        },\n        addAll = doToAll(add),\n        insertAt = function (list, item, index) {\n            var len = list[LENGTH],\n                lastIdx = len || 0;\n            list.splice(index || 0, 0, item);\n            return len !== list[LENGTH];\n        },\n        eq = function (list, num, caller_) {\n            var n, thisNum, caller = caller_ || noop,\n                items = [],\n                numb = num || 0,\n                isNumberResult = isNumber(numb),\n                isArrayLikeResult = isArrayLike(numb);\n            if (numb < 0) {\n                isNumberResult = !1;\n            }\n            if (!list[LENGTH]) {\n                return items;\n            }\n            if (isNumberResult) {\n                items = [list[numb]];\n                caller(items[0]);\n            } else {\n                if (isArrayLikeResult) {\n                    duff(numb, function (num) {\n                        var item = list[num];\n                        items.push(item);\n                        caller(item);\n                    });\n                } else {\n                    items = [list[0]];\n                    caller(items[0]);\n                }\n            }\n            return items;\n        },\n        range = function (start, stop, step, inclusive) {\n            var length, range, idx;\n            if (stop == NULL) {\n                stop = start || 0;\n                start = 0;\n            }\n            if (!isFinite(start) || !isNumber(start)) {\n                start = 0;\n            }\n            step = +step || 1;\n            length = Math.max(Math.ceil((stop - start) / step), 0) + (+inclusive || 0);\n            range = [];\n            idx = 0;\n            while (idx < length) {\n                range[idx] = start;\n                idx++;\n                start += step;\n            }\n            return range;\n        },\n        count = function (list, runner_, ctx_, start, end) {\n            var runner, obj, idx, ctx;\n            if (start >= end || !isNumber(start) || !isNumber(end) || !isFinite(start) || !isFinite(end)) {\n                return list;\n            }\n            ctx = ctx_ || this;\n            runner = bind(runner_, ctx);\n            end = Math.abs(end);\n            idx = start;\n            while (idx < end) {\n                obj = NULL;\n                if (list[LENGTH] > idx) {\n                    obj = list[idx];\n                }\n                runner(obj, idx, list);\n                idx++;\n            }\n            return list;\n        },\n        countTo = function (list, runner, ctx, num) {\n            return count(list, runner, ctx, 0, num);\n        },\n        countFrom = function (list, runner, ctx, num) {\n            return count(list, runner, ctx, num, list[LENGTH]);\n        },\n        /**\n         * @func\n         */\n        closestIndex = function (array, searchElement, minIndex_, maxIndex_) {\n            var currentIndex, currentElement, found,\n                minIndex = minIndex_ || 0,\n                maxIndex = maxIndex_ || array[LENGTH] - 1;\n            while (minIndex <= maxIndex) {\n                currentIndex = (minIndex + maxIndex) / 2 | 0;\n                currentElement = array[currentIndex];\n                // calls valueOf\n                if (currentElement < searchElement) {\n                    minIndex = currentIndex + 1;\n                } else if (currentElement > searchElement) {\n                    maxIndex = currentIndex - 1;\n                } else {\n                    return currentIndex;\n                }\n            }\n            found = ~~maxIndex;\n            return found;\n        },\n        /**\n         * @func\n         */\n        // posit = function (list, item, lookAfter, lookBefore, fromRight) {\n        //     return indexOf(list, item, lookAfter, lookBefore, fromRight) + 1;\n        // },\n        /**\n         * @func\n         */\n        recreateSelf = function (fn, ctx) {\n            return function () {\n                return new this.__constructor__(fn.apply(ctx || this, arguments));\n            };\n        },\n        /**\n         * @func\n         */\n        unwrapInstance = function (instance_) {\n            return isInstance(instance, factories[COLLECTION]) ? instance_ : instance.unwrap();\n        },\n        REGISTRY = 'Registry',\n        Registry = factories[REGISTRY] = factories.Directive.extend(REGISTRY, {\n            constructor: function () {\n                this.reset();\n                return this;\n            },\n            get: function (category, id) {\n                var cat = this.register[category];\n                return cat && cat[id];\n            },\n            keep: function (category, id, value) {\n                var register = this.register,\n                    cat = register[category] = register[category] || {};\n                if (value === UNDEFINED) {\n                    this.count--;\n                }\n                if (cat[id] === UNDEFINED) {\n                    this.count++;\n                }\n                cat[id] = value;\n                return this;\n            },\n            group: function (category, setter) {\n                var register = this.register;\n                register[category] = setter || register[category] || {};\n                return register[category];\n            },\n            swap: function (category, id, value) {\n                var cached = this.get(category, id);\n                this.keep(category, id, value);\n                return cached;\n            },\n            drop: function (category, id) {\n                return this.swap(category, id);\n            },\n            reset: function (registry, count) {\n                var cached = this.register;\n                var cachedCount = this.count;\n                this.register = registry || {};\n                this.count = count || 0;\n                return [cached, cachedCount];\n            }\n        }),\n        recreatingSelfList = gapSplit('eq pluck where whereNot map mapCall filter cycle uncycle flatten gather'),\n        eachHandlers = {\n            each: duff,\n            duff: duff,\n            forEach: duff,\n            eachCall: eachCall,\n            eachRight: duffRight,\n            duffRight: duffRight,\n            forEachRight: duffRight,\n            eachCallRight: eachCallRight\n        },\n        eachHandlerKeys = keys(eachHandlers),\n        abstractedCanModify = gapSplit('add'),\n        abstractedCannotModify = gapSplit('insertAt remove removeAt'),\n        nativeCannotModify = gapSplit('pop shift splice'),\n        reverseList = gapSplit('reverse'),\n        splatHandlers = gapSplit('push unshift'),\n        joinHandlers = gapSplit('join'),\n        countingList = gapSplit('count countTo countFrom merge'),\n        foldIteration = gapSplit('foldr foldl reduce'),\n        findIteration = gapSplit('find findLast findWhere findLastWhere'),\n        indexers = gapSplit('indexOf'),\n        foldFindIteration = foldIteration.concat(findIteration),\n        marksIterating = function (fn) {\n            return function (one, two, three, four, five, six) {\n                var result, list = this;\n                ++list.iterating;\n                result = fn(list, one, two, three, four, five, six);\n                --list.iterating;\n                return result;\n            };\n        },\n        wrappedListMethods = extend({\n            seeker: function (handler, context) {\n                return _.duffRight(this.items, handler, context);\n            }\n        }, wrap(joinHandlers, function (name) {\n            return function (arg) {\n                return this.items[name](arg);\n            };\n        }), wrap(indexers.concat(abstractedCanModify), function (name) {\n            return function (one, two, three, four, five) {\n                var list = this;\n                return _[name](list.items, one, two, three, four, five);\n            };\n        }), wrap(splatHandlers, function (name) {\n            return function (args_) {\n                var args = isArray(args_) ? args_ : arguments;\n                return this.items[name].apply(this.items, args);\n            };\n        }), wrap(nativeCannotModify, function (name) {\n            return function (one, two, three, four, five, six) {\n                var list = this;\n                if (list.iterating) {\n                    return exception(cannotModifyMessage);\n                }\n                return list.items[name](one, two, three, four, five, six);\n            };\n        }), wrap(abstractedCannotModify, function (name) {\n            return function (one, two, three, four, five) {\n                var list = this;\n                if (list.iterating) {\n                    return exception(cannotModifyMessage);\n                }\n                return _[name](list.items, one, two, three, four, five);\n            };\n        }), wrap(reverseList, function (name) {\n            return function () {\n                var list = this;\n                list.directive('StatusManager').toggle(REVERSED);\n                list.items[name]();\n                return list;\n            };\n        }), wrap(eachHandlers, function (fn) {\n            return marksIterating(function (list, handler, context) {\n                var args0 = list.items,\n                    args1 = handler,\n                    args2 = arguments[LENGTH] > 1 ? context : list;\n                fn(args0, args1, args2);\n                return list;\n            });\n        }), wrap(countingList, function (name) {\n            return marksIterating(function (list, runner, fromHere, toThere) {\n                _[name](list.items, runner, list, fromHere, toThere);\n                return list;\n            });\n        }), wrap(recreatingSelfList, function (name) {\n            return marksIterating(function (list, one, two, three) {\n                return new List[CONSTRUCTOR](_[name](list.items, one, two, three));\n            });\n        }), wrap(foldFindIteration, function (name) {\n            return marksIterating(function (list, one, two, three) {\n                return _[name](list.items, one, two, three);\n            });\n        })),\n        ret = _.exports({\n            eachCall: eachCall,\n            eachCallRight: eachCallRight,\n            filter: filter,\n            matches: matches,\n            mapCall: mapCall,\n            add: add,\n            removeAll: removeAll,\n            addAll: addAll,\n            insertAt: insertAt,\n            removeAt: removeAt,\n            remove: remove,\n            cycle: cycle,\n            uncycle: uncycle,\n            concat: concat,\n            pluck: pluck,\n            where: where,\n            findWhere: findWhere,\n            findLastWhere: findLastWhere,\n            range: range,\n            count: count,\n            countTo: countTo,\n            countFrom: countFrom,\n            whereNot: whereNot,\n            eachRight: eachRight,\n            duffRight: duffRight,\n            flatten: flatten,\n            eq: eq\n        }),\n        LIST = 'List',\n        List = factories.List = factories.Directive.extend(upCase(LIST), extend({\n            constructor: function (items) {\n                this.reset(items);\n                return this;\n            },\n            call: function (arg) {\n                this.each(function (fn) {\n                    fn(arg);\n                });\n                return this;\n            },\n            obliteration: function (handler, context) {\n                duffRight(this.items, handler, context === UNDEFINED ? this : context);\n                return this;\n            },\n            empty: function () {\n                return this.reset();\n            },\n            reset: function (items) {\n                // can be array like\n                var list = this,\n                    old = list.items || [];\n                list.iterating = list.iterating ? exception(cannotModifyMessage) : 0;\n                list.items = items == NULL ? [] : (isArrayLike(items) ? toArray(items) : [items]);\n                list.unmark(REVERSED);\n                return list;\n            },\n            unwrap: function () {\n                return this.items;\n            },\n            length: function () {\n                return this.items.length;\n            },\n            first: function () {\n                return this.items[0];\n            },\n            last: function () {\n                return this.items[this.items.length - 1];\n            },\n            index: function (number) {\n                return this.items[number || 0];\n            },\n            has: function (object) {\n                return this.indexOf(object) !== -1;\n            },\n            sort: function (fn_) {\n                // normalization sort function for cross browsers\n                var list = this;\n                sort(list.items, fn_, list.is(REVERSED), list);\n                return list;\n            },\n            toString: function () {\n                return stringify(this.items);\n            },\n            toJSON: function () {\n                return map(this.items, function (item) {\n                    return result(item, TO_JSON);\n                });\n            },\n            range: recreateSelf(range),\n            concat: recreateSelf(function () {\n                // this allows us to mix collections with regular arguments\n                var base = this.unwrap();\n                return base.concat.apply(base, map(arguments, function (arg) {\n                    return List(arg).unwrap();\n                }));\n            }),\n            results: function (key, arg) {\n                return this.map(function (obj) {\n                    return result(obj, key, arg);\n                });\n            }\n        }, wrappedListMethods)),\n        directiveResult = app.defineDirective(LIST, function () {\n            return new List[CONSTRUCTOR]();\n        }),\n        // just combining two directives here.\n        // One is being extended,\n        // the other is being used on the parent\n        Collection = factories[COLLECTION] = factories.List.extend(COLLECTION, extend({\n            get: directives.parody(REGISTRY, 'get'),\n            register: directives.parody(REGISTRY, 'keep'),\n            unRegister: directives.parody(REGISTRY, 'drop'),\n            swapRegister: directives.parody(REGISTRY, 'swap'),\n            empty: function (one, two, three) {\n                this.reset(one, two, three);\n                this.directive(REGISTRY).reset(one, two, three);\n            }\n        })),\n        appDirectiveResult = app.defineDirective(COLLECTION, function () {\n            return Collection();\n        }),\n        SortedCollection = factories.SortedCollection = Collection.extend('Sorted' + COLLECTION, {\n            constructor: function (list_, skip) {\n                var sorted = this;\n                List[CONSTRUCTOR].call(sorted);\n                if (list_ && !skip) {\n                    sorted.load(isArrayLike(list_) ? list_ : [list_]);\n                }\n                return sorted;\n            },\n            sort: function () {\n                // does not take a function because it relies on ids / valueOf results\n                var sorted = this;\n                sort(sorted.unwrap(), sorted.is(REVERSED) ? function (a, b) {\n                    return a < b;\n                } : NULL, BOOLEAN_FALSE, sorted);\n                return sorted;\n            },\n            reverse: function () {\n                var sorted = this;\n                sorted.toggle(REVERSED);\n                sorted.sort();\n                return sorted;\n            },\n            closestIndex: function (value) {\n                return closestIndex(this.unwrap(), value);\n            },\n            closest: function (value) {\n                var index, list = this.unwrap();\n                return (index = closestIndex(list, value)) === -1 ? UNDEFINED : list[index];\n            },\n            validIDType: function (id) {\n                return isNumber(id) || isString(id);\n            },\n            indexOf: function (object, min, max) {\n                return smartIndexOf(this.unwrap(), object, BOOLEAN_TRUE);\n            },\n            load: function (values) {\n                var sm = this;\n                if (isArray(values)) {\n                    duff(values, sm.add, sm);\n                } else {\n                    sm.add(values);\n                }\n                return sm;\n            },\n            add: function (object) {\n                var registryDirective, sorted = this,\n                    isNotNull = object == NULL && exception(isNullMessage),\n                    valueOfResult = object && object.valueOf(),\n                    retrieved = (registryDirective = sorted[REGISTRY]) && sorted.get(ID, valueOfResult);\n                if (retrieved) {\n                    return BOOLEAN_FALSE;\n                }\n                ret = !sorted.validIDType(valueOfResult) && exception(validIdMessage);\n                sorted.insertAt(object, sorted.closestIndex(valueOfResult) + 1);\n                (registryDirective || sorted.directive(REGISTRY)).keep(ID, valueOfResult, object);\n                return BOOLEAN_TRUE;\n            },\n            remove: function (object, index) {\n                var where, sorted = this,\n                    isNotNull = object == NULL && exception(isNullMessage),\n                    valueOfResult = object && object.valueOf();\n                if (object == NULL || sorted.get(ID, valueOfResult) == NULL) {\n                    return BOOLEAN_FALSE;\n                }\n                sorted.removeAt(index === UNDEFINED ? sorted.indexOf(object) : index);\n                sorted.unRegister(ID, valueOfResult);\n                return BOOLEAN_TRUE;\n            },\n            pop: function () {\n                return this.remove(this.last());\n            },\n            shift: function () {\n                return this.remove(this.first());\n            }\n        }),\n        StringObject = factories.StringObject = factories.Extendable.extend('StringObject', {\n            constructor: function (value, parent) {\n                var string = this;\n                string.value = value;\n                string.parent = parent;\n                string.isValid(BOOLEAN_TRUE);\n                return string;\n            },\n            toggle: function (direction) {\n                this.isValid(toggle(this.isValid(), direction));\n            },\n            isValid: function (value) {\n                var string = this;\n                if (arguments[LENGTH]) {\n                    if (string.valid !== value) {\n                        string.parent.increment();\n                        string.valid = value;\n                    }\n                    return string;\n                } else {\n                    return string.valid;\n                }\n            },\n            valueOf: function () {\n                return this.value;\n            },\n            toString: function () {\n                return this.value;\n            },\n            generate: function () {\n                return this.isValid() ? this.valueOf() : EMPTY_STRING;\n            }\n        }),\n        StringManager = factories.StringManager = SortedCollection.extend('StringManager', {\n            Child: StringObject,\n            add: function (string) {\n                var sm = this,\n                    found = sm.get(ID, string);\n                if (string) {\n                    if (found) {\n                        found.isValid(BOOLEAN_TRUE);\n                    } else {\n                        found = new sm.Child(string, sm);\n                        sm.unwrap().push(found);\n                        sm.register(ID, string, found);\n                    }\n                }\n                return found;\n            },\n            empty: function () {\n                var sm = this;\n                // wipes array and id hash\n                List[CONSTRUCTOR][PROTOTYPE].empty.call(sm);\n                // resets change counter\n                sm.current(EMPTY_STRING);\n                return sm;\n            },\n            increment: function () {\n                this.changeCounter++;\n            },\n            decrement: function () {\n                this.changeCounter--;\n            },\n            remove: function (string) {\n                var sm = this,\n                    found = sm.get(ID, string);\n                if (string && found) {\n                    found.isValid(BOOLEAN_FALSE);\n                }\n                return sm;\n            },\n            toggle: function (string, direction) {\n                var wasFound = BOOLEAN_TRUE,\n                    sm = this,\n                    found = sm.get(ID, string);\n                if (!found) {\n                    wasFound = BOOLEAN_FALSE;\n                    found = sm.add(string);\n                }\n                if (direction === UNDEFINED) {\n                    if (wasFound) {\n                        found.toggle();\n                    }\n                } else {\n                    found.toggle(direction);\n                }\n            },\n            rebuild: function () {\n                // rebuilds the registry\n                var parent = this,\n                    collectable = [],\n                    parentRegistry = parent.directive(REGISTRY);\n                parent.each(function (stringInstance) {\n                    if (stringInstance.isValid()) {\n                        this.push(stringInstance);\n                    } else {\n                        parentRegistry.drop(ID, stringInstance.value);\n                    }\n                }, collectable);\n                parent.reset(collectable);\n                return parent;\n            },\n            generate: function (delimiter_) {\n                var validResult, string = EMPTY_STRING,\n                    parent = this,\n                    previousDelimiter = parent.delimiter,\n                    delimiter = delimiter_;\n                if (!parent.changeCounter && delimiter === previousDelimiter) {\n                    return parent.current();\n                }\n                parent.delimiter = delimiter;\n                parent.rebuild();\n                string = parent.join(delimiter);\n                parent.current(string);\n                return string;\n            },\n            current: function (current) {\n                var sm = this;\n                if (arguments[LENGTH]) {\n                    sm.changeCounter = 0;\n                    sm.currentValue = current;\n                    return sm;\n                } else {\n                    return sm.currentValue;\n                }\n            },\n            ensure: function (value_, splitter) {\n                var sm = this,\n                    value = value_,\n                    delimiter = splitter === UNDEFINED ? SPACE : splitter,\n                    isArrayResult = isArray(value),\n                    madeString = (isArrayResult ? value.join(delimiter) : value);\n                if (sm.current() === madeString) {\n                    return sm;\n                }\n                sm.load(isArrayResult ? value : (isString(value) ? value.split(delimiter) : BOOLEAN_FALSE));\n                sm.current(madeString);\n                return sm;\n            },\n            refill: function (array_) {\n                var sm = this,\n                    array = array_;\n                sm.empty();\n                if (array) {\n                    sm.load(array);\n                }\n                sm.increment();\n                return sm;\n            }\n        });\n    app.defineDirective(REGISTRY, Registry[CONSTRUCTOR]);\n});","app.scope(function (app) {\n    var request = function (key, arg) {\n            return this.hash[key] && this.hash[key](arg);\n        },\n        returns = function (affection) {\n            return function () {\n                return affection;\n            };\n        },\n        reply = function (key, handler) {\n            var hash = this.hash;\n            intendedObject(key, handler, function (key, handler) {\n                hash[key] = bind(isFunction(handler) ? handler : returns(handler), NULL);\n            });\n            return this;\n        };\n    app.defineDirective('Messenger', function () {\n        return {\n            hash: {},\n            reply: reply,\n            request: request\n        };\n    });\n});","var ACTIONS = 'actions',\n    IS_STOPPED = 'isStopped',\n    UPCASED_IS_STOPPED = upCase(IS_STOPPED),\n    PROPAGATION = 'propagation',\n    DEFAULT_PREVENTED = 'defaultPrevented',\n    PROPAGATION_IS_STOPPED = PROPAGATION + UPCASED_IS_STOPPED,\n    IMMEDIATE_PROP_IS_STOPPED = 'immediate' + upCase(PROPAGATION) + UPCASED_IS_STOPPED;\napp.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        __FN_ID__ = '__fnid__',\n        event_incrementer = 1,\n        Collection = factories.Collection,\n        List = factories.List,\n        REMOVE_QUEUE = 'removeQueue',\n        listeningCounter = 0,\n        returnsId = function () {\n            return this.id;\n        },\n        PASSED_DATA = 'passedData',\n        ObjectEvent = factories.ObjectEvent = factories.Directive.extend('ObjectEvent', {\n            constructor: function (target, data, name, options, when) {\n                var evnt = this;\n                evnt[PROPAGATION_IS_STOPPED] = evnt[IMMEDIATE_PROP_IS_STOPPED] = BOOLEAN_FALSE;\n                evnt[ORIGIN] = target;\n                evnt[NAME] = name;\n                evnt[TYPE] = name.split(COLON)[0];\n                evnt.timestamp = now();\n                evnt.timeStamp = when || evnt.timestamp;\n                evnt[PASSED_DATA] = {};\n                evnt.data(data);\n                if (options) {\n                    extend(evnt, options);\n                }\n                return evnt;\n            },\n            isStopped: function () {\n                return this[PROPAGATION_IS_STOPPED] || this[IMMEDIATE_PROP_IS_STOPPED];\n            },\n            data: function (datum) {\n                return arguments[LENGTH] ? this.set(datum) : this[PASSED_DATA];\n            },\n            get: function (key) {\n                return this[PASSED_DATA][key];\n            },\n            set: function (data) {\n                var evnt = this;\n                evnt[PASSED_DATA] = isObject(data) ? data : {};\n                return evnt;\n            },\n            stopImmediatePropagation: function () {\n                this.stopPropagation();\n                this[IMMEDIATE_PROP_IS_STOPPED] = BOOLEAN_TRUE;\n            },\n            stopPropagation: function () {\n                this[PROPAGATION_IS_STOPPED] = BOOLEAN_TRUE;\n            },\n            preventDefault: function () {\n                this[DEFAULT_PREVENTED] = BOOLEAN_TRUE;\n            },\n            defaultIsPrevented: function () {\n                return this[DEFAULT_PREVENTED];\n            },\n            action: function (fn) {\n                var evnt = this;\n                evnt.directive(ACTIONS).push(fn);\n                return evnt;\n            },\n            finished: function () {\n                var actions, evnt = this;\n                evnt.isTrusted = BOOLEAN_FALSE;\n                if (evnt.defaultIsPrevented()) {\n                    return;\n                }\n                if ((actions = evnt[ACTIONS])) {\n                    actions.call(evnt);\n                }\n            }\n        }),\n        EventsDirective = factories.EventsDirective = factories.Directive.extend('EventsDirective', {\n            cancelled: _.noop,\n            constructor: function (target) {\n                var eventsDirective = this;\n                eventsDirective.target = target;\n                eventsDirective.listenId = 'l' + (++listeningCounter);\n                eventsDirective.handlers = {};\n                eventsDirective.listeningTo = {};\n                eventsDirective.running = {};\n                eventsDirective.queued = {};\n                eventsDirective.stack = List();\n                eventsDirective.removeQueue = List();\n                eventsDirective.proxyStack = Collection();\n                eventsDirective.proxyStack.unmark('dirty');\n                return eventsDirective;\n            },\n            attach: function (name, eventObject, modifier) {\n                var list, eventsDirective = this,\n                    handlers = eventsDirective[HANDLERS];\n                eventObject.id = ++event_incrementer;\n                eventObject.valueOf = returnsId;\n                eventObject.context = eventObject.context || eventObject.origin;\n                if (modifier && isFunction(modifier)) {\n                    modifier(eventsDirective, eventObject);\n                }\n                eventObject.fn = bind(eventObject.fn || eventObject.handler, eventObject.context);\n                // attach the id to the bound function because that instance is private\n                list = handlers[name] = handlers[name] || List();\n                // attaching name so list can remove itself from hash\n                list[NAME] = name;\n                // attached so event can remove itself\n                eventObject.list = list;\n                eventsDirective.add(list, eventObject);\n            },\n            create: function (target, data, name, options) {\n                return ObjectEvent(target, data, name, options);\n            },\n            make: function (name, handler, origin) {\n                return {\n                    disabled: BOOLEAN_FALSE,\n                    namespace: name && name.split(COLON)[0],\n                    name: name,\n                    handler: handler,\n                    origin: origin\n                };\n            },\n            seekAndDestroy: function (list, handler, context) {\n                var obj, events = this,\n                    array = list.unwrap(),\n                    i = array[LENGTH] - 1;\n                for (; i >= 0; i--) {\n                    obj = array[i];\n                    if (!obj.disabled && (!handler || obj.handler === handler) && (!context || obj.context === context)) {\n                        events.detach(obj, i);\n                    }\n                }\n            },\n            nextBubble: function (start) {\n                return start.parent;\n            },\n            bubble: function (evnt, data, options) {\n                var previous, events = this,\n                    start = events.target,\n                    list = [start],\n                    next = start;\n                while (next) {\n                    previous = next;\n                    next = events.nextBubble(previous, list);\n                    if (next) {\n                        list.push(next);\n                    }\n                    if (previous === next) {\n                        exception({\n                            message: 'bubbling discerners must return a different object each time it is run'\n                        });\n                    }\n                }\n                duff(list, function (target) {\n                    target[DISPATCH_EVENT](evnt, data, options);\n                });\n                return start;\n            },\n            add: function (list, evnt) {\n                list.push([evnt]);\n            },\n            remove: function (list, evnt, index) {\n                list.removeAt(evnt, index);\n            },\n            detachCurrent: function () {\n                return this.detach(this[STACK].last());\n            },\n            detach: function (evnt, index) {\n                var listeningTo, events = this,\n                    listening = evnt.listening,\n                    list = evnt.list,\n                    disabled = evnt.disabled = BOOLEAN_TRUE;\n                if (evnt.removed) {\n                    return BOOLEAN_TRUE;\n                }\n                evnt.removed = BOOLEAN_TRUE;\n                events.remove(list, evnt, index);\n                // disconnect it from the list above it\n                evnt.list = UNDEFINED;\n                events.wipe(list);\n                // check to see if it was a listening type\n                if (!listening) {\n                    return BOOLEAN_TRUE;\n                }\n                // if it was then decrement it\n                listening.count--;\n                if (listening.count) {\n                    return BOOLEAN_TRUE;\n                }\n                listeningTo = listening.listeningTo;\n                listeningTo[listening[TALKER_ID]] = UNDEFINED;\n                return BOOLEAN_TRUE;\n            },\n            wipe: function (list) {\n                if (list[LENGTH]()) {\n                    return BOOLEAN_FALSE;\n                }\n                this.scrub(list);\n                return BOOLEAN_TRUE;\n            },\n            scrub: function (list) {\n                list.scrubbed = BOOLEAN_TRUE;\n                delete this[HANDLERS][list[NAME]];\n            },\n            reset: function () {\n                return each(this.handlers, this.scrub, this);\n            },\n            queue: function (stack, handler, evnt) {\n                return stack.unwrap().push(handler);\n            },\n            unQueue: function (stack, handler, evnt) {\n                return stack.pop();\n            },\n            has: function (key) {\n                return this.handlers[key] && this.handlers[key][LENGTH]();\n            },\n            dispatch: function (name, evnt) {\n                var subset, subLength, handler, i = 0,\n                    events = this,\n                    stack = events[STACK],\n                    handlers = events[HANDLERS],\n                    list = handlers[name],\n                    running = events.running,\n                    // prevents infinite loops\n                    cached = running[name],\n                    stopped = evnt[PROPAGATION_IS_STOPPED],\n                    bus = events.proxyStack;\n                // make sure setup is proper\n                if (cached || stopped || !list || !list[LENGTH]()) {\n                    return;\n                }\n                running[name] = BOOLEAN_TRUE;\n                subset = events.subset(list.unwrap(), evnt);\n                subLength = subset[LENGTH];\n                for (; i < subLength && !stopped; i++) {\n                    handler = subset[i];\n                    if (!handler.disabled && events.queue(stack, handler, evnt)) {\n                        handler.fn(evnt);\n                        stopped = !!evnt[IMMEDIATE_PROP_IS_STOPPED];\n                        events.unQueue(stack, handler, evnt);\n                    }\n                }\n                if (stopped) {\n                    events.cancelled(stack, evnt);\n                }\n                evnt.finished();\n                running[name] = !!cached;\n                return evnt.returnValue;\n            },\n            subset: function (list) {\n                return list.slice(0);\n            },\n            queueStack: function (name) {\n                var queued = this.queued;\n                if (!queued[name]) {\n                    queued[name] = 0;\n                }\n                ++queued[name];\n                return queued[name];\n            },\n            unQueueStack: function (name) {\n                if (!--this.queued[name]) {\n                    delete this.queued[name];\n                }\n            }\n        });\n    app.defineDirective(EVENTS, factories.EventsDirective[CONSTRUCTOR]);\n});","var CHILDREN = upCase(CHILD + 'ren');\napp.scope(function (app) {\n    var Collection = factories.Collection,\n        Events = factories.Events,\n        List = factories.List,\n        SORT = 'sort',\n        ADDED = 'added',\n        UNWRAP = 'unwrap',\n        REMOVED = 'removed',\n        STOP_LISTENING = 'stopListening',\n        _DELEGATED_CHILD_EVENTS = '_delegatedParentEvents',\n        _PARENT_DELEGATED_CHILD_EVENTS = '_parentDelgatedChildEvents',\n        modelMaker = function (attributes, options) {\n            return Model(attributes, options);\n        },\n        // ties child events to new child\n        _delegateChildEvents = function (parent, model) {\n            var childsEventDirective, childEvents = _.result(parent, CHILD + 'Events');\n            if (model && childEvents) {\n                childsEventDirective = model.directive(EVENTS);\n                // stash them\n                childsEventDirective[_PARENT_DELEGATED_CHILD_EVENTS] = childEvents;\n                parent.listenTo(model, childEvents);\n            }\n        },\n        // ties child events to new child\n        _unDelegateChildEvents = function (parent, model) {\n            var childsEventDirective;\n            if (model && parent[STOP_LISTENING] && (childsEventDirective = model[EVENTS]) && childsEventDirective[_PARENT_DELEGATED_CHILD_EVENTS]) {\n                parent[STOP_LISTENING](model, model[_PARENT_DELEGATED_CHILD_EVENTS]);\n                childsEventDirective[_PARENT_DELEGATED_CHILD_EVENTS] = UNDEFINED;\n            }\n        },\n        _delegateParentEvents = function (parent_, model) {\n            var childsEventDirective, parent = model[PARENT],\n                parentEvents = _.result(model, PARENT + 'Events');\n            if (parent && parentEvents) {\n                childsEventDirective = model.directive(EVENTS);\n                childsEventDirective[_DELEGATED_CHILD_EVENTS] = parentEvents;\n                model.listenTo(parent, parentEvents);\n            }\n        },\n        // ties child events to new child\n        _unDelegateParentEvents = function (parent, model) {\n            var childsEventDirective;\n            if (model[STOP_LISTENING] && (childsEventDirective = model[EVENTS]) && childsEventDirective[_DELEGATED_CHILD_EVENTS]) {\n                model[STOP_LISTENING](parent, model[_DELEGATED_CHILD_EVENTS]);\n                childsEventDirective[_DELEGATED_CHILD_EVENTS] = UNDEFINED;\n            }\n        },\n        SYNCER = 'Syncer',\n        Syncer = factories[SYNCER] = factories.Events.extend(SYNCER, {\n            // base method for xhr things\n            sync: function () {},\n            // delete request. request that this model be deleted by the server\n            destroy: function () {},\n            // get request. this model needs an update\n            fetch: function () {},\n            // put - second+ time\n            update: function () {},\n            // post - first time\n            create: function () {}\n        }),\n        SyncerDirective = app.defineDirective(SYNCER, Syncer[CONSTRUCTOR]),\n        Children = factories[CHILDREN] = factories.Collection.extend(CHILDREN, {\n            constructor: function (instance) {\n                this[TARGET] = instance;\n                factories.List[CONSTRUCTOR].call(this);\n                return this;\n            },\n            // this one forcefully adds\n            attach: function (model) {\n                var directive = this,\n                    parent = directive[TARGET],\n                    // children = parent.directive(CHILDREN),\n                    evt = model[DISPATCH_EVENT] && model[DISPATCH_EVENT](BEFORE_COLON + ADDED);\n                // let the child know it's about to be added\n                // (tied to it's parent via events)\n                // unties models\n                directive.detach(model);\n                // explicitly tie to parent\n                // attach events from parent\n                directive.addToHash(model);\n                // ties models together\n                _delegateParentEvents(parent, model);\n                _delegateChildEvents(parent, model);\n                evt = model[DISPATCH_EVENT] && model[DISPATCH_EVENT](ADDED);\n                // notify that you were added\n                return model;\n            },\n            // lots of private events\n            detach: function (model) {\n                // cache the parent\n                var parent, directive = this;\n                // go through the model to get the correct parent\n                if (!(parent = model[PARENT])) {\n                    return model;\n                }\n                // let everyone know that this object is about to be removed\n                model[DISPATCH_EVENT](BEFORE_COLON + REMOVED);\n                // notify the child that the remove pipeline is starting\n                // remove the parent events\n                _unDelegateParentEvents(parent, model);\n                // have parent remove it's child events\n                _unDelegateChildEvents(parent, model);\n                // attach events from parent\n                directive.removeFromHash(model);\n                // void out the parent member tied directly to the model\n                delete model[PARENT];\n                // let everyone know that you've offically separated\n                model[DISPATCH_EVENT](REMOVED);\n                // notify the child that the remove pipeline is done\n                return model;\n            },\n            addToHash: function (newModel) {\n                var children = this,\n                    parent = children[TARGET];\n                newModel[PARENT] = parent;\n                // add to collection\n                children.add(newModel);\n                // register with parent\n                children.register(ID, newModel.id, newModel);\n                children.register('cid', newModel.cid, newModel);\n            },\n            removeFromHash: function (child) {\n                var directive = this;\n                if (!child) {\n                    return;\n                }\n                // remove the child from the children hash\n                directive.remove(child);\n                directive.unRegister(ID, child.id);\n                // unregister from the child hash keys\n                directive.unRegister('cid', child.cid);\n            },\n            /**\n             * @description resets the model's attributes to the object that is passed in\n             * @name Model#reset\n             * @func\n             * @param {Object} attributes - non circular hash that is extended onto what the defaults object produces\n             * @returns {Model} instance the method was called on\n             */\n            // reset: function (newChildren) {\n            //     var length, child, directive = this,\n            //         model = directive[TARGET],\n            //         arr = directive[UNWRAP]();\n            //     // this can be made far more efficient\n            //     while (arr[LENGTH]) {\n            //         child = arr[0];\n            //         length = arr[LENGTH];\n            //         // if (child) {\n            //         result(child, DESTROY);\n            //         // }\n            //         // if it didn't remove itself,\n            //         // then you should remove it here\n            //         // this gets run if the child is a basic data type\n            //         if (arr[0] === child && arr[LENGTH] === length) {\n            //             remove(arr, child);\n            //         }\n            //     }\n            //     model.add(newChildren);\n            //     return model;\n            // },\n            // set attrs, sync with update or create\n            save: function () {},\n            fetch: function () {}\n        }),\n        Parent = factories.Parent = factories.Events.extend('Parent', {\n            Child: BOOLEAN_TRUE,\n            isChildType: function (child) {\n                return isInstance(child, this.Child === BOOLEAN_TRUE ? this.__constructor__[CONSTRUCTOR] : this.Child);\n            },\n            // public facing version filters\n            add: function (objs_, secondary_) {\n                var childAdded, parent = this,\n                    children = parent.directive(CHILDREN),\n                    secondary = extend(result(parent, CHILD + 'Options'), secondary_ || {}),\n                    list = Collection(objs_);\n                // unwrap it if you were passed a collection\n                if (!parent.Child || !list[LENGTH]()) {\n                    return list[UNWRAP]();\n                }\n                list = list.foldl(function (memo, obj) {\n                    var isChildType = parent.isChildType(obj),\n                        // create a new model\n                        // call it with new in case they use a constructor\n                        Constructor = parent.Child === BOOLEAN_TRUE ? parent.__constructor__[CONSTRUCTOR] : parent.Child,\n                        newModel = isChildType ? obj : new Constructor(obj, secondary),\n                        // unfortunately we can only find by the newly created's id\n                        // which we only know for sure after the child has been created ^\n                        foundModel = children.get(ID, newModel.id);\n                    if (foundModel) {\n                        // update the old\n                        foundModel.set(isChildType ? obj[TO_JSON]() : obj);\n                        newModel = foundModel;\n                    } else {\n                        // add the new\n                        childAdded = BOOLEAN_TRUE;\n                        children.attach(newModel);\n                    }\n                    memo.push(newModel);\n                    return memo;\n                }, []);\n                if (childAdded) {\n                    parent[DISPATCH_EVENT](CHILD + COLON + ADDED);\n                }\n                return list;\n            },\n            remove: function (idModel_) {\n                var retList, children, models, parent = this,\n                    idModel = idModel_;\n                if (idModel == NULL) {\n                    parent = parent[PARENT];\n                    return parent.remove(this);\n                }\n                retList = List();\n                if (!isObject(idModel) && (children = parent.directive(CHILDREN))) {\n                    // it's an id\n                    idModel = children.get(ID, idModel);\n                }\n                if (!idModel || !isObject(idModel)) {\n                    return retList;\n                }\n                models = idModel && idModel.unwrap ? idModel.unwrap() : idModel;\n                Collection(models).each(function (model) {\n                    var result, children, parent = model[PARENT];\n                    retList.push(model);\n                    if (!parent) {\n                        return;\n                    }\n                    children = parent[CHILDREN];\n                    result = children && children.detach(model);\n                });\n                if (retList[LENGTH]()) {\n                    parent[DISPATCH_EVENT](CHILD + COLON + REMOVED);\n                }\n                return retList;\n            },\n            /**\n             * @description basic sort function\n             * @param {Function|String} comparator - argument to sort children against\n             * @returns {Model} instance\n             * @func\n             * @name Model#sort\n             */\n            sort: function (comparator_) {\n                var children, comparator, comparingAttribute, isReversed, model = this;\n                if (!(children = model[CHILDREN])) {\n                    return model;\n                }\n                comparator = comparator_ || result(model, 'comparator');\n                if (isString(comparator)) {\n                    isReversed = comparator[0] === '!';\n                    comparingAttribute = comparator;\n                    if (isReversed) {\n                        comparingAttribute = comparator.slice(1);\n                    }\n                    comparator = function (a, b) {\n                        var val_, val_A = a.get(comparingAttribute),\n                            val_B = b.get(comparingAttribute);\n                        if (isReversed) {\n                            val_ = val_B - val_A;\n                        } else {\n                            val_ = val_A - val_B;\n                        }\n                        return val_;\n                    };\n                }\n                children[SORT](comparator);\n                model[DISPATCH_EVENT](SORT);\n                return model;\n            },\n            destroy: function () {\n                var removeRet, model = this;\n                if (!model.is(DESTROYING)) {\n                    // notify things like parent that it's about to destroy itself\n                    model[DISPATCH_EVENT](BEFORE_DESTROY);\n                }\n                // actually detach\n                removeRet = model[PARENT] && model[PARENT].remove(model);\n                // stop listening to other views\n                model[DISPATCH_EVENT](DESTROY);\n                // stops listening to everything\n                model.stopListening();\n                return model;\n            }\n        }),\n        /**\n         * @class Model\n         * @augments Events\n         */\n        uniqueCounter = 0,\n        setId = function (model, id) {\n            model.id = (id === UNDEFINED ? ++uniqueCounter : id);\n            return uniqueCounter;\n        },\n        Model = factories.Model = factories.Parent.extend('Model', {\n            // this id prefix is nonsense\n            // define the actual key\n            idAttribute: ID,\n            /**\n             * @description remove attributes from the Model object. Does not completely remove from object with delete, but instead simply sets it to UNDEFINED / undefined\n             * @param {String} attr - property string that is on the attributes object\n             * @returns {Model} instance the method was called on\n             * @func\n             * @name Model#unset\n             */\n            unset: directives.checkParody(DATA, 'unset', BOOLEAN_FALSE),\n            /**\n             * @description returns attribute passed into\n             * @param {String} attr - property string that is being gotten from the attributes object\n             * @returns {*} value that is present on the attributes object\n             * @func\n             * @name Model#get\n             */\n            get: directives.checkParody(DATA, 'get'),\n            /**\n             * @func\n             * @param {String} attr - property string that is being gotten from the attributes object\n             * @returns {Boolean} evaluation of whether or not the Model instance has a value at that attribute key\n             * @description checks to see if the current attribute is on the attributes object as anything other an undefined\n             * @name Model#has\n             */\n            has: directives.checkParody(DATA, 'has', BOOLEAN_FALSE),\n            constructor: function (attributes, secondary) {\n                var model = this;\n                model.reset(attributes);\n                Events[CONSTRUCTOR].call(this, secondary);\n                return model;\n            },\n            reset: function (data_) {\n                var childModel, firstReset, children, model = this,\n                    // automatically checks to see if the data is a string\n                    passed = parse(data_) || {},\n                    // build new data\n                    defaultsResult = result(model, 'defaults', passed),\n                    newAttributes = extend(defaultsResult, passed),\n                    // try to get the id from the attributes\n                    idAttributeResult = result(model, 'idAttribute', newAttributes),\n                    idResult = setId(model, newAttributes[idAttributeResult]),\n                    keysResult = keys(newAttributes),\n                    dataDirective = model.directive(DATA);\n                // set id and let parent know what your new id is\n                // setup previous data\n                if ((firstReset = model.is(RESET))) {\n                    model[DISPATCH_EVENT](BEFORE_COLON + RESET);\n                }\n                dataDirective[RESET](newAttributes);\n                // let everything know that it is changing\n                if (firstReset) {\n                    model[DISPATCH_EVENT](RESET, newAttributes);\n                }\n                model.mark(RESET);\n                return model;\n            },\n            /**\n             * @description collects a splat of arguments and condenses them into a single object. Object is then extended onto the attributes object and any items that are different will be fired as events\n             * @param {...*} series - takes a series of key value pairs. can be mixed with objects. All key value pairs will be placed on a new object, which is to be passed into the function below\n             * @func\n             * @name Model#set\n             * @returns {Model} instance\n             */\n            destroy: function () {\n                Parent[CONSTRUCTOR][PROTOTYPE].destroy.call(this);\n                delete this.id;\n                return this;\n            },\n            set: function (key, value) {\n                var changedList = [],\n                    model = this,\n                    dataDirective = model.directive(DATA),\n                    previous = {},\n                    eventsDirective;\n                intendedObject(key, value, function (key, value) {\n                    // definitely set the value, and let us know what happened\n                    // and if you're not changing already, (already)\n                    if (dataDirective.set(key, value) && !dataDirective.changing[name]) {\n                        eventsDirective = eventsDirective || model.directive(EVENTS);\n                        eventsDirective.queueStack(CHANGE_COLON + key);\n                        changedList.push(key);\n                    }\n                });\n                // do not digest... this time\n                if (!changedList[LENGTH]) {\n                    return model;\n                }\n                // list\n                dataDirective.digest(model, function () {\n                    duff(changedList, function (name) {\n                        var eventName = CHANGE_COLON + name;\n                        dataDirective.changing[name] = BOOLEAN_TRUE;\n                        eventsDirective.unQueueStack(eventName);\n                        model[DISPATCH_EVENT](eventName);\n                        dataDirective.changing[name] = BOOLEAN_FALSE;\n                    });\n                });\n                return model;\n            },\n            /**\n             * @description basic json clone of the attributes object\n             * @func\n             * @name Model#toJSON\n             * @returns {Object} json clone of the attributes object\n             */\n            toJSON: function () {\n                // does not prevent circular dependencies.\n                // swap this out for something else if you want\n                // to prevent circular dependencies\n                return this.clone();\n            },\n            clone: directives.checkParody(DATA, 'clone', function () {\n                return {};\n            }),\n            valueOf: function () {\n                return this.id;\n            },\n            /**\n             * @description stringified version of attributes object\n             * @func\n             * @name Model#stringify\n             * @returns {String} stringified json version of\n             */\n            toString: function () {\n                return stringify(this);\n            }\n        });\n    // children should actually extend from collection.\n    // it should require certain things of the children it is tracking\n    // and should be able to listen to them\n    // app.defineDirective(CHILDREN, function () {\n    //     return new Collection[CONSTRUCTOR](NULL, BOOLEAN_TRUE);\n    // });\n    app.defineDirective(CHILDREN, Children[CONSTRUCTOR]);\n    // trick the modelMaker into thinking it is a Model Constructor\n    modelMaker[CONSTRUCTOR] = Model[CONSTRUCTOR];\n});","app.scope(function (app) {\n    var _ = app._,\n        periodSplit = splitGen(PERIOD),\n        factories = _.factories,\n        CHANGE_COUNTER = 'counter',\n        CHANGING = 'changing',\n        DataDirective = factories.DataDirective = factories.Directive.extend('DataDirective', {\n            constructor: function () {\n                var dataDirective = this;\n                dataDirective[CURRENT] = {};\n                dataDirective.previous = {};\n                dataDirective[CHANGING] = {};\n                dataDirective[CHANGE_COUNTER] = 0;\n                return dataDirective;\n            },\n            set: function (key, newValue) {\n                var dataDirective = this,\n                    current = dataDirective[CURRENT];\n                if (!isEqual(current[key], newValue)) {\n                    dataDirective.previous[key] = current[key];\n                    dataDirective[CURRENT][key] = newValue;\n                    return BOOLEAN_TRUE;\n                }\n                return BOOLEAN_FALSE;\n            },\n            get: function (key) {\n                return this[CURRENT][key];\n            },\n            clone: function () {\n                return clone(this[CURRENT]);\n            },\n            unset: function (key) {\n                var current = this[CURRENT],\n                    previous = current[key];\n                return (delete current[key]) && previous !== UNDEFINED;\n            },\n            reset: function (hash) {\n                this[CURRENT] = hash || {};\n            },\n            digest: function (model, handler) {\n                var dataDirective = this;\n                ++dataDirective[CHANGE_COUNTER];\n                handler();\n                --dataDirective[CHANGE_COUNTER];\n                // this event should only ever exist here\n                if (!dataDirective[CHANGE_COUNTER]) {\n                    model[DISPATCH_EVENT](CHANGE, dataDirective[CHANGING]);\n                    dataDirective[CHANGING] = {};\n                    dataDirective.previous = {};\n                }\n            },\n            getDeep: function (key) {\n                var lastkey, previous, dataDirective = this,\n                    current = dataDirective[CURRENT];\n                return duff(periodSplit(key), function (key, index, path) {\n                    var no_more = index === path[LENGTH];\n                    lastkey = key;\n                    if (!no_more) {\n                        current = isObject(current[key]) ? current[key] : {};\n                    }\n                }) && (isString(lastkey) ? UNDEFINED : current[lastkey]);\n            },\n            has: function (key) {\n                return this[CURRENT][key] !== UNDEFINED;\n            },\n            each: function (fn) {\n                return each(this[CURRENT], fn, this);\n            }\n        });\n    app.defineDirective(DATA, DataDirective[CONSTRUCTOR]);\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        Collection = factories.Collection,\n        SUCCESS = 'success',\n        REGISTERED = 'registered',\n        STATE = 'state',\n        EVERY = 'every',\n        FAILURES = 'failures',\n        COUNTER = 'counter',\n        GROUP_INDEX = 'groupIndex',\n        LINGUISTICS = 'Linguistics',\n        curriedEquivalence = function (value) {\n            return function (current) {\n                return isEqual(current, value);\n            };\n        },\n        curriedGreaterThan = function (value) {\n            return function (current) {\n                return current > value;\n            };\n        },\n        curriedLessThan = function (value) {\n            return function (current) {\n                return current < value;\n            };\n        },\n        push = function (where) {\n            return function (fn) {\n                var sequencer = this;\n                sequencer[where].push(bind(fn, sequencer));\n                return sequencer;\n            };\n        },\n        addValue = function (constant1, constant2) {\n            return function () {\n                var sequencer = this;\n                duff(arguments, function (value) {\n                    sequencer.add(value, constant1, constant2);\n                });\n                return sequencer;\n            };\n        },\n        isNot = addValue(BOOLEAN_TRUE),\n        makeLogic = function (context, key, handler, negate) {\n            var bound = bind(handler, context),\n                negative_bound = negate ? _.negate(bound) : bound;\n            return {\n                key: key,\n                context: context,\n                handler: handler,\n                fn: negative_bound\n            };\n        },\n        abstractedStopListening = function () {\n            this.stopListening();\n        },\n        Linguistics = factories.Linguistics = factories.Events.extend(LINGUISTICS, {\n            then: push(SUCCESS),\n            always: push(EVERY),\n            otherwise: push(FAILURES),\n            is: addValue(),\n            isnt: isNot,\n            isNot: isNot,\n            isGreaterThan: addValue(BOOLEAN_FALSE, curriedGreaterThan),\n            isLessThan: addValue(BOOLEAN_FALSE, curriedLessThan),\n            isNotGreaterThan: addValue(BOOLEAN_TRUE, curriedGreaterThan),\n            isNotLessThan: addValue(BOOLEAN_TRUE, curriedLessThan),\n            constructor: function (origin) {\n                var sequencer = this;\n                sequencer.origin = origin;\n                sequencer[COUNTER] = 0;\n                sequencer[GROUP_INDEX] = -1;\n                sequencer[REGISTERED] = {};\n                sequencer.logic = new Collection[CONSTRUCTOR]();\n                sequencer[SUCCESS] = new Collection[CONSTRUCTOR]();\n                sequencer[FAILURES] = new Collection[CONSTRUCTOR]();\n                sequencer[EVERY] = new Collection[CONSTRUCTOR]();\n                sequencer.group();\n                sequencer.listenTo(sequencer.origin, {\n                    change: 'apply',\n                    destroy: abstractedStopListening\n                });\n                return this;\n            },\n            when: function (key) {\n                return this[PARENT] ? this[PARENT].when(key) : exception({\n                    message: 'this sequencer has been destroyed'\n                });\n            },\n            and: function (key) {\n                var sequencer = this;\n                sequencer[CURRENT] = key;\n                sequencer.bind(key);\n                return sequencer;\n            },\n            or: function (key) {\n                this.group();\n                this.and(key);\n                return this;\n            },\n            group: function () {\n                var sequencer = this;\n                ++sequencer[GROUP_INDEX];\n                sequencer.logic.push({\n                    index: sequencer[GROUP_INDEX],\n                    list: new Collection[CONSTRUCTOR]()\n                });\n                return sequencer;\n            },\n            increment: function () {\n                ++this[COUNTER];\n            },\n            bind: function (target) {\n                var sequencer = this,\n                    registered = sequencer[REGISTERED];\n                if (!registered[target]) {\n                    registered[target] = BOOLEAN_TRUE;\n                    this.listenTo(this.origin, CHANGE_COLON + target, sequencer.increment);\n                }\n            },\n            unbind: function (target) {\n                var sequencer = this,\n                    registered = sequencer[REGISTERED];\n                if (registered[target]) {\n                    registered[target] = BOOLEAN_FALSE;\n                    this[STOP_LISTENING](this.origin, CHANGE_COLON + target, sequencer.increment);\n                }\n            },\n            value: function (value, defaultFn) {\n                return isFunction(value) ? value : defaultFn(value);\n            },\n            add: function (value_, negate, defaultFn) {\n                var object, sequencer = this;\n                var current = sequencer[CURRENT];\n                var value = sequencer.value(value_, defaultFn || curriedEquivalence);\n                var made = makeLogic(sequencer, current, value, negate);\n                sequencer.logic.index(sequencer[GROUP_INDEX]).list.push(made);\n                return sequencer;\n            },\n            check: function () {\n                var sequencer = this;\n                return !!(sequencer[COUNTER] && sequencer.logic.find(function (group) {\n                    return !group.list.find(function (item) {\n                        return !item.fn(sequencer.origin.get(item.key));\n                    });\n                }));\n            },\n            restart: function () {\n                this[COUNTER] = 0;\n                return this;\n            },\n            handle: function (key, arg) {\n                var sequencer = this;\n                var ret = sequencer[key] && sequencer[key].call(arg);\n                return sequencer;\n            },\n            run: function () {\n                var sequencer = this;\n                if (sequencer[STATE]) {\n                    sequencer.handle(SUCCESS);\n                } else {\n                    sequencer.handle(FAILURES);\n                }\n                sequencer.handle(EVERY);\n            },\n            apply: function () {\n                var sequencer = this,\n                    checked = sequencer.check();\n                sequencer.restart();\n                if (sequencer[STATE] !== checked) {\n                    sequencer[STATE] = checked;\n                    sequencer.run();\n                }\n                return sequencer;\n            }\n        }),\n        LINGUISTICS_MANAGER = LINGUISTICS + 'Manager',\n        LinguisticsManager = factories[LINGUISTICS_MANAGER] = factories.Model.extend(LINGUISTICS_MANAGER, {\n            when: function (key) {\n                var newish = new Linguistics[CONSTRUCTOR](this.target);\n                this.add(newish);\n                return newish.and(key);\n            },\n            constructor: function (target) {\n                // save it for later\n                this.target = target;\n                return this;\n            }\n        });\n    app.defineDirective(LINGUISTICS, LinguisticsManager[CONSTRUCTOR]);\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        FAILURE = 'failure',\n        SUCCESS = 'success',\n        PENDING = 'pending',\n        STATE = 'state',\n        ERROR = 'error',\n        ALWAYS = 'always',\n        FULFILLED = 'fulfilled',\n        SETTLED = 'settled',\n        REJECTED = 'rejected',\n        EMPTYING = 'emptying',\n        ALL_STATES = 'allStates',\n        STASHED_ARGUMENT = 'stashedArgument',\n        STASHED_HANDLERS = 'stashedHandlers',\n        flatten = _.flatten,\n        bind = _.bind,\n        isString = _.isString,\n        intendedObject = _.intendedObject,\n        duff = _.duff,\n        each = _.each,\n        extend = _.extend,\n        toArray = _.toArray,\n        isFunction = _.isFunction,\n        foldl = _.foldl,\n        result = _.result,\n        wraptry = _.wraptry,\n        indexOf = _.indexOf,\n        executeHandlers = function (name) {\n            var handler, countLimit, promise = this,\n                arg = promise[STASHED_ARGUMENT],\n                handlers = promise[STASHED_HANDLERS][name];\n            if (handlers && handlers[LENGTH]) {\n                countLimit = handlers[LENGTH];\n                promise.mark(EMPTYING);\n                while (handlers[0] && --countLimit >= 0) {\n                    handler = handlers.shift();\n                    // should already be bound\n                    handler(arg);\n                }\n                promise.unmark(EMPTYING);\n            }\n            return promise;\n        },\n        dispatch = function (promise, name) {\n            var shouldstop, finalName = name,\n                allstates = result(promise, ALL_STATES),\n                collected = [];\n            while (!shouldstop) {\n                if (_.indexOf(collected, finalName) !== -1) {\n                    finalName = BOOLEAN_FALSE;\n                } else {\n                    if (finalName === SUCCESS) {\n                        promise.mark(FULFILLED);\n                        promise.unmark(REJECTED);\n                    }\n                    if (finalName === FAILURE) {\n                        promise.unmark(FULFILLED);\n                        promise.mark(REJECTED);\n                    }\n                    finalName = allstates[finalName] && _.add(collected, finalName) ? allstates[finalName] : BOOLEAN_FALSE;\n                }\n                shouldstop = !isString(finalName);\n            }\n            return collected[LENGTH] ? duff(collected, executeHandlers, promise) : exception({\n                message: 'promise cannot resolve to an unknown state'\n            });\n        },\n        addHandler = function (key) {\n            // if you haven't already attached a method, then do so now\n            if (!this[key]) {\n                this[key] = function () {\n                    return this.handle(key, toArray(arguments));\n                };\n            }\n            return this;\n        },\n        Model = factories.Model,\n        checkAll = function () {\n            var notSuccessful, allSettled = BOOLEAN_TRUE,\n                parent = this,\n                collection = parent.directive(COLLECTION),\n                argumentAggregate = [],\n                found = collection.find(function (child) {\n                    notSuccessful = notSuccessful || child.is(REJECTED);\n                    allSettled = allSettled && child.is(SETTLED);\n                    argumentAggregate.push(child[STASHED_ARGUMENT]);\n                    return notSuccessful;\n                });\n            if (notSuccessful) {\n                parent.resolveAs(FAILURE, found[STASHED_ARGUMENT]);\n            } else {\n                // none were found that were not resolved\n                if (allSettled) {\n                    parent.resolveAs(SUCCESS, argumentAggregate);\n                }\n            }\n            return parent;\n        },\n        checkAny = function () {\n            var first, parent = this,\n                collection = parent.directive(COLLECTION);\n            if ((first = collection.find(function (child) {\n                return child.is(SETTLED);\n            }))) {\n                parent.resolveAs(first[STATE], first[STASHED_ARGUMENT]);\n            }\n            return parent;\n        },\n        baseStates = {\n            success: ALWAYS,\n            failure: ALWAYS,\n            error: ALWAYS,\n            always: BOOLEAN_TRUE\n        },\n        collect = function (promise, list) {\n            var collection = promise.directive(COLLECTION);\n            flatten(list, BOOLEAN_TRUE, function (pro) {\n                if (promise.isChildType(pro)) {\n                    collection.add(pro);\n                    collection.register('cid', pro.cid, pro);\n                }\n            });\n        },\n        listen = function (promise, unbound) {\n            var bound = bind(unbound, promise),\n                collection = promise.directive(COLLECTION);\n            collection.each(function (pro) {\n                if (collection.get('listening', pro.cid)) {\n                    return;\n                }\n                collection.register('listening', pro.cid, BOOLEAN_TRUE);\n                pro.always(function () {\n                    bound();\n                });\n            });\n        },\n        Promise = factories.Promise = _.Promise = Model.extend('Promise', {\n            addHandler: addHandler,\n            'constructor:Model': Model[CONSTRUCTOR],\n            constructor: function () {\n                var promise = this;\n                promise.state = PENDING;\n                promise[STASHED_ARGUMENT] = NULL;\n                promise[STASHED_HANDLERS] = {};\n                promise.reason = BOOLEAN_FALSE;\n                promise[CONSTRUCTOR + ':Model']();\n                // cannot have been resolved in any way yet\n                intendedObject(extend({}, baseStates, result(promise, 'associativeStates')), NULL, addHandler, promise);\n                // add passed in success handlers\n                promise.success(arguments);\n                return promise;\n            },\n            isChildType: function (promise) {\n                return promise[SUCCESS] && promise[FAILURE] && promise[ALWAYS] && promise[ERROR];\n            },\n            auxiliaryStates: function () {\n                return BOOLEAN_FALSE;\n            },\n            allStates: function () {\n                return extend({}, baseStates, result(this, 'auxiliaryStates') || {});\n            },\n            resolveAs: function (resolveAs_, opts_, reason_) {\n                var opts = opts_,\n                    resolveAs = resolveAs_,\n                    promise = this;\n                if (promise.is(SETTLED)) {\n                    return promise;\n                }\n                promise.mark(SETTLED);\n                promise.state = resolveAs || FAILURE;\n                promise[STASHED_ARGUMENT] = opts;\n                promise.reason = reason_ ? reason_ : BOOLEAN_FALSE;\n                resolveAs = promise.state;\n                promise.dispatchEvent('before:resolve');\n                promise.dispatchEvents(wraptry(function () {\n                    return dispatch(promise, resolveAs);\n                }, function (e) {\n                    promise.unmark(FULFILLED);\n                    e.options = opts;\n                    promise[STASHED_ARGUMENT] = e;\n                    return dispatch(promise, ERROR);\n                }, function (err, returnValue) {\n                    return returnValue || [];\n                }));\n                return promise;\n            },\n            fulfill: function (opts) {\n                return this.resolveAs(SUCCESS, opts);\n            },\n            resolve: function (opts) {\n                return this.fulfill(opts);\n            },\n            reject: function (opts, reason) {\n                return this.resolveAs(FAILURE, opts, reason);\n            },\n            stash: function (name, list) {\n                var promise = this,\n                    stashedHandlers = promise[STASHED_HANDLERS];\n                intendedObject(name, list, function (name, list) {\n                    var byName = stashedHandlers[name] = stashedHandlers[name] || [];\n                    flatten(isFunction(list) ? [list] : list, BOOLEAN_TRUE, function (fn) {\n                        if (isFunction(fn)) {\n                            byName.push(bind(fn, promise));\n                        }\n                    });\n                });\n                return promise;\n            },\n            handle: function (name, fn_) {\n                var promise = this,\n                    arg = promise[STASHED_ARGUMENT],\n                    fn = fn_;\n                promise.stash(name, fn);\n                if (promise.is(SETTLED)) {\n                    dispatch(promise, promise[STATE]);\n                }\n                return promise;\n            },\n            when: function () {\n                return this.all(arguments);\n            },\n            all: function () {\n                var promise = this;\n                if (promise[STATE] !== PENDING) {\n                    return promise;\n                }\n                collect(promise, arguments);\n                listen(promise, checkAll);\n                return promise;\n            },\n            race: function () {\n                var promise = this;\n                if (promise[STATE] !== PENDING) {\n                    return promise;\n                }\n                collect(promise, arguments);\n                listen(promise, checkAny);\n                return promise;\n            },\n            then: function (handlers) {\n                return this.handle(ALWAYS, handlers);\n            }\n        }),\n        PromisePrototype = Promise[CONSTRUCTOR][PROTOTYPE],\n        resulting = PromisePrototype.addHandler(SUCCESS).addHandler(FAILURE).addHandler(ALWAYS).addHandler(ERROR),\n        appPromise = Promise();\n    app.extend({\n        dependency: bind(appPromise.all, appPromise)\n    });\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        ITEMS = 'items',\n        DATASET = DATA + 'set',\n        IS_ELEMENT = 'isElement',\n        extend = _.extend,\n        isObject = _.isObject,\n        removeAt = _.removeAt,\n        objectToString = {}.toString,\n        Associator = factories.Associator = factories.Directive.extend('Associator', {\n            get: function (obj, type) {\n                var returnData, idxOf, dataset, n, key, instance = this,\n                    canRead = 0,\n                    data = {},\n                    objIsObj = isObject(obj),\n                    current = instance.sameType(obj, objIsObj),\n                    els = current[ITEMS] = current[ITEMS] || [],\n                    eldata = current[__ELID__] = current[__ELID__] || {},\n                    dataArray = current[DATA] = current[DATA] || [];\n                if (objIsObj) {\n                    if (obj && current.readData) {\n                        key = obj[__ELID__] = obj[__ELID__] || uniqueId('el');\n                        if (key) {\n                            data = eldata[key] = eldata[key] || {};\n                        }\n                    } else {\n                        idxOf = current[ITEMS][INDEX_OF](obj);\n                        if (idxOf === UNDEFINED || idxOf === -1) {\n                            idxOf = current[ITEMS][LENGTH];\n                            current[ITEMS].push(obj);\n                            dataArray[idxOf] = data;\n                        }\n                        data = dataArray[idxOf];\n                    }\n                } else {\n                    current[__ELID__][obj] = current[__ELID__][obj] || {};\n                    data = current[__ELID__][obj];\n                }\n                data.target = obj;\n                return data;\n            },\n            /**\n             * @func\n             * @name Associator#set\n             * @param {Node} el - Element to store data against\n             * @param {Object} obj - object to extend onto current data\n             * @param {String} [type] - toString evaluation of element, if it has already been evaluated\n             * @returns {Object} data that is being held on the Associator\n             */\n            set: function (el, extensor, type) {\n                var n, data = this.get(el, type);\n                extend(data, extensor || {});\n                return data;\n            },\n            remove: function (el) {\n                var idx, type = this.sameType(el);\n                if (type.readData) {\n                    idx = el[__ELID__];\n                    delete type[__ELID__][idx];\n                } else {\n                    idx = _[INDEX_OF](type[ITEMS], el);\n                    if (idx !== -1) {\n                        removeAt(type[DATA], idx);\n                        removeAt(type[ITEMS], idx);\n                    }\n                }\n            },\n            /**\n             * @func\n             * @name Associator#sameType\n             * @param {Object} obj - object to find matched types against\n             */\n            sameType: function (obj, isObj_) {\n                var instance = this,\n                    isObj = isObj_ === UNDEFINED ? isObject(obj) : isObj_,\n                    type = objectToString.call(obj),\n                    isWindow = obj && obj.window === obj,\n                    lowerType = isWindow ? '[object global]' : type.toLowerCase(),\n                    current = instance[lowerType] = instance[lowerType] || {},\n                    globalindex = lowerType[INDEX_OF]('global'),\n                    indexOfWindow = lowerType[INDEX_OF](WINDOW) === -1;\n                // skip reading data\n                if (globalindex === -1 && indexOfWindow && isObj) {\n                    current.readData = BOOLEAN_TRUE;\n                }\n                return current;\n            }\n        });\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        PROMISE = 'Promise',\n        ERROR = 'error',\n        STATUS = 'status',\n        FAILURE = 'failure',\n        SUCCESS = 'success',\n        READY_STATE = 'readyState',\n        XDomainRequest = win.XDomainRequest,\n        stringifyQuery = _.stringifyQuery,\n        GET = 'GET',\n        validTypes = gapSplit(GET + ' POST PUT DELETE HEAD TRACE OPTIONS CONNECT'),\n        baseEvents = gapSplit('progress timeout abort ' + ERROR),\n        attachBaseListeners = function (ajax) {\n            var prog = 0,\n                req = ajax.requestObject;\n            duff(baseEvents, function (evnt) {\n                if (evnt === 'progress') {\n                    req['on' + evnt] = function (e) {\n                        prog++;\n                        ajax.dispatchEvent('progress', {\n                            percent: (e.loaded / e.total) || (prog / (prog + 1)),\n                            counter: prog\n                        }, {\n                            originalEvent: e\n                        });\n                    };\n                } else {\n                    req['on' + evnt] = function (e) {\n                        ajax.resolveAs(evnt);\n                    };\n                }\n            });\n        },\n        sendthething = function (xhrReq, args, ajax) {\n            return function () {\n                wraptry(function () {\n                    xhrReq.send.apply(xhrReq, args);\n                }, function (e) {\n                    ajax.resolveAs(ERROR, e, e.message);\n                });\n            };\n        },\n        alterurlHandler = function () {\n            var ajax = this,\n                xhrReq = ajax.requestObject,\n                type = ajax.get('type'),\n                url = ajax.getUrl(),\n                args = [],\n                data = ajax.get('data');\n            if (!url) {\n                return;\n            }\n            ajax.attachResponseHandler();\n            xhrReq.open(type, url, ajax.get('async'));\n            if (data) {\n                args.push(stringify(data));\n            }\n            ajax.headers(ajax.get('headers'));\n            attachBaseListeners(ajax);\n            // have to wrap in set timeout for ie\n            setTimeout(sendthething(xhrReq, args, ajax));\n        },\n        /**\n         * @class HTTP\n         * @alias factories.HTTP\n         * @augments Model\n         * @classdesc XHR object wrapper Triggers events based on xhr state changes and abstracts many anomalies that have to do with IE\n         */\n        HTTP = factories.HTTP = factories.Promise.extend('HTTP', {\n            /**\n             * @func\n             * @name HTTP#constructor\n             * @param {string} str - url to get from\n             * @returns {HTTP} new ajax object\n             */\n            parse: parse,\n            constructor: function (str, secondary) {\n                var promise, url, thingToDo, typeThing, type, xhrReq, ajax = this,\n                    method = 'onreadystatechange';\n                // Add a cache buster to the url\n                // ajax.async = BOOLEAN_TRUE;\n                xhrReq = new XMLHttpRequest();\n                // covers ie9\n                if (!_.isUndefined(XDomainRequest)) {\n                    xhrReq = new XDomainRequest();\n                    method = 'onload';\n                }\n                if (!_.isObject(str)) {\n                    str = str || EMPTY_STRING;\n                    type = GET;\n                    typeThing = str.toUpperCase();\n                    if (indexOf(validTypes, typeThing) !== -1) {\n                        type = typeThing;\n                    } else {\n                        url = str;\n                    }\n                    str = {\n                        url: url || EMPTY_STRING,\n                        type: type\n                    };\n                }\n                str.async = BOOLEAN_TRUE;\n                str.type = (str.type || GET).toUpperCase();\n                str.method = method;\n                factories.Promise[CONSTRUCTOR].call(ajax);\n                ajax.on('change:url', alterurlHandler);\n                extend(ajax, secondary);\n                ajax.requestObject = xhrReq;\n                ajax.set(str);\n                return ajax;\n            },\n            status: function (code, handler) {\n                return this.handle(STATUS + COLON + code, handler);\n            },\n            headers: function (headers) {\n                var ajax = this,\n                    xhrReq = ajax.requestObject;\n                each(headers, function (val, key) {\n                    xhrReq.setRequestHeader(key, val);\n                });\n                return ajax;\n            },\n            /**\n             * @description specialized function to stringify url if it is an object\n             * @returns {string} returns the completed string that will be fetched / posted / put / or deleted against\n             * @name HTTP#getUrl\n             */\n            getUrl: function () {\n                var url = this.get('url');\n                if (isObject(url) && !isArray(url)) {\n                    url = stringifyQuery(url);\n                }\n                return url;\n            },\n            /**\n             * @description makes public the ability to attach a response handler if one has not already been attached. We recommend not passing a function in and instead just listening to the various events that the xhr object will trigger directly, or indirectly on the ajax object\n             * @param {function} [fn=handler] - pass in a function to have a custom onload, onreadystatechange handler\n             * @returns {ajax}\n             * @name HTTP#attachResponseHandler\n             */\n            auxiliaryStates: function () {\n                return {\n                    'status:0': FAILURE,\n                    'status:200': SUCCESS,\n                    'status:202': SUCCESS,\n                    'status:205': SUCCESS,\n                    'status:302': SUCCESS,\n                    'status:304': SUCCESS,\n                    'status:400': FAILURE,\n                    'status:401': FAILURE,\n                    'status:403': FAILURE,\n                    'status:404': FAILURE,\n                    'status:405': FAILURE,\n                    'status:406': FAILURE,\n                    'status:500': ERROR,\n                    'status:502': ERROR,\n                    'status:505': ERROR,\n                    'status:511': ERROR,\n                    'timeout': FAILURE,\n                    'abort': FAILURE\n                };\n            },\n            attachResponseHandler: function () {\n                var ajax = this,\n                    xhrReqObj = ajax.requestObject,\n                    hasFinished = BOOLEAN_FALSE,\n                    method = ajax.get('method'),\n                    handler = function (evnt) {\n                        var status, doIt, allStates, rawData, xhrReqObj = this;\n                        if (!xhrReqObj || hasFinished) {\n                            return;\n                        }\n                        status = xhrReqObj[STATUS];\n                        rawData = xhrReqObj.responseText;\n                        if (method === 'onload' || (method === 'onreadystatechange' && xhrReqObj[READY_STATE] === 4)) {\n                            ajax.set(STATUS, status);\n                            allStates = result(ajax, 'allStates');\n                            rawData = result(ajax, 'parse', rawData);\n                            hasFinished = BOOLEAN_TRUE;\n                            ajax.resolveAs(STATUS + COLON + xhrReqObj[STATUS], rawData);\n                        }\n                    };\n                if (!xhrReqObj[method]) {\n                    xhrReqObj[method] = handler;\n                }\n                return ajax;\n            }\n        });\n    _.foldl(validTypes, function (memo, key_) {\n        var key = key_;\n        key = key.toLowerCase();\n        memo[key] = function (url, options) {\n            return HTTP(_.extend({\n                type: key_,\n                url: url\n            }, options));\n        };\n        return memo;\n    }, HTTP);\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        Model = factories.Model,\n        Collection = factories.Collection,\n        MODULES = 'Modules',\n        STARTED = START + 'ed',\n        INITIALIZED = 'initialized',\n        DEFINED = 'defined',\n        startableMethods = {\n            start: function (evnt) {\n                var startable = this;\n                if (!startable.is(STARTED)) {\n                    startable.mark(STARTED);\n                    startable[DISPATCH_EVENT](START, evnt);\n                }\n                return startable;\n            },\n            stop: function (evnt) {\n                var startable = this;\n                if (startable.is(STARTED)) {\n                    startable.unmark(STARTED);\n                    startable[DISPATCH_EVENT](STOP, evnt);\n                }\n                return startable;\n            },\n            toggle: function (evnt) {\n                var startable = this;\n                if (startable.is(STARTED)) {\n                    startable[STOP](evnt);\n                } else {\n                    startable[START](evnt);\n                }\n                return startable;\n            },\n            restart: function (evnt) {\n                var startable = this;\n                if (startable.is(STARTED)) {\n                    startable[STOP](evnt);\n                }\n                startable[START](evnt);\n                return startable;\n            }\n        },\n        Startable = factories.Startable = factories.Model.extend('Startable', startableMethods),\n        doStart = function (e) {\n            if (this.startWithParent) {\n                this[START](e);\n            }\n        },\n        doStop = function (e) {\n            if (this.stopWithParent) {\n                this[STOP](e);\n            }\n        },\n        createArguments = function (module, args) {\n            return [module].concat(module.application.createArguments(), args || []);\n        },\n        checks = function (app, list) {\n            var exporting = [];\n            duff(list, function (path) {\n                var module = app.module(path);\n                if (module.is(INITIALIZED)) {\n                    exporting.push(module.exports);\n                }\n            });\n            return exporting[LENGTH] === list[LENGTH] ? exporting : BOOLEAN_FALSE;\n        },\n        Promise = _.Promise,\n        moduleMethods = {\n            module: function (name_, windo, fn) {\n                var initResult, list, globalname, arg1, arg2, parentModulesDirective, modules, attrs, parentIsModule, nametree, parent = this,\n                    originalParent = parent,\n                    name = name_,\n                    // globalname = name,\n                    namespace = name.split(PERIOD),\n                    module = parent.directive(CHILDREN).get(name_),\n                    triggerBubble = function () {\n                        module.mark(DEFINED);\n                        module.parent.bubble(INITIALIZED + ':submodule');\n                    };\n                if (module) {\n                    // hey, i found it. we're done here\n                    parent = module.parent;\n                    if (!fn) {\n                        return module;\n                    }\n                    namespace = [module.id];\n                } else {\n                    // now i have to make the chain\n                    while (namespace.length > 1) {\n                        parent = parent.module(namespace[0]);\n                        namespace.shift();\n                    }\n                }\n                parentModulesDirective = parent.directive(CHILDREN);\n                name = namespace.join(PERIOD);\n                module = parentModulesDirective.get(ID, name);\n                if (!module) {\n                    list = parent.globalname ? parent.globalname.split('.') : [];\n                    list.push(name);\n                    globalname = list.join('.');\n                    arg2 = extend(result(parent, 'childOptions') || {}, {\n                        application: app,\n                        parent: parent,\n                        id: name,\n                        globalname: globalname\n                    });\n                    if (parent === app) {\n                        module = Module({}, arg2);\n                        parentModulesDirective.add(module);\n                    } else {\n                        module = parent.add({}, arg2)[0];\n                    }\n                    parentModulesDirective.register(ID, name, module);\n                    app[CHILDREN].register(ID, globalname, module);\n                }\n                if (isWindow(windo) || isFunction(windo) || isFunction(fn)) {\n                    module.exports = module.exports || {};\n                    module.mark(INITIALIZED);\n                    initResult = module.run(windo, fn);\n                    // allows us to create dependency graphs\n                    if (initResult && isInstance(initResult, Promise)) {\n                        initResult.success(triggerBubble);\n                    } else {\n                        triggerBubble();\n                    }\n                }\n                return module;\n            },\n            run: function (windo, fn_) {\n                var result, module = this,\n                    fn = isFunction(windo) ? windo : fn_,\n                    args = isWindow(windo) ? [windo.DOMA] : [];\n                if (isFunction(fn)) {\n                    if (module.application) {\n                        result = fn.apply(module, createArguments(module, args));\n                    } else {\n                        result = fn.apply(module, module.createArguments(args));\n                    }\n                }\n                return result === UNDEFINED ? module : result;\n            },\n            export: function (one, two) {\n                var module = this;\n                intendedObject(one, two, function (key, value) {\n                    module.exports[key] = value;\n                });\n                return module;\n            },\n            constructor: function (attrs, opts) {\n                var module = this;\n                module.startWithParent = BOOLEAN_TRUE;\n                module.stopWithParent = BOOLEAN_TRUE;\n                module.exports = {};\n                Model[CONSTRUCTOR].apply(module, arguments);\n                module.listenTo(module.parent, {\n                    start: doStart,\n                    stop: doStop\n                });\n                return module;\n            },\n            topLevel: function () {\n                return !this.application || this.application === this[PARENT];\n            },\n            require: function (modulename, handler) {\n                var promise, module, list, mappedArguments, app = this;\n                if (!isFunction(handler)) {\n                    module = app.module(modulename);\n                    return module.is(DEFINED) ? module.exports : exception({\n                        message: 'that module has not ' + DEFINED + ' initialization yet'\n                    });\n                } else {\n                    promise = _.Promise();\n                    list = gapSplit(modulename);\n                    if (!isArray(list) || !list[LENGTH]) {\n                        return promise;\n                    }\n                    list = list.slice(0);\n                    promise.success(bind(handler, app));\n                    if ((mappedArguments = checks(app, list))) {\n                        promise.fulfill(mappedArguments);\n                    } else {\n                        app.application.on(INITIALIZED + ':submodule', function () {\n                            if ((mappedArguments = checks(app, list))) {\n                                app.off();\n                                promise.fulfill(mappedArguments);\n                            }\n                        });\n                    }\n                    return promise;\n                }\n            }\n        },\n        extraModuleArguments = [],\n        Module = factories.Module = factories.Model.extend('Module', moduleMethods),\n        baseModuleArguments = function (app) {\n            var _ = app._;\n            return [app, _, _ && _.factories];\n        },\n        appextendresult = app.extend(extend({}, factories.Events[CONSTRUCTOR][PROTOTYPE], startableMethods, moduleMethods, {\n            addModuleArguments: function (arr) {\n                _.addAll(extraModuleArguments, arr);\n                return this;\n            },\n            removeModuleArguments: function (arr) {\n                _.removeAll(extraModuleArguments, arr);\n                return this;\n            },\n            createArguments: function (args) {\n                return baseModuleArguments(this).concat(extraModuleArguments, args || []);\n            }\n        }));\n});","var ATTACHED = 'attached',\n    IFRAME = 'iframe',\n    isWindow = function (obj) {\n        return obj && obj === obj[WINDOW];\n    };\napp.scope(function (app) {\n    var _ = app._,\n        ATTRIBUTES = 'Attributes',\n        factories = _.factories,\n        Collection = factories.Collection,\n        globalAssociator = factories.Associator(),\n        DOM_MANAGER_STRING = 'DomManager',\n        NODE_TYPE = 'nodeType',\n        DESTROYED = 'destroyed',\n        CUSTOM = 'custom',\n        REMOVING = 'removing',\n        ACCESSABLE = 'accessable',\n        CUSTOM_LISTENER = CUSTOM + 'Listener',\n        LOCAL_NAME = 'localName',\n        UPPER_CHILD = 'Child',\n        APPEND_CHILD = 'append' + UPPER_CHILD,\n        REMOVE = 'remove',\n        REMOVE_CHILD = REMOVE + UPPER_CHILD,\n        PARENT_NODE = 'parentNode',\n        INNER_HTML = 'innerHTML',\n        INNER_TEXT = 'innerText',\n        OUTER_HTML = 'outerHTML',\n        ATTRIBUTE_CHANGE = 'attributeChange',\n        ATTRIBUTES_CHANGING = 'attributesChanging',\n        DELEGATE_COUNT = 'delegateCount',\n        CAPTURE_COUNT = 'captureCount',\n        CUSTOM_KEY = DATA + HYPHEN + CUSTOM,\n        CUSTOM_ATTRIBUTE = '[' + CUSTOM_KEY + ']',\n        CLASS__NAME = (CLASS + HYPHEN + NAME),\n        FONT_SIZE = 'fontSize',\n        DEFAULT_VIEW = 'defaultView',\n        DIV = 'div',\n        devicePixelRatio = (win.devicePixelRatio || 1),\n        ensure = function (el, owner) {\n            var data;\n            if (owner === BOOLEAN_TRUE) {\n                data = globalAssociator.get(el);\n            } else {\n                data = owner.data.get(el);\n            }\n            if (!data[DOM_MANAGER_STRING]) {\n                data[DOM_MANAGER_STRING] = DomManager(el, data, owner);\n            }\n            return data[DOM_MANAGER_STRING];\n        },\n        noMatch = /(.)^/,\n        escapes = {\n            \"'\": \"'\",\n            '\\\\': '\\\\',\n            '\\r': 'r',\n            '\\n': 'n',\n            '\\u2028': 'u2028',\n            '\\u2029': 'u2029'\n        },\n        escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g,\n        escapeChar = function (match) {\n            return '\\\\' + escapes[match];\n        },\n        escapeMap = {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#x27;',\n            '`': '&#x60;'\n        },\n        unescapeMap = invert(escapeMap),\n        createEscaper = function (map) {\n            var escaper = function (match) {\n                return map[match];\n            };\n            var source = '(?:' + keys(map).join('|') + ')';\n            var testRegexp = RegExp(source);\n            var replaceRegexp = RegExp(source, 'g');\n            return function (string) {\n                string = string == NULL ? EMPTY_STRING : EMPTY_STRING + string;\n                return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n            };\n        },\n        escape = createEscaper(escapeMap),\n        unescape = createEscaper(unescapeMap),\n        templateGenerator = function (text, templateSettings) {\n            var settings = extend({}, templateSettings);\n            var matcher = RegExp([\n                (settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source\n            ].join('|') + '|$', 'g');\n            var index = 0;\n            var source = \"__HTML__+='\";\n            text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n                source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n                index = offset + match.length;\n                if (escape) {\n                    source += \"'+\\n((__t=(this.\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n                } else if (interpolate) {\n                    source += \"'+\\n((__t=(this.\" + interpolate + \"))==null?'':__t)+\\n'\";\n                } else if (evaluate) {\n                    source += \"';\\n\" + evaluate + \"\\n__HTML__+='\";\n                }\n                // Adobe VMs need the match returned to produce the correct offset.\n                return match;\n            });\n            source += \"';\\n\";\n            // If a variable is not specified, place data values in local scope.\n            // if (!settings.variable) source = 'with(this||{}){\\n' + source + '}\\n';\n            source = \"var __t,__HTML__='',__j=Array.prototype.join,\" + \"print=function(){__HTML__+=__j.call(arguments,'');};\\n\" + source + 'return __HTML__;\\n';\n            var render = _.wraptry(function () {\n                return new Function[CONSTRUCTOR](settings.variable || '_', source);\n            }, console.error);\n            var template = function (data) {\n                return render.call(data || {}, _);\n            };\n            // Provide the compiled source as a convenience for precompilation.\n            var argument = settings.variable || 'obj';\n            template.source = 'function(' + argument + '){\\n' + source + '}';\n            return template;\n        },\n        compile = function (id, template_, context) {\n            var template, templates = context.templates = context.templates || Collection(),\n                templateHandler = templates.get(ID, id);\n            if (templateHandler) {\n                return templateHandler;\n            }\n            template = template_ || context.$('#' + id).html();\n            templateHandler = templateGenerator(template, context.templateSettings);\n            templateHandler.id = id;\n            templates.push(templateHandler);\n            templates.register(ID, id, templateHandler);\n            return templateHandler;\n        },\n        isElement = function (object) {\n            return !!(object && isNumber(object[NODE_TYPE]) && object[NODE_TYPE] === object.ELEMENT_NODE);\n        },\n        /**\n         * @private\n         * @func\n         */\n        /**\n         * @private\n         * @func\n         */\n        isDocument = function (obj) {\n            return obj && isNumber(obj[NODE_TYPE]) && obj[NODE_TYPE] === obj.DOCUMENT_NODE;\n        },\n        isFragment = function (frag) {\n            return frag && frag[NODE_TYPE] === doc.DOCUMENT_FRAGMENT_NODE;\n        },\n        getClosestWindow = function (windo_) {\n            var windo = windo_ || win;\n            return isWindow(windo) ? windo : (windo && windo[DEFAULT_VIEW] ? windo[DEFAULT_VIEW] : (windo.ownerGlobal ? windo.ownerGlobal : DOMA(windo).parent(WINDOW)[INDEX](0) || win));\n        },\n        getComputed = function (el, ctx) {\n            var ret = getClosestWindow(ctx).getComputedStyle(el);\n            return ret ? ret : getClosestWindow(el).getComputedStyle(el) || clone(el[STYLE]) || {};\n        },\n        allStyles = getComputed(doc[BODY], win),\n        rkeyEvent = /^key/,\n        rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n        motionMorph = /^device/,\n        rforceEvent = /^webkitmouseforce/,\n        hasWebP = (function () {\n            var countdown = 4,\n                result = BOOLEAN_TRUE,\n                queue = [],\n                emptyqueue = function (handler) {\n                    return function () {\n                        countdown--;\n                        handler();\n                        if (countdown) {\n                            return;\n                        }\n                        duff(queue, function (item) {\n                            item(result);\n                        });\n                        queue = [];\n                    };\n                };\n            duff([\"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\", \"UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==\", \"UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==\", \"UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA\"], function (val) {\n                var img = new Image();\n                img.onload = emptyqueue(noop);\n                img.onerror = emptyqueue(function () {\n                    result = BOOLEAN_FALSE;\n                });\n                img.src = \"data:image/webp;base64,\" + val;\n            });\n            return function (cb) {\n                if (!countdown || !result) {\n                    cb(result);\n                } else {\n                    queue.push(cb);\n                }\n            };\n        }()),\n        writeAttribute = function (el, key, val_) {\n            if (val_ === BOOLEAN_FALSE || val_ == NULL) {\n                removeAttribute(el, key);\n            } else {\n                el.setAttribute(key, (val_ === BOOLEAN_TRUE ? EMPTY_STRING : stringify(val_)) + EMPTY_STRING);\n            }\n        },\n        readAttribute = function (el, key) {\n            var coerced, val = el.getAttribute(key);\n            return convertAttributeValue(val);\n        },\n        /**\n         * @private\n         * @func\n         */\n        removeAttribute = function (el, key) {\n            el.removeAttribute(key);\n        },\n        attributeApi = {\n            preventUnCamel: BOOLEAN_FALSE,\n            read: readAttribute,\n            write: writeAttribute,\n            remove: removeAttribute\n        },\n        addRemoveAttributes = function (value_, stringManager) {\n            // handle complex adding and removing\n            var value = value_,\n                isArrayResult = isArray(value);\n            if (isObject(value) && !isArrayResult) {\n                // toggles add remove value\n                each(value, function (value, key) {\n                    stringManager.add(key).toggle(!!value);\n                });\n            } else {\n                if (!isArrayResult) {\n                    value += EMPTY_STRING;\n                }\n                stringManager.refill(gapSplit(value));\n            }\n            return stringManager;\n        },\n        DO_NOT_TRUST = BOOLEAN_FALSE,\n        cannotTrust = function (fn) {\n            return function () {\n                var ret, cachedTrust = DO_NOT_TRUST;\n                DO_NOT_TRUST = BOOLEAN_TRUE;\n                ret = fn.apply(this, arguments);\n                DO_NOT_TRUST = cachedTrust;\n                return ret;\n            };\n        },\n        makeEachTrigger = function (attr, api) {\n            var whichever = api || attr;\n            return cannotTrust(function (manager) {\n                var el = manager.element();\n                if (ALL_EVENTS_HASH[whichever] && isFunction(el[whichever])) {\n                    el[whichever]();\n                } else {\n                    manager[DISPATCH_EVENT](whichever);\n                }\n            });\n        },\n        triggerEventWrapper = function (attr_, api) {\n            var attr = attr_ || api,\n                eachHandler = makeEachTrigger(attr, api);\n            return function (fn, fn2, capturing) {\n                var doma = this;\n                if (isFunction(fn) || isFunction(fn2)) {\n                    doma.on(attr, fn, fn2, capturing);\n                } else {\n                    doma.each(eachHandler);\n                }\n                return doma;\n            };\n        },\n        triggerEventWrapperManager = function (attr_, api) {\n            var attr = attr_ || api,\n                eachHandler = makeEachTrigger(attr, api);\n            return function (fn, fn2, capturing) {\n                var manager = this;\n                if (isFunction(fn) || isFunction(fn2)) {\n                    manager.on(attr, fn, fn2, capturing);\n                } else {\n                    eachHandler(manager);\n                }\n                return manager;\n            };\n        },\n        Events = gapSplit('abort afterprint beforeprint blocked cached canplay canplaythrough change chargingchange chargingtimechange checking close complete dischargingtimechange DOMContentLoaded downloading durationchange emptied ended error fullscreenchange fullscreenerror input invalid languagechange levelchange loadeddata loadedmetadata message noupdate obsolete offline online open pagehide pageshow paste pause pointerlockchange pointerlockerror play playing ratechange reset seeked seeking stalled storage submit success suspend timeupdate updateready upgradeneeded versionchange visibilitychange'),\n        SVGEvent = gapSplit('SVGAbort SVGError SVGLoad SVGResize SVGScroll SVGUnload SVGZoom volumechange waiting'),\n        KeyboardEvent = gapSplit('keydown keypress keyup'),\n        GamePadEvent = gapSplit('gamepadconnected gamepadisconnected'),\n        CompositionEvent = gapSplit('compositionend compositionstart compositionupdate drag dragend dragenter dragleave dragover dragstart drop'),\n        MouseEvents = gapSplit('click contextmenu dblclick mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup show wheel'),\n        TouchEvents = gapSplit('touchcancel touchend touchenter touchleave touchmove touchstart'),\n        DeviceEvents = gapSplit('devicemotion deviceorientation deviceproximity devicelight'),\n        FocusEvent = gapSplit('blur focus'),\n        TimeEvent = gapSplit('beginEvent endEvent repeatEvent'),\n        AnimationEvent = gapSplit('animationend animationiteration animationstart transitionend'),\n        AudioProcessingEvent = gapSplit('audioprocess complete'),\n        UIEvents = gapSplit('abort error hashchange load orientationchange readystatechange resize scroll select unload beforeunload'),\n        ProgressEvent = gapSplit('abort error load loadend loadstart popstate progress timeout'),\n        AllEvents = concatUnique(Events, SVGEvent, KeyboardEvent, CompositionEvent, GamePadEvent, MouseEvents, TouchEvents, DeviceEvents, FocusEvent, TimeEvent, AnimationEvent, AudioProcessingEvent, UIEvents, ProgressEvent),\n        knownPrefixes = gapSplit('-o- -ms- -moz- -webkit- mso- -xv- -atsc- -wap- -khtml- -apple- prince- -ah- -hp- -ro- -rim- -tc-'),\n        // trustedEvents = gapSplit('load scroll resize orientationchange click dblclick mousedown mouseup mouseover mouseout mouseenter mouseleave mousemove change contextmenu hashchange load mousewheel wheel readystatechange'),\n        validTagNames = gapSplit('a abbr address area article aside audio b base bdi bdo blockquote body br button canvas caption cite code col colgroup data datalist dd del dfn div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 head header hr html i iframe img input ins kbd keygen label legend li link main map mark meta meter nav noscript object ol optgroup option output p param pre progress q rb rp rt rtc ruby s samp script section select small source span strong style sub sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr'),\n        validTagsNamesHash = wrap(validTagNames, BOOLEAN_TRUE),\n        ALL_EVENTS_HASH = wrap(AllEvents, BOOLEAN_TRUE),\n        knownPrefixesHash = wrap(knownPrefixes, BOOLEAN_TRUE),\n        StringManager = factories.StringManager,\n        readProperty = function (el, property) {\n            return el[property];\n        },\n        writeProperty = function (el, property, value) {\n            el[property] = value;\n        },\n        removeProperty = function (el, property) {\n            el[property] = NULL;\n        },\n        propertyApi = {\n            preventUnCamel: BOOLEAN_TRUE,\n            read: readProperty,\n            write: writeProperty,\n            remove: removeProperty\n        },\n        ensureManager = function (manager, attribute, currentValue) {\n            var _attributeManager = getStringManager(manager, attribute);\n            return _attributeManager.ensure(currentValue === BOOLEAN_TRUE ? EMPTY_STRING : currentValue, SPACE);\n        },\n        /**\n         * @private\n         * @func\n         */\n        // returns the flow of the element passed on relative to the element's bounding window\n        flow = function (el, ctx) {\n            var clientRect = el.getBoundingClientRect(),\n                computedStyle = getComputed(el, ctx.element()),\n                marginTop = unitRemoval(computedStyle.marginTop),\n                marginLeft = unitRemoval(computedStyle.marginLeft),\n                marginRight = unitRemoval(computedStyle.marginRight),\n                marginBottom = unitRemoval(computedStyle.marginBottom);\n            return {\n                height: clientRect[HEIGHT] + marginTop + marginBottom,\n                width: clientRect[WIDTH] + marginLeft + marginRight,\n                top: clientRect[TOP] - marginTop,\n                left: clientRect[LEFT] - marginLeft,\n                right: clientRect[LEFT] + clientRect[WIDTH] + marginRight,\n                bottom: clientRect[TOP] + clientRect[HEIGHT] + marginBottom\n            };\n        },\n        numberBasedCss = {\n            columnCount: BOOLEAN_TRUE,\n            columns: BOOLEAN_TRUE,\n            fontWeight: BOOLEAN_TRUE,\n            lineHeight: BOOLEAN_TRUE,\n            opacity: BOOLEAN_TRUE,\n            zIndex: BOOLEAN_TRUE,\n            zoom: BOOLEAN_TRUE,\n            animationIterationCount: BOOLEAN_TRUE,\n            boxFlex: BOOLEAN_TRUE,\n            boxFlexGroup: BOOLEAN_TRUE,\n            boxOrdinalGroup: BOOLEAN_TRUE,\n            flex: BOOLEAN_TRUE,\n            flexGrow: BOOLEAN_TRUE,\n            flexPositive: BOOLEAN_TRUE,\n            flexShrink: BOOLEAN_TRUE,\n            flexNegative: BOOLEAN_TRUE,\n            flexOrder: BOOLEAN_TRUE,\n            lineClamp: BOOLEAN_TRUE,\n            order: BOOLEAN_TRUE,\n            orphans: BOOLEAN_TRUE,\n            tabSize: BOOLEAN_TRUE,\n            widows: BOOLEAN_TRUE,\n            // SVG-related properties\n            fillOpacity: BOOLEAN_TRUE,\n            stopOpacity: BOOLEAN_TRUE,\n            strokeDashoffset: BOOLEAN_TRUE,\n            strokeOpacity: BOOLEAN_TRUE,\n            strokeWidth: BOOLEAN_TRUE\n        },\n        timeBasedCss = {\n            transitionDuration: BOOLEAN_TRUE,\n            animationDuration: BOOLEAN_TRUE,\n            transitionDelay: BOOLEAN_TRUE,\n            animationDelay: BOOLEAN_TRUE\n        },\n        /**\n         * @private\n         * @func\n         */\n        // prefixedStyles,\n        prefixedStyles = (function () {\n            var i, j, n, found, prefixIndex, __prefix, styleName, currentCheck, deprefixed, currentLen,\n                validCssNames = [],\n                prefixed = {},\n                len = 0,\n                addPrefix = function (list, prefix) {\n                    if (indexOf(list, __prefix) === -1) {\n                        list.push(__prefix);\n                    }\n                };\n            for (i = 0; i < knownPrefixes[LENGTH]; i++) {\n                currentLen = knownPrefixes[i][LENGTH];\n                if (len < currentLen) {\n                    len = currentLen;\n                }\n            }\n            for (n in allStyles) {\n                found = 0;\n                currentCheck = EMPTY_STRING;\n                __prefix = EMPTY_STRING;\n                if (isNumber(+n)) {\n                    styleName = allStyles[n];\n                } else {\n                    styleName = unCamelCase(n);\n                }\n                unCamelCase(styleName);\n                camelCase(styleName);\n                deprefixed = styleName;\n                for (j = 0; j < len && styleName[j] && !found; j++) {\n                    currentCheck += styleName[j];\n                    prefixIndex = indexOf(knownPrefixes, currentCheck);\n                    if (prefixIndex !== -1) {\n                        __prefix = knownPrefixes[prefixIndex];\n                        deprefixed = styleName.split(__prefix).join(EMPTY_STRING);\n                        found = 1;\n                    }\n                    prefixIndex = indexOf(knownPrefixes, HYPHEN + currentCheck);\n                    if (prefixIndex !== -1) {\n                        __prefix = knownPrefixes[prefixIndex];\n                        deprefixed = styleName.split(currentCheck).join(EMPTY_STRING);\n                        found = 1;\n                    }\n                }\n                deprefixed = camelCase(deprefixed);\n                validCssNames.push(deprefixed);\n                if (!prefixed[deprefixed]) {\n                    prefixed[deprefixed] = [];\n                }\n                addPrefix(prefixed[deprefixed], __prefix);\n            }\n            return prefixed;\n        }()),\n        convertStyleValue = function (key, value) {\n            return +value !== +value ? value : (timeBasedCss[key] ? value + 'ms' : (!numberBasedCss[key] ? value + PIXELS : value));\n        },\n        /**\n         * @private\n         * @func\n         */\n        style = function (els, key, value) {\n            if (!els[LENGTH]) {\n                return;\n            }\n            // var bound = bind(styleIteration, this);\n            intendedObject(key, value, function (key, value_) {\n                bound(key, convertStyleValue(value_));\n            });\n        },\n        /**\n         * @private\n         * @func\n         */\n        box = function (el, ctx) {\n            var clientrect, computed, ret = {};\n            if (!isElement(el)) {\n                return ret;\n            }\n            computed = getComputed(el, ctx);\n            clientrect = clientRect(el, ctx);\n            return {\n                borderBottom: +computed.borderBottomWidth || 0,\n                borderRight: +computed.borderRightWidth || 0,\n                borderLeft: +computed.borderLeftWidth || 0,\n                borderTop: +computed.borderTopWidth || 0,\n                paddingBottom: +computed.paddingBottom || 0,\n                paddingRight: +computed.paddingRight || 0,\n                paddingLeft: +computed.paddingLeft || 0,\n                paddingTop: +computed.paddingTop || 0,\n                marginBottom: +computed.marginBottom || 0,\n                marginRight: +computed.marginRight || 0,\n                marginLeft: +computed.marginLeft || 0,\n                marginTop: +computed.marginTop || 0,\n                computedBottom: +computed[BOTTOM] || 0,\n                computedRight: +computed[RIGHT] || 0,\n                computedLeft: +computed[LEFT] || 0,\n                computedTop: +computed[TOP] || 0,\n                top: clientrect[TOP] || 0,\n                left: clientrect[LEFT] || 0,\n                right: clientrect[RIGHT] || 0,\n                bottom: clientrect[BOTTOM] || 0,\n                width: clientrect[WIDTH] || 0,\n                height: clientrect[HEIGHT] || 0\n            };\n        },\n        clientRect = function (item) {\n            var returnValue = isElement(item) ? item.getBoundingClientRect() : {};\n            return {\n                top: returnValue[TOP] || 0,\n                left: returnValue[LEFT] || 0,\n                right: returnValue[RIGHT] || 0,\n                bottom: returnValue[BOTTOM] || 0,\n                width: returnValue[WIDTH] || item.clientWidth || 0,\n                height: returnValue[HEIGHT] || item.clientHeight || 0\n            };\n        },\n        /**\n         * @private\n         * @func\n         */\n        unitRemoval = function (str, unit) {\n            return +(str.split(unit || 'px').join(EMPTY_STRING).trim()) || 0;\n        },\n        /**\n         * @private\n         * @func\n         */\n        getStyleSize = function (el, attr, win) {\n            var val, elStyle, num = el;\n            if (isObject(el)) {\n                if (isElement(el)) {\n                    elStyle = getComputed(el, win);\n                } else {\n                    elStyle = el;\n                }\n                val = elStyle[attr];\n            } else {\n                val = el;\n            }\n            if (isString(val)) {\n                val = unitRemoval(val);\n            }\n            return val;\n        },\n        /**\n         * @private\n         * @func\n         */\n        filterExpressions = {\n            ':even': function (el, idx) {\n                return (idx % 2);\n            },\n            ':odd': function (el, idx) {\n                return ((idx + 1) % 2);\n            }\n        },\n        // always in pixels\n        numberToUnit = {\n            'in': function (val, el, win, styleAttr) {\n                return val / 96;\n            },\n            vh: function (val, el, win, styleAttr) {\n                return (val / win[INNER_HEIGHT]) * 100;\n            },\n            px: function (val, el, win, styleAttr) {\n                return val;\n            },\n            cm: function (val, el, win, styleAttr) {\n                return val / 37.79527559055118;\n            },\n            vw: function (val, el, win, styleAttr) {\n                return (val / win[INNER_WIDTH]) * 100;\n            },\n            em: function (val, el, win, styleAttr) {\n                return val / getStyleSize(el, FONT_SIZE, win);\n            },\n            mm: function (val, el, win, styleAttr) {\n                return val / 3.779527559055118;\n            },\n            vmin: function (val, el, win, styleAttr) {\n                var mult = Math.min(win[INNER_HEIGHT], win[INNER_WIDTH]);\n                return (val / mult) * 100;\n            },\n            rem: function (val, el, win, styleAttr) {\n                return val / getStyleSize(win[DOCUMENT][BODY][PARENT_NODE], FONT_SIZE, win);\n            },\n            pt: function (val, el, win, styleAttr) {\n                return val / 1.333333333333333;\n            },\n            vmax: function (val, el, win, styleAttr) {\n                var mult = Math.max(win[INNER_HEIGHT], win[INNER_WIDTH]);\n                return (val / mult) * 100;\n            },\n            '%': function (val, el, win, styleAttr) {\n                var parent = isElement(el) ? el[PARENT_NODE] : el,\n                    _val = getStyleSize(parent, styleAttr, win);\n                return (val / _val) * 100;\n            },\n            pc: function (val, el, win, styleAttr) {\n                return val / 16;\n            }\n        },\n        numToUnits = function (num, unit, el, winTop, styleAttr, returnNum) {\n            var number = num;\n            if (num) {\n                number = numberToUnit[unit](num, el, winTop, styleAttr);\n            }\n            number = (number || 0);\n            if (!returnNum) {\n                number += unit;\n            }\n            return number;\n        },\n        /**\n         * @private\n         * @func\n         */\n        unitToNumber = {\n            'in': function (val, el, win, styleAttr) {\n                return val * 96;\n            },\n            vh: function (val, el, win, styleAttr) {\n                return win[INNER_HEIGHT] * val / 100;\n            },\n            px: function (val, el, win, styleAttr) {\n                return val;\n            },\n            cm: function (val, el, win, styleAttr) {\n                return val * 37.79527559055118;\n            },\n            vw: function (val, el, win, styleAttr) {\n                return win[INNER_WIDTH] * val / 100;\n            },\n            em: function (val, el, win, styleAttr) {\n                return getStyleSize(el, FONT_SIZE) * val;\n            },\n            mm: function (val, el, win, styleAttr) {\n                return val * 3.779527559055118;\n            },\n            vmin: function (val, el, win, styleAttr) {\n                return ((Math.min(win[INNER_HEIGHT], win[INNER_WIDTH]) || 1) * val / 100);\n            },\n            rem: function (val, el, win, styleAttr) {\n                return getStyleSize(win[DOCUMENT][BODY][PARENT_NODE], FONT_SIZE) * val;\n            },\n            pt: function (val, el, win, styleAttr) {\n                return val * 1.333333333333333;\n            },\n            vmax: function (val, el, win, styleAttr) {\n                return ((Math.max(win[INNER_HEIGHT], win[INNER_WIDTH]) || 1) * val / 100);\n            },\n            '%': function (val, el, win, styleAttr) {\n                var parent = isElement(el) ? el[PARENT_NODE] : el,\n                    _val = getStyleSize(parent, styleAttr);\n                return (val * _val) / 100;\n            },\n            pc: function (val, el, win, styleAttr) {\n                return val * 16;\n            }\n        },\n        unitsToNum = function (str, el, winTop, styleAttr) {\n            var ret, number, unit = units(str);\n            if (!unit) {\n                return str;\n            }\n            number = unitRemoval(str, unit);\n            if (unitToNumber[unit]) {\n                number = unitToNumber[unit](number, el, winTop, styleAttr) || 0;\n            }\n            return number;\n        },\n        /**\n         * @private\n         * @func\n         */\n        tag = function (el, str) {\n            var tagName;\n            if (!el || !isElement(el)) {\n                return BOOLEAN_FALSE;\n            }\n            tagName = el[LOCAL_NAME].toLowerCase();\n            return str ? tagName === str.toLowerCase() : tagName;\n        },\n        /**\n         * @private\n         * @func\n         */\n        createElement = function (tagName, attributes, children, manager) {\n            var newElement, newManager, documnt = manager && manager.element(),\n                registeredElements = manager && manager.registeredElements,\n                foundElement = registeredElements && registeredElements[tagName],\n                elementName = foundElement === BOOLEAN_TRUE ? tagName : foundElement;\n            // native create\n            if (!elementName) {\n                exception({\n                    message: 'custom tag names must be registered before they can be used'\n                });\n                // foundElement = elementName = registeredElements[tagName] = DIV;\n            }\n            newElement = documnt.createElement(elementName);\n            if (foundElement && foundElement !== BOOLEAN_TRUE) {\n                attributeApi.write(newElement, CUSTOM_KEY, tagName);\n            }\n            newManager = manager.returnsManager(newElement);\n            if (attributes) {\n                newManager.attr(attributes);\n            }\n            if (!children) {\n                return newManager;\n            }\n            if (isString(children)) {\n                newManager.html(children);\n            } else {\n                if (isArrayLike(children)) {\n                    eachCall(toArray(children), 'appendTo', newManager);\n                } else {\n                    newManager.append(children);\n                }\n            }\n            return newManager;\n        },\n        makeTree = function (str, manager) {\n            var div = createElement(DIV, NULL, NULL, manager);\n            // collect custom element\n            div.html(str);\n            return DOMA(div).children().remove().unwrap();\n        },\n        makeBranch = function (str, manager) {\n            return makeTree(str, manager)[0];\n        },\n        /**\n         * @private\n         * @func\n         */\n        matches = function (element, selector) {\n            var match, parent, matchesSelector;\n            if (!selector || !element || element[NODE_TYPE] !== 1) {\n                return BOOLEAN_FALSE;\n            }\n            matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector || element.matchesSelector;\n            if (matchesSelector) {\n                return matchesSelector.call(element, selector);\n            }\n            // fall back to performing a selector:\n            parent = element[PARENT_NODE];\n            if (!parent) {\n                parent = createElement(DIV, NULL, NULL, ensure(element.ownerDocument, BOOLEAN_TRUE));\n                parent[APPEND_CHILD](element);\n            }\n            return indexOf(query(selector, parent), element) !== -1;\n        },\n        createDocumentFragment = function (nulled, context) {\n            return context.isDocument && context.element().createDocumentFragment();\n        },\n        /**\n         * @private\n         * @func\n         */\n        mappedConcat = function (context, handler, items) {\n            var list = [];\n            return list.concat.apply(list, items ? map(items, handler) : context.map(handler));\n        },\n        createElements = function (tagName, context) {\n            return DOMA(foldl(gapSplit(tagName), function (memo, name) {\n                memo.push(createElement(name, NULL, NULL, context));\n                return memo;\n            }, []), NULL, NULL, NULL, context);\n        },\n        fragment = function (els_, context) {\n            var frag, els = els_;\n            if (isFragment(els)) {\n                frag = els;\n            } else {\n                if (DOMA.isInstance(els)) {\n                    els = els.unwrap();\n                }\n                if (!isArrayLike(els)) {\n                    els = els && toArray(els);\n                }\n                frag = context.createDocumentFragment();\n                duff(els, function (manager_) {\n                    var parentNode, manager = context.returnsManager(manager_),\n                        el = manager.element();\n                    if (!manager.isElement || manager.isFragment) {\n                        return;\n                    }\n                    parentNode = el[PARENT_NODE];\n                    // we don't want to create a dom manager object if we're just checking the parentfffffffff\n                    if (parentNode && !isFragment(parentNode)) {\n                        dispatchDetached([el], context);\n                    }\n                    frag[APPEND_CHILD](el);\n                });\n            }\n            return frag;\n        },\n        htmlTextManipulator = function (attr) {\n            return function (string) {\n                var dom = this;\n                return isString(string) ? dom.eachCall(attr, string) && dom : dom.map(getInnard.bind(NULL, attr)).join(EMPTY_STRING);\n            };\n        },\n        horizontalTraverser = function (method, _idxChange) {\n            return attachPrevious(function (context, idxChange_) {\n                var collected = [],\n                    list = context.unwrap(),\n                    idxChange = _idxChange || idxChange_;\n                if (idxChange) {\n                    context.duff(function (manager) {\n                        if ((traversal = manager[method](idxChange))) {\n                            add(collected, traversal);\n                        }\n                    });\n                } else {\n                    // didn't traverse anywhere\n                    collected = list;\n                }\n                return collected;\n            });\n        },\n        discernClassProperty = function (isProp) {\n            return isProp ? CLASSNAME : CLASS;\n        },\n        makeDataKey = function (_key) {\n            var dataString = 'data-',\n                key = unCamelCase(_key),\n                sliced = _key.slice(0, 5);\n            if (dataString !== sliced) {\n                key = dataString + _key;\n            }\n            return key;\n        },\n        styleAttributeManipulator = function (manager, key, value) {\n            var element = manager.element();\n            if (manager.isElement) {\n                if (value === BOOLEAN_TRUE) {\n                    return element[STYLE][key];\n                } else {\n                    element[STYLE][key] = value;\n                }\n            }\n        },\n        // styleValueModifiers = {\n        //     '-webkit-transform': function (val) {\n        //         return val;\n        //     }\n        // },\n        // modifyFinalStyle = function (prop, val) {\n        //     if (styleValueModifiers[prop]) {\n        //         val = styleValueModifiers[prop](val);\n        //     }\n        //     return val;\n        // },\n        // DomManagerRunsInstances = function (handler, key, value, list, hash, diffHandler, isProperty) {\n        //     return function (manager) {\n        //         return handler(manager, key, value, list, hash, diffHandler, isProperty);\n        //     };\n        // },\n        // ManagerProducesKeyValues = function (context, list, hash, totalHandler, handler, isProperty) {\n        //     return function (key, value) {\n        //         DomManagerRunsInstances(totalHandler, key, value, list, hash, handler, isProperty)(context);\n        //     };\n        // },\n        // DOMproducesKeyValues = function (context, list, hash, totalHandler, handler, isProperty) {\n        //     return function (key, value) {\n        //         context.duff(DomManagerRunsInstances(totalHandler, key, value, list, hash, handler, isProperty));\n        //     };\n        // },\n        // domAttributeManipulator = function (totalHandler, innerHandler, isProperty) {\n        //     return function (understandsContext) {\n        //         return function (key, value) {\n        //             var context = this,\n        //                 hash = {},\n        //                 list = [];\n        //             intendedObject(key, value, understandsContext(context, list, hash, totalHandler, innerHandler, isProperty));\n        //             return list[LENGTH] === 1 ? hash[list[0]] : context;\n        //         };\n        //     };\n        // },\n        attachPrevious = function (fn) {\n            return function (one, two, three, four, five) {\n                var prev = this,\n                    // ensures it's still a dom object\n                    result = fn(prev, one, two, three, four, five),\n                    // don't know if we went up or down, so use null as context\n                    obj = new DOMA[CONSTRUCTOR](result, NULL, BOOLEAN_TRUE, NULL, prev.context.owner);\n                obj._previous = prev;\n                return obj;\n            };\n        },\n        // coordinates\n        covers = function (element, coords) {\n            var _clientRect = clientRect(element),\n                bottom = _clientRect[BOTTOM],\n                right = _clientRect[RIGHT],\n                left = _clientRect[LEFT],\n                tippytop = _clientRect[TOP],\n                x = coords.x,\n                y = coords.y,\n                ret = BOOLEAN_FALSE;\n            if (x > left && x < right && y > tippytop && y < bottom) {\n                ret = BOOLEAN_TRUE;\n            }\n            return ret;\n        },\n        center = function (clientRect) {\n            return {\n                x: clientRect[LEFT] + (clientRect[WIDTH] / 2),\n                y: clientRect[TOP] + (clientRect[HEIGHT] / 2)\n            };\n        },\n        distance = function (a, b) {\n            var xdiff = a.x - b.x,\n                ydiff = a.y - b.y;\n            return Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\n        },\n        closer = function (center, current, challenger) {\n            return distance(center, current) < distance(center, challenger);\n        },\n        createSelector = function (doma, args, fn) {\n            var fun, selector, capturing, group, name = args.shift();\n            if (isString(args[0]) || args[0] == NULL) {\n                selector = args.shift();\n            }\n            if (isString(args[0])) {\n                args[0] = doma[args[0]];\n            }\n            if (!isFunction(args[0])) {\n                return this;\n            }\n            fun = args.shift();\n            capturing = args.shift();\n            if (isString(capturing)) {\n                group = capturing;\n                capturing = BOOLEAN_FALSE;\n            } else {\n                capturing = !!capturing;\n            }\n            // that's all folks\n            group = args.shift();\n            fn(doma, name, selector, fun, capturing, group);\n            return doma;\n        },\n        expandEventListenerArguments = function (fn) {\n            return function () {\n                var selector, doma = this,\n                    args = toArray(arguments),\n                    nameOrObject = args.shift();\n                if (isObject(nameOrObject)) {\n                    if (isString(args[0])) {\n                        selector = args.shift();\n                    }\n                    each(nameOrObject, function (handler, key) {\n                        createSelector(doma, [key, selector, handler].concat(args), fn);\n                    });\n                    return doma;\n                } else {\n                    args.unshift(nameOrObject);\n                    return createSelector(doma, args, fn);\n                }\n            };\n        },\n        validateEvent = function (evnt, el, name_) {\n            return evnt && isObject(evnt) && !isWindow(evnt) && isNumber(evnt.AT_TARGET) ? evnt : {\n                data: stringify(evnt),\n                type: name_,\n                bubbles: BOOLEAN_FALSE,\n                eventPhase: 2,\n                cancelable: BOOLEAN_FALSE,\n                defaultPrevented: BOOLEAN_FALSE,\n                isTrusted: BOOLEAN_FALSE,\n                timeStamp: now(),\n                target: el\n            };\n        },\n        isCapturing = function (evnt) {\n            var capturing = BOOLEAN_FALSE,\n                eventPhase = evnt.eventPhase;\n            if (eventPhase === 1) {\n                capturing = BOOLEAN_TRUE;\n            }\n            return capturing;\n        },\n        _eventExpander = wrap({\n            ready: 'DOMContentLoaded',\n            deviceorientation: 'deviceorientation mozOrientation',\n            fullscreenalter: 'webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange',\n            hover: 'mouseenter mouseleave',\n            forcewillbegin: 'mouseforcewillbegin webkitmouseforcewillbegin',\n            forcechange: 'mouseforcechange webkitmouseforcechange',\n            forcedown: 'mouseforcedown webkitmouseforcedown',\n            forceup: 'mouseforceup webkitmouseforceup',\n            force: 'mouseforcewillbegin webkitmouseforcewillbegin mouseforcechange webkitmouseforcechange mouseforcedown webkitmouseforcedown mouseforceup webkitmouseforceup'\n        }, gapSplit),\n        distilledEventName = foldl(_eventExpander, function (memo, arr, key) {\n            duff(arr, function (item) {\n                memo[item] = key;\n            });\n            return memo;\n        }, {}),\n        eventExpander = function (expanders, fn, stack_) {\n            var stack = stack_ || [];\n            return function (nme) {\n                var name = nme,\n                    hadInList = indexOf(stack, name) !== -1;\n                if (!hadInList) {\n                    stack.push(name);\n                }\n                if (expanders[name] && !hadInList) {\n                    duff(expanders[name], eventExpander(expanders, fn, stack));\n                } else {\n                    fn(name, stack[0], stack.slice(0));\n                }\n                if (!hadInList) {\n                    stack.pop();\n                }\n            };\n        },\n        addEventListener = expandEventListenerArguments(function (manager, name, selector, callback, capture, group) {\n            return isFunction(callback) ? _addEventListener(manager, name, group, selector, callback, capture) : manager;\n        }),\n        addEventListenerOnce = expandEventListenerArguments(function (manager, types, selector, callback, capture, group) {\n            var _callback;\n            return isFunction(callback) && _addEventListener(manager, types, group, selector, (_callback = once(function () {\n                _removeEventListener(manager, types, group, selector, _callback, capture);\n                return callback.apply(this, arguments);\n            })), capture);\n        }),\n        removeEventListener = expandEventListenerArguments(function (manager, name, selector, handler, capture, group) {\n            return isFunction(handler) ? _removeEventListener(manager, name, group, selector, handler, capture) : manager;\n        }),\n        _addEventListener = function (manager, eventNames, group, selector, handler, capture) {\n            var events, wasCustom = manager.is(CUSTOM);\n            duff(gapSplit(eventNames), eventExpander(manager.owner.events.expanders, function (name, passedName, nameStack) {\n                events = events || manager.directive(EVENTS);\n                if (!ALL_EVENTS_HASH[name]) {\n                    manager.mark(CUSTOM_LISTENER);\n                }\n                events.attach(name, {\n                    capturing: !!capture,\n                    origin: manager,\n                    handler: handler,\n                    group: group,\n                    selector: selector,\n                    passedName: passedName,\n                    domName: name,\n                    domTarget: manager,\n                    nameStack: nameStack\n                });\n            }));\n            if (!wasCustom && manager.is(CUSTOM_LISTENER)) {\n                markCustom(manager, BOOLEAN_TRUE);\n                manager.remark(ATTACHED, isAttached(manager.element(), manager.owner));\n            }\n            return manager;\n        },\n        eventToNamespace = function (evnt) {\n            var evntName;\n            if (!isString(evnt)) {\n                evnt = evnt.type;\n            }\n            evnt = evnt.split(PERIOD);\n            evntName = evnt.shift();\n            return [evntName, evnt.sort().join(PERIOD)];\n        },\n        appendChild = function (el) {\n            return this.insertAt(el, NULL);\n        },\n        prependChild = function (el) {\n            return this.insertAt(el, 0);\n        },\n        attributeParody = function (method) {\n            return function (one, two) {\n                return attributeApi[method](this.element(), one, two);\n            };\n        },\n        getInnard = function (attribute, manager) {\n            var windo, win, doc, parentElement, returnValue = EMPTY_STRING;\n            if (manager.isIframe) {\n                testIframe(manager);\n                windo = manager.window();\n                if (windo.is(ACCESSABLE)) {\n                    parentElement = windo.element();\n                    doc = parentElement[DOCUMENT];\n                    returnValue = doc.body ? doc.body[PARENT_NODE].outerHTML : EMPTY_STRING;\n                }\n            } else {\n                if (manager.isElement) {\n                    parentElement = manager.element();\n                    returnValue = parentElement[attribute];\n                }\n            }\n            return returnValue;\n        },\n        setInnard = function (attribute, manager, value) {\n            var owner, cachedValue, win, doc, windo, doTheThing, parentElement;\n            if (manager.isIframe) {\n                windo = manager.window();\n                testIframe(manager);\n                if (windo.is(ACCESSABLE)) {\n                    parentElement = windo.element();\n                    doc = parentElement[DOCUMENT];\n                    doc.open();\n                    doc.write(value);\n                    doc.close();\n                    doTheThing = BOOLEAN_TRUE;\n                }\n            } else {\n                if (manager.isElement) {\n                    parentElement = manager.element();\n                    cachedValue = parentElement[attribute];\n                    parentElement[attribute] = value || EMPTY_STRING;\n                    owner = manager.owner;\n                    duff(owner.$(CUSTOM_ATTRIBUTE, parentElement), owner.returnsManager, owner);\n                    if (cachedValue !== parentElement[attribute]) {\n                        doTheThing = BOOLEAN_TRUE;\n                    }\n                }\n            }\n            if (doTheThing) {\n                manager.bubble('content:changed', value);\n            }\n        },\n        innardManipulator = function (attribute) {\n            return function (value) {\n                var manager = this,\n                    returnValue = manager;\n                if (value === UNDEFINED) {\n                    returnValue = getInnard(attribute, manager);\n                } else {\n                    setInnard(attribute, manager, value);\n                }\n                return returnValue;\n            };\n        },\n        /**\n         * @func\n         */\n        testIframe = function (manager) {\n            var contentWindow, contentWindowManager, element;\n            manager.isIframe = manager.tagName === IFRAME;\n            if (!manager.isIframe) {\n                return;\n            }\n            element = manager.element();\n            contentWindow = element.contentWindow;\n            manager.remark('windowReady', !!contentWindow);\n            if (!contentWindow) {\n                return;\n            }\n            contentWindowManager = manager.owner.returnsManager(contentWindow);\n            contentWindowManager.iframe = manager;\n            markGlobal(contentWindowManager);\n            if (!manager.cachedContent || !contentWindowManager.is(ACCESSABLE)) {\n                return;\n            }\n            // must be string\n            manager.html(manager.cachedContent);\n            manager.cachedContent = NULL;\n        },\n        cachedDispatch = factories.Events[CONSTRUCTOR][PROTOTYPE][DISPATCH_EVENT],\n        eventDispatcher = function (manager, name, e, capturing_) {\n            var capturing = !!capturing_;\n            // ,\n            // fullName = capturing + COLON + name;\n            return cachedDispatch.call(manager, name, validateEvent(e, manager.element(), name), {\n                capturing: capturing\n            });\n        },\n        directAttributes = {\n            id: BOOLEAN_FALSE,\n            src: BOOLEAN_FALSE,\n            checked: BOOLEAN_FALSE,\n            disabled: BOOLEAN_FALSE,\n            classes: CLASSNAME\n        },\n        videoDirectEvents = {\n            play: 'playing',\n            pause: 'paused'\n        },\n        directEvents = gapSplit('blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu'),\n        // collected here so DOMA can do what it wants\n        allDirectMethods = directEvents.concat(_.keys(videoDirectEvents), _.keys(directAttributes)),\n        isAttached = function (element_, owner) {\n            var isAttachedResult, parent, potential, manager = owner.returnsManager(element_),\n                element = manager.element();\n            if ((isAttachedResult = manager.is(ATTACHED))) {\n                return isAttachedResult;\n            }\n            if (manager.isWindow) {\n                return BOOLEAN_TRUE;\n            }\n            while (!parent && element[PARENT_NODE]) {\n                potential = element[PARENT_NODE];\n                if (isFragment(potential)) {\n                    return BOOLEAN_FALSE;\n                }\n                if (isDocument(potential)) {\n                    return BOOLEAN_TRUE;\n                }\n                if (potential[__ELID__]) {\n                    return isAttached(potential, owner);\n                }\n                element = potential;\n            }\n            return BOOLEAN_FALSE;\n        },\n        dispatchDomEvent = function (evnt, mark) {\n            return function (list, owner) {\n                var managers = [];\n                // mark all managers first\n                duff(list, function (element) {\n                    var manager = owner.returnsManager(element);\n                    var original = manager.is(ATTACHED);\n                    manager.remark(ATTACHED, mark);\n                    if (mark !== original && manager.isElement && manager.is(CUSTOM_LISTENER)) {\n                        managers.push(manager);\n                    }\n                });\n                _.eachCall(managers, DISPATCH_EVENT, evnt);\n            };\n        },\n        dispatchDetached = dispatchDomEvent('detach', BOOLEAN_FALSE),\n        dispatchAttached = dispatchDomEvent('attach', BOOLEAN_TRUE),\n        applyStyle = function (key, value, manager, important) {\n            var newStyles, found, cached, element = manager.element();\n            if (!manager.isElement || (element[STYLE][key] === value && important)) {\n                return BOOLEAN_FALSE;\n            }\n            cached = attributeApi.read(element, STYLE);\n            value = value !== '' ? convertStyleValue(key, value) : value;\n            if (!important) {\n                duff(prefixedStyles[camelCase(key)], function (prefix) {\n                    element[STYLE][prefix + unCamelCase(key)] = value;\n                });\n            } else {\n                // write with importance\n                attributeApi.write(element, STYLE, (newStyles = foldl(cached.split(';'), function (memo, item_, index, items) {\n                    var item = item_.trim(),\n                        itemSplit = item.split(COLON),\n                        property = itemSplit[0].trim(),\n                        setValue = itemSplit[1].trim();\n                    if (property === key) {\n                        found = BOOLEAN_TRUE;\n                        setValue = value + ' !important';\n                    }\n                    memo.push([property, setValue].join(': '));\n                    if (index === items[LENGTH] - 1 && !found) {\n                        memo.push([key, value + ' !important'].join(': '));\n                    }\n                    return memo;\n                }, []).join('; ')) ? newStyles + ';' : newStyles);\n            }\n            return attributeApi.read(element, STYLE) !== cached;\n        },\n        attributeValuesHash = {\n            set: function (attributeManager, set, nulled, read) {\n                attributeManager.refill(set === BOOLEAN_TRUE ? [] : set);\n                if (set === BOOLEAN_FALSE) {\n                    attributeManager.mark(REMOVING);\n                }\n            },\n            add: function (attributeManager, add) {\n                duff(add, attributeManager.add, attributeManager);\n            },\n            remove: function (attributeManager, remove) {\n                duff(remove, attributeManager.remove, attributeManager);\n            },\n            toggle: function (attributeManager, togglers, direction) {\n                duff(togglers, function (toggler) {\n                    attributeManager.toggle(toggler, direction);\n                });\n            },\n            change: function (attributeManager, remove, add) {\n                this.remove(attributeManager, remove);\n                this.add(attributeManager, gapSplit(add));\n            }\n        },\n        unmarkChange = function (fn) {\n            return function (manager, idx) {\n                var returnValue = fn(manager, idx);\n                if (manager.is(ATTRIBUTES_CHANGING)) {\n                    manager.unmark(ATTRIBUTES_CHANGING);\n                    manager[DISPATCH_EVENT](ATTRIBUTE_CHANGE);\n                }\n                return returnValue;\n            };\n        },\n        queueAttributeValues = function (attribute_, second_, third_, api, domHappy_, merge, passedTrigger_) {\n            var attribute = attribute_ === CLASS ? CLASSNAME : attribute_,\n                domHappy = domHappy_ || unCamelCase,\n                unCamelCased = api.preventUnCamel ? attribute : domHappy(attribute),\n                withClass = unCamelCased === CLASSNAME || unCamelCased === CLASS__NAME,\n                trigger = (withClass ? (api = propertyApi) && (unCamelCased = CLASSNAME) && CLASSNAME : passedTrigger_) || unCamelCased;\n            return function (manager, idx) {\n                var generated, el = manager.element(),\n                    read = api.read(el, unCamelCased),\n                    returnValue = manager,\n                    attributeManager = ensureManager(manager, unCamelCased, read);\n                if (merge === 'get') {\n                    if (!idx) {\n                        returnValue = read;\n                    }\n                    return returnValue;\n                }\n                intendedObject(second_, third_, function (second, third) {\n                    var currentMerge = merge || (third === BOOLEAN_TRUE ? 'add' : (third === BOOLEAN_FALSE ? REMOVE : 'toggle'));\n                    attributeValuesHash[currentMerge](attributeManager, gapSplit(second), third, read);\n                });\n                if (attributeManager.changeCounter) {\n                    if (attributeManager.is(REMOVING)) {\n                        attributeManager.unmark(REMOVING);\n                        api.remove(el, unCamelCased);\n                    } else {\n                        generated = attributeManager.generate(SPACE);\n                        api.write(el, unCamelCased, generated);\n                    }\n                }\n                if (generated !== read && manager.is(CUSTOM_LISTENER)) {\n                    manager.mark(ATTRIBUTES_CHANGING);\n                    manager[DISPATCH_EVENT](ATTRIBUTE_CHANGE + COLON + trigger, {\n                        previous: read,\n                        current: convertAttributeValue(generated)\n                    });\n                }\n            };\n        },\n        convertAttributeValue = function (val_) {\n            var coerced, val = val_;\n            if (val === EMPTY_STRING) {\n                val = BOOLEAN_TRUE;\n            } else {\n                if (val == NULL) {\n                    val = BOOLEAN_FALSE;\n                } else {\n                    coerced = +val;\n                    val = coerced === coerced ? coerced : val;\n                }\n            }\n            return val;\n        },\n        domAttributeManipulatorExtended = function (proc, innerHandler, api) {\n            return function (normalize) {\n                return function (first, second, third, alternateApi, domHappy, trigger) {\n                    return normalize(proc(first, second, third, alternateApi || api, domHappy, innerHandler, trigger), this);\n                };\n            };\n        },\n        hasAttributeValue = function (property, values_, third, api) {\n            var values = gapSplit(values_);\n            return function (manager) {\n                var el = manager.element(),\n                    attributeManager = getStringManager(manager, property),\n                    read = api.read(el, property);\n                attributeManager.ensure(read, SPACE);\n                return find(values, function (value) {\n                    var stringInstance = attributeManager.get(ID, value);\n                    return stringInstance ? !stringInstance.isValid() : BOOLEAN_TRUE;\n                });\n            };\n        },\n        setValue = domAttributeManipulatorExtended(queueAttributeValues, 'set', attributeApi),\n        addValue = domAttributeManipulatorExtended(queueAttributeValues, 'add', attributeApi),\n        removeValue = domAttributeManipulatorExtended(queueAttributeValues, REMOVE, attributeApi),\n        toggleValue = domAttributeManipulatorExtended(queueAttributeValues, 'toggle', attributeApi),\n        changeValue = domAttributeManipulatorExtended(queueAttributeValues, 'change', attributeApi),\n        getValue = domAttributeManipulatorExtended(queueAttributeValues, 'get', attributeApi),\n        hasValue = domAttributeManipulatorExtended(hasAttributeValue, 'has', attributeApi),\n        getSetter = function (proc, givenApi, keyprocess) {\n            return function (understandsContext) {\n                return function (first, second_, api_) {\n                    var reverseCache, context = this,\n                        firstIsString = isString(first),\n                        api = firstIsString ? api_ : second_,\n                        second = firstIsString ? second_ : NULL,\n                        usingApi = givenApi || api;\n                    if (firstIsString && second === UNDEFINED) {\n                        context = context.index(0);\n                        return usingApi.read(context.element(), keyprocess(first));\n                    } else {\n                        reverseCache = {};\n                        context.each(unmarkChange(intendedIteration(first, second, function (first, second, manager, idx) {\n                            var processor = reverseCache[first] = reverseCache[first] || proc(first, second, NULL, usingApi, keyprocess, isObject(second) ? NULL : 'set');\n                            processor(manager, idx);\n                        })));\n                        return context;\n                    }\n                };\n            };\n        },\n        attrApi = getSetter(queueAttributeValues, attributeApi, unCamelCase),\n        dataApi = getSetter(queueAttributeValues, attributeApi, makeDataKey),\n        propApi = getSetter(queueAttributeValues, propertyApi, unCamelCase),\n        domFirst = function (handler, context) {\n            var first = context.index(0);\n            return first && handler(first, 0);\n        },\n        domIterates = function (handler, context) {\n            context.each(handler);\n            return context;\n        },\n        returnsFirst = function (fn, context) {\n            return fn(context.index(), 0);\n        },\n        domContextFind = function (fn, context) {\n            return !context.find(fn);\n        },\n        makeValueTarget = function (target, passed_, api, domaHappy) {\n            var passed = passed_ || target;\n            return _.foldl(gapSplit('add remove toggle change has set'), function (memo, method_) {\n                var method = method_ + 'Value';\n                memo[method_ + upCase(target)] = function (one, two) {\n                    return this[method](passed, one, two, api, domaHappy, target);\n                };\n                return memo;\n            }, {});\n        },\n        markCustom = function (manager, forceCustom) {\n            var resultant, isCustom, isCustomValue = manager.isElement && attributeApi.read(manager.element(), CUSTOM_KEY);\n            manager.remark(CUSTOM, forceCustom || !!isCustomValue);\n            if (manager.is(CUSTOM) && !isCustomValue) {\n                isCustomValue = BOOLEAN_TRUE;\n            }\n            // isCustomValue = isCustomValue || BOOLEAN_TRUE;\n            resultant = manager.isElement && writeAttribute(manager.element(), CUSTOM_KEY, isCustomValue);\n            if (isCustomValue) {\n                manager.registeredAs = isCustomValue;\n            }\n        },\n        markElement = function (manager) {\n            var element;\n            manager.isElement = BOOLEAN_FALSE;\n            manager.isIframe = BOOLEAN_FALSE;\n            manager.tagName = BOOLEAN_FALSE;\n            if (manager.isWindow) {\n                return;\n            }\n            element = manager.element();\n            if ((manager.isElement = isElement(element))) {\n                manager.tagName = tag(element);\n                testIframe(manager);\n                markCustom(manager);\n            }\n        },\n        markGlobal = function (manager) {\n            var isAccessable, element = manager.element();\n            manager.isWindow = isWindow(element);\n            if (!manager.isWindow || !manager.owner) {\n                return;\n            }\n            manager.remark(ACCESSABLE, (isAccessable = !!wraptry(function () {\n                return element[DOCUMENT];\n            })));\n            manager.isTop = !!(window && element === window.top);\n            manager.setAddress();\n            // either the window is null, (we're detached),\n            // or it is an unfriendly window\n            if (!isAccessable) {\n                return;\n            }\n            if (manager.isTop) {\n                // tests do never fail on top window because it always\n                // exists otherwise this code would not run\n                return;\n            }\n            // more accessable tests\n            manager.remark(ACCESSABLE, manager.sameOrigin());\n        },\n        test = function (manager, owner) {\n            var element = manager.element();\n            markGlobal(manager);\n            markElement(manager);\n            manager.isDocument = BOOLEAN_FALSE;\n            manager.isFragment = BOOLEAN_FALSE;\n            manager.unmark(ATTACHED);\n            if (manager.isWindow) {\n                manager.mark(ATTACHED);\n                return;\n            }\n            manager.isDocument = isDocument(element);\n            manager.isFragment = isFragment(element);\n            if (manager.isDocument || manager.isFragment) {\n                manager.mark(ATTACHED);\n                return;\n            }\n            manager.remark(ATTACHED, isAttached(manager, owner));\n        },\n        registeredElementName = function (name, manager) {\n            return upCase(ELEMENT) + HYPHEN + manager.documentId + HYPHEN + name;\n        },\n        iframeContent = function (head, body) {\n            return '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"user-scalable=no,width=device-width,initial-scale=1\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">' + head + '</head><body>' + body + '</body></html>';\n        },\n        query = function (str, ctx) {\n            return toArray((ctx || doc_).querySelectorAll(str));\n        },\n        DOMA_SETUP = factories.DOMA_SETUP = function (doc_) {\n            var registeredElements, $, setup, wrapped, manager = returnsManager(doc_, BOOLEAN_TRUE),\n                unregisteredElements = factories.Registry(),\n                expanders = parse(stringify(_eventExpander)),\n                cachedMotionEvent, lastCalculatedMotionEvent = 0,\n                cachedMotionCalculation = {},\n                defaultMotion = function () {\n                    cachedMotionEvent = NULL;\n                    return {\n                        x: 0,\n                        y: 0,\n                        z: 0,\n                        motionX: 0,\n                        motionY: 0,\n                        motionZ: 0,\n                        interval: 1,\n                        rotationRate: 0,\n                        alpha: 0,\n                        beta: 0,\n                        gamma: 0,\n                        absolute: 0\n                    };\n                };\n            if (manager.documentId) {\n                return manager.$;\n            }\n            registeredElements = clone(validTagsNamesHash);\n            setup = function (e) {\n                manager.DOMContentLoadedEvent = e;\n                manager.mark('ready');\n            };\n            $ = function (sel, ctx) {\n                var context = ctx || manager;\n                return DOMA(sel, context, BOOLEAN_FALSE, manager === context, manager);\n            };\n            manager.documentId = uniqueId('doc');\n            wrapped = extend(wrap({\n                $: $,\n                makeTree: makeTree,\n                makeBranch: makeBranch,\n                createElements: createElements,\n                createDocumentFragment: createDocumentFragment,\n                registeredElementName: registeredElementName,\n                fragment: function () {\n                    return returnsManager(fragment(NULL, manager), manager);\n                }\n            }, function (handler) {\n                return function (one) {\n                    return handler(one, manager);\n                };\n            }), {\n                events: {\n                    custom: {},\n                    expanders: {},\n                    lists: wrap({\n                        base: Events,\n                        svg: SVGEvent,\n                        keyboard: KeyboardEvent,\n                        gamepad: GamePadEvent,\n                        composition: CompositionEvent,\n                        mouse: MouseEvents,\n                        touch: TouchEvents,\n                        device: DeviceEvents,\n                        focus: FocusEvent,\n                        time: TimeEvent,\n                        animation: AnimationEvent,\n                        audioProcessing: AudioProcessingEvent,\n                        ui: UIEvents,\n                        progress: ProgressEvent,\n                        all: AllEvents\n                    }, function (value, key) {\n                        return parse(stringify(value));\n                    })\n                },\n                supports: {},\n                returnsManager: function (item) {\n                    return item === manager || item === manager[TARGET] ? manager : returnsManager(item, manager);\n                },\n                createElement: function (one, two, three) {\n                    return createElement(one, two, three, manager);\n                },\n                expandEvent: function (passedEvent, actualEvent) {\n                    var expanders = manager.events.expanders;\n                    duff(gapSplit(actualEvent), function (actualEvent) {\n                        duff(gapSplit(passedEvent), function (passedEvent) {\n                            expanders[passedEvent] = expanders[passedEvent] || [];\n                            if (indexOf(expanders[passedEvent], actualEvent) === -1) {\n                                expanders[passedEvent].push(actualEvent);\n                            }\n                        });\n                    });\n                    return manager;\n                },\n                customEvent: function (key, value) {\n                    duff(gapSplit(key), function (key) {\n                        manager.events.custom[key] = value;\n                    });\n                    return manager;\n                },\n                iframeContent: iframeContent,\n                orderEventsByHeirarchy: BOOLEAN_TRUE,\n                data: factories.Associator(),\n                documentId: manager.documentId,\n                document: manager,\n                devicePixelRatio: devicePixelRatio,\n                constructor: DOMA[CONSTRUCTOR],\n                registeredElements: registeredElements,\n                templateSettings: {\n                    evaluate: /<%([\\s\\S]+?)%>/g,\n                    interpolate: /<%=([\\s\\S]+?)%>/g,\n                    escape: /<%-([\\s\\S]+?)%>/g\n                },\n                stashMotionEvent: function (evnt) {\n                    cachedMotionEvent = evnt;\n                },\n                motion: function () {\n                    var originalEvent, acc, acc_, someData;\n                    if (!cachedMotionEvent) {\n                        return defaultMotion();\n                    }\n                    if (lastCalculatedMotionEvent >= cachedMotionEvent.timestamp) {\n                        return cachedMotionCalculation;\n                    }\n                    lastCalculatedMotionEvent = now();\n                    originalEvent = cachedMotionEvent.originalEvent;\n                    acc = originalEvent.acceleration || ((acc_ = originalEvent.accelerationIncludingGravity) && {\n                        x: acc_.x - 9.81,\n                        y: acc_.y - 9.81,\n                        z: acc_.z - 9.81\n                    });\n                    if (acc && isNumber(acc.x)) {\n                        cachedMotionCalculation.x = acc.x;\n                        cachedMotionCalculation.y = acc.y;\n                        cachedMotionCalculation.z = acc.z;\n                        cachedMotionCalculation.interval = originalEvent.interval;\n                        cachedMotionCalculation.rotationRate = originalEvent.rotationRate;\n                        someData = BOOLEAN_TRUE;\n                    }\n                    if (originalEvent.alpha != NULL) {\n                        cachedMotionCalculation.alpha = originalEvent.alpha;\n                        cachedMotionCalculation.beta = originalEvent.beta;\n                        cachedMotionCalculation.gamma = originalEvent.gamma;\n                        cachedMotionCalculation.absolute = originalEvent.absolute;\n                        someData = BOOLEAN_TRUE;\n                    }\n                    if (!someData) {\n                        return defaultMotion();\n                    }\n                    return cachedMotionCalculation;\n                },\n                // shared across all documents running this version\n                plugin: function (handler) {\n                    plugins.push(handler);\n                    duff(allSetups, function (setup) {\n                        handler(setup);\n                    });\n                    return this;\n                },\n                compile: function (id, string) {\n                    return compile(id, string, manager);\n                },\n                collectTemplates: function () {\n                    return $('script[id]').each(function (script) {\n                        compile(script.element().id, script.html(), manager);\n                    }).remove();\n                },\n                unregisteredElement: function (manager) {\n                    unregisteredElements.keep(manager.registeredElementName(), manager.id, manager);\n                },\n                registerElement: function (name, options_) {\n                    var generatedTagName, group, wasDefined, options = options_ || {},\n                        lastKey = [],\n                        events = options.events,\n                        prototype = options.prototype,\n                        creation = options.onCreate || noop,\n                        destruction = options.onDestroy,\n                        newName = manager.registeredElementName(name),\n                        directiveCreation = function (instance, name, directive) {\n                            var extendResult = prototype && extend(instance, prototype);\n                            var eventsResult = events && instance.on(events);\n                            var newDirective = directive || {};\n                            var createResult = creation(instance, newDirective);\n                            if (destruction) {\n                                instance.on('destroy', destruction);\n                            }\n                            newDirective.validCustomElement = BOOLEAN_TRUE;\n                            return newDirective;\n                        },\n                        directiveDestruction = function (directive, instance, name) {\n                            each(prototype, function (value, key) {\n                                if (instance[key] === value) {\n                                    delete instance[key];\n                                }\n                            });\n                            if (destruction) {\n                                instance.dispatchEvent('destroy');\n                                instance.off('destroy', destruction);\n                            }\n                        };\n                    if (validTagsNamesHash[name]) {\n                        exception({\n                            message: 'element names must not be used natively by browsers'\n                        });\n                    } else {\n                        wasDefined = (options.extends && !validTagsNamesHash[options.extends] ? app.extendDirective(manager.registeredElementName(options.extends), newName, directiveCreation, directiveDestruction) : app.defineDirective(newName, directiveCreation, directiveDestruction)) || exception({\n                            message: 'element names can only be registered once per document'\n                        });\n                        registeredElements[name] = options.extends ? registeredElements[options.extends] : DIV;\n                    }\n                    newName = manager.registeredElementName(name);\n                    if ((group = unregisteredElements.group(newName))) {\n                        each(group, function (manager, id) {\n                            delete manager[newName];\n                            manager.History.drop('category', CUSTOM);\n                            manager.registerAs();\n                            unregisteredElements.drop(newName, id);\n                        });\n                    }\n                }\n            });\n            extend(manager, wrapped);\n            extend($, wrapped);\n            runSupport(manager.supports, manager);\n            setupDomContentLoaded(setup, manager);\n            return $;\n        },\n        testWithHandler = function (win, evntname, handler, failure) {\n            duff(gapSplit(evntname), function (evntname) {\n                if (win.addEventListener) {\n                    win.addEventListener(evntname, handler);\n                    win.removeEventListener(evntname, handler);\n                } else {\n                    handler(failure);\n                }\n            });\n        },\n        runSupport = function (supported, manager) {\n            var windowManager = manager.window();\n            var windowElement = windowManager.element();\n            supported.deviceMotion = !!windowElement.DeviceMotionEvent;\n            supported.deviceOrientation = !!windowElement.DeviceOrientationEvent;\n            supported.motion = supported.deviceMotion || supported.deviceOrientation;\n            testWithHandler(windowElement, 'deviceorientation devicemotion', function (e) {\n                if (e.alpha === NULL) {\n                    supported.motion = supported.deviceMotion = supported.deviceOrientation = BOOLEAN_FALSE;\n                }\n            }, {\n                alpha: NULL\n            });\n        },\n        styleManipulator = function (one, two) {\n            var unCameled, styles, manager = this;\n            if (!manager.length()) {\n                return manager;\n            }\n            if (isString(one) && two === UNDEFINED) {\n                unCameled = unCamelCase(one);\n                return (manager = manager.index(0)) && (styles = manager.getStyle()) && ((prefix = _.find(prefixedStyles[camelCase(one)], function (prefix) {\n                    return styles[prefix + unCameled] !== UNDEFINED;\n                })) ? styles[prefix + unCameled] : styles[prefix + unCameled]);\n            } else {\n                manager.each(unmarkChange(intendedIteration(one, two, applyStyle)));\n                return manager;\n            }\n        },\n        getValueCurried = getValue(returnsFirst),\n        setValueCurried = setValue(domIterates),\n        classApi = makeValueTarget(CLASS, CLASSNAME, propertyApi),\n        manager_query = function (selector) {\n            var target = this.element();\n            return $(query(selector, target), target);\n        },\n        isAppendable = function (els) {\n            return els.isValidDomManager || isElement(els) || isFragment(els);\n        },\n        iframeChangeHandler = function () {\n            testIframe(this);\n        },\n        childByTraversal = function (manager, parent, element, idxChange_, ask, isString) {\n            var target, found,\n                idxChange = idxChange_,\n                children = collectChildren(parent),\n                startIndex = indexOf(children, element);\n            if (isString) {\n                idxChange = idxChange || 1;\n                target = element;\n                while (target && !found) {\n                    target = children[(startIndex = (startIndex += idxChange))];\n                    found = matches(target, ask);\n                }\n            } else {\n                target = element;\n                target = children[startIndex];\n                target = children[startIndex + idxChange];\n            }\n            return target && manager.owner.returnsManager(target);\n        },\n        managerHorizontalTraverser = function (method, property, _idxChange_) {\n            return function (_idxChange) {\n                var stringResult, direction = _idxChange_,\n                    parent, children, currentIndex, startIndex, target, idxChange = _idxChange || _idxChange_,\n                    manager = this,\n                    element = manager.element(),\n                    traversed = element[property];\n                if (!(stringResult = isString(idxChange)) && property && !traversed) {\n                    return manager.owner.returnsManager(traversed);\n                }\n                if (!(parent = element[PARENT_NODE]) && !traversed) {\n                    return;\n                }\n                return childByTraversal(manager, parent, element, direction, idxChange, stringResult);\n            };\n        },\n        collectCustom = function (manager, markedListener) {\n            var element = manager.element();\n            return (manager.isElement && manager.is(markedListener ? CUSTOM_LISTENER : CUSTOM) ? [element] : []).concat(query(CUSTOM_ATTRIBUTE, element));\n        },\n        reconstruct = function (string, context, parent) {\n            var fragment = parent || context.createDocumentFragment();\n            var objects = parse(string);\n            var contextDocument = context.unwrap();\n            each(toArray(objects), function (object) {\n                var element = contextDocument.createElement(object.tagName);\n                reconstruct(object.children, context, manager);\n                each(obj.attributes, function (value, key) {\n                    attributeApi.write(element, unCamelCase(key), value);\n                });\n                fragment.element().appendChild(element);\n            });\n            return fragment;\n        },\n        IS_TRUSTED = 'isTrusted',\n        FULLSCREEN = 'fullscreen',\n        fixHooks = {\n            // Includes some event props shared by KeyEvent and MouseEvent\n            props: gapSplit(\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\"),\n            fixedHooks: {},\n            keyHooks: {\n                props: gapSplit(\"char charCode key keyCode\"),\n                filter: function (evnt, original) {\n                    var charCode;\n                    // Add which for key evnts\n                    if (evnt.which == NULL) {\n                        charCode = original.charCode;\n                        evnt.which = charCode != NULL ? charCode : original.keyCode;\n                    }\n                    return evnt;\n                }\n            },\n            forceHooks: {\n                props: [],\n                filter: function (evnt, original) {\n                    evnt.value = ((original.force || original.webkitForce) / 3) || 0;\n                    return evnt;\n                }\n            },\n            motionHooks: {\n                props: [],\n                reaction: function (evnt) {\n                    evnt.origin.owner.stashMotionEvent(evnt);\n                }\n            },\n            mouseHooks: {\n                props: gapSplit(\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\"),\n                filter: function (evnt, original) {\n                    var eventDoc, doc, body,\n                        button = original.button;\n                    // Calculate pageX/Y if missing and clientX/Y available\n                    if (evnt.pageX == NULL && original.clientX != NULL) {\n                        evntDoc = evnt.target.ownerDocument || doc;\n                        doc = evntDoc.documentElement;\n                        body = evntDoc[BODY];\n                        evnt.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                        evnt.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n                    }\n                    evnt.movementX = original.movementX || 0;\n                    evnt.movementY = original.movementY || 0;\n                    evnt.layerX = original.layerX || 0;\n                    evnt.layerY = original.layerY || 0;\n                    evnt.x = original.x || 0;\n                    evnt.y = original.y || 0;\n                    // Add which for click: 1 === left; 2 === middle; 3 === right\n                    // Note: button is not normalized, so don't use it\n                    if (!evnt.which && button !== UNDEFINED) {\n                        evnt.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n                    }\n                    return evnt;\n                }\n            },\n            make: function (evnt, originalEvent, options) {\n                var acc, acc_, doc, target, val, i, prop, copy, type = originalEvent.type,\n                    // Create a writable copy of the event object and normalize some properties\n                    fixHook = fixHooks.fixedHooks[type],\n                    origin = options.origin;\n                if (!fixHook) {\n                    fixHooks.fixedHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : rforceEvent.test(type) ? this.forceHooks : motionMorph.test(type) ? this.motionHooks : {};\n                }\n                copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n                i = copy[LENGTH];\n                duff(copy, function (prop) {\n                    var val = originalEvent[prop];\n                    if (val != NULL) {\n                        evnt[prop] = val;\n                    }\n                });\n                evnt.originalType = type;\n                // Support: Cordova 2.5 (WebKit) (#13255)\n                // All events should have a target; Cordova deviceready doesn't\n                // ie also does not have a target... so use current target\n                target = evnt.target || (evnt.view ? evnt.view.event.currentTarget : event && event.currentTarget) || evnt.delegateTarget.element();\n                if (!target) {\n                    target = evnt.target = doc;\n                }\n                // Support: Safari 6.0+, Chrome<28\n                // Target should not be a text node (#504, #13143)\n                if (target[NODE_TYPE] === 3) {\n                    evnt.target = target[PARENT_NODE];\n                }\n                (fixHook.filter || noop)(evnt, originalEvent);\n                type = distilledEventName[originalEvent.type] || originalEvent.type;\n                cachedObjectEventConstructor.call(evnt, options.origin, parse(originalEvent.data), type, NULL, evnt.timeStamp);\n                if (evnt.type === FULLSCREEN + CHANGE) {\n                    doc = evnt.target;\n                    if (isWindow(doc)) {\n                        doc = doc[DOCUMENT];\n                    } else {\n                        while (doc && !isDocument(doc) && doc[PARENT_NODE]) {\n                            doc = doc[PARENT_NODE];\n                        }\n                    }\n                    evnt.fullscreenDocument = doc;\n                    if (isDocument(doc)) {\n                        evnt.remark(FULLSCREEN, (doc.fullScreen || doc.webkitFullscreenElement || doc.mozFullScreenElement || doc.fullscreenElement) ? BOOLEAN_TRUE : BOOLEAN_FALSE);\n                    }\n                }\n                evnt[IS_TRUSTED] = _.has(originalEvent, IS_TRUSTED) ? originalEvent[IS_TRUSTED] : !DO_NOT_TRUST;\n                (fixHook.reaction || noop)(evnt, originalEvent);\n            }\n        },\n        cachedObjectEventConstructor = factories.ObjectEvent[CONSTRUCTOR],\n        DomEvent = factories.DomEvent = factories.ObjectEvent.extend('DomEvent', {\n            AT_TARGET: 1,\n            constructor: function (evnt, opts) {\n                var e = this;\n                if (DomEvent.isInstance(evnt)) {\n                    return evnt;\n                }\n                e.originalEvent = evnt;\n                if (!has(evnt.target) || !has(evnt.currentTarget)) {\n                    e.delegateTarget = opts.origin;\n                } else {\n                    e.delegateTarget = opts.origin.owner.returnsManager(opts.target);\n                }\n                fixHooks.make(e, evnt, opts);\n                e.capturing = opts.capturing === UNDEFINED ? isCapturing(e) : opts.capturing;\n                return e;\n            },\n            motion: function () {\n                var acc, acc_, cached, evnt = this,\n                    owner = evnt.origin.owner,\n                    motion = owner.motion();\n                return motion;\n            },\n            preventDefault: function () {\n                var e = this.originalEvent;\n                this[DEFAULT_PREVENTED] = BOOLEAN_TRUE;\n                if (e && e.preventDefault) {\n                    e.preventDefault();\n                }\n            },\n            stopPropagation: function () {\n                var e = this.originalEvent;\n                this[PROPAGATION_IS_STOPPED] = BOOLEAN_TRUE;\n                if (e && e.stopPropagation) {\n                    e.stopPropagation();\n                }\n            },\n            stopImmediatePropagation: function () {\n                var e = this.originalEvent;\n                this[IMMEDIATE_PROP_IS_STOPPED] = BOOLEAN_TRUE;\n                if (e && e.stopImmediatePropagation) {\n                    e.stopImmediatePropagation();\n                }\n                this.stopPropagation();\n            }\n        }),\n        removeEvent = function (evnt, name, mainHandler, capturing) {\n            var el = evnt.origin.element();\n            if (el.removeEventListener) {\n                el.removeEventListener(name, mainHandler[capturing], capturing);\n            } else {\n                el.detachEvent(name, mainHandler[capturing]);\n            }\n            delete mainHandler[capturing];\n        },\n        DomEventsDirective = factories.EventsDirective.extend('DomEventsDirective', {\n            remove: function (list, evnt) {\n                var events = this,\n                    elementHandlers = events.elementHandlers,\n                    name = list.name,\n                    mainHandler = elementHandlers[name],\n                    capturing = mainHandler.capturing;\n                list.remove(evnt);\n                if (capturing) {\n                    --mainHandler[CAPTURE_COUNT];\n                    if (!mainHandler[CAPTURE_COUNT]) {\n                        removeEvent(evnt, name, mainHandler, capturing);\n                    }\n                } else {\n                    if (evnt.selector) {\n                        mainHandler[DELEGATE_COUNT]--;\n                    }\n                    if (list[LENGTH]() === mainHandler[CAPTURE_COUNT]) {\n                        removeEvent(evnt, name, mainHandler, capturing);\n                    }\n                }\n            },\n            add: function (list, evnt) {\n                var foundDuplicate, delegateCount, obj, eventHandler, hadMainHandler, events = this,\n                    el = evnt.element,\n                    i = 0,\n                    // needs an extra hash to care for the actual event hanlders that get attached to dom\n                    elementHandlers = events.elementHandlers = events.elementHandlers || {},\n                    name = list.name,\n                    mainHandler = elementHandlers[name],\n                    capture = evnt.capturing,\n                    items = list.unwrap(),\n                    customEvents = evnt.origin.owner.events.custom;\n                for (; i < items[LENGTH] && !foundDuplicate; i++) {\n                    obj = items[i];\n                    foundDuplicate = evnt.capturing === evnt.capturing && evnt.handler === obj.handler && obj.group === evnt.group && evnt.selector === obj.selector && evnt.passedName === obj.passedName;\n                }\n                if (foundDuplicate) {\n                    return;\n                }\n                hadMainHandler = mainHandler;\n                // brand new event stack\n                if (!mainHandler) {\n                    mainHandler = elementHandlers[name] = {\n                        delegateCount: 0,\n                        captureCount: 0,\n                        events: events,\n                        currentEvent: NULL,\n                        capturing: capture\n                    };\n                }\n                evnt.mainHandler = mainHandler;\n                if (!mainHandler[capture]) {\n                    // i don't have that handler attached to the dom yet\n                    eventHandler = mainHandler[capture] = function (e) {\n                        return eventDispatcher(evnt.domTarget, e.type, e, capture);\n                    };\n                }\n                if (evnt.capturing) {\n                    list.insertAt(evnt, mainHandler[CAPTURE_COUNT]);\n                    ++mainHandler[CAPTURE_COUNT];\n                } else {\n                    if (evnt.selector) {\n                        delegateCount = mainHandler[DELEGATE_COUNT];\n                        ++mainHandler[DELEGATE_COUNT];\n                        if (delegateCount) {\n                            list.insertAt(evnt, mainHandler[CAPTURE_COUNT] + delegateCount);\n                        } else {\n                            list.insertAt(evnt, mainHandler[CAPTURE_COUNT]);\n                        }\n                    } else {\n                        list.unwrap().push(evnt);\n                    }\n                }\n                duff(evnt.nameStack, function (name) {\n                    evnt.fn = (customEvents[name] || returnsFirstArgument)(evnt.fn, name, evnt) || evnt.fn;\n                });\n                if (eventHandler) {\n                    el = evnt.origin.element();\n                    if (el.addEventListener) {\n                        el.addEventListener(evnt.domName, eventHandler, capture);\n                    } else {\n                        if (capture) {\n                            return;\n                        }\n                        el.attachEvent(evnt.domName, eventHandler);\n                    }\n                }\n            },\n            create: function (origin, original, type, opts) {\n                return DomEvent(original, {\n                    target: origin.target,\n                    origin: origin,\n                    capturing: opts.capturing\n                });\n            },\n            queue: function (stack, handler, evnt) {\n                var queued;\n                if ((queued = stack.add(handler))) {\n                    evnt.currentTarget = handler.temporaryTarget;\n                    handler.mainHandler.currentEvent = evnt;\n                }\n                return queued;\n            },\n            unQueue: function (stack, handler, evnt) {\n                evnt.currentTarget = handler.currentTarget = NULL;\n                handler.mainHandler.currentEvent = NULL;\n                stack.pop();\n                return this;\n            },\n            cancelled: function (list_, evnt, last) {\n                var mainHandler, delegateCount, first, events = this;\n                if (!list_[LENGTH]()) {\n                    return events;\n                }\n                first = list_.first();\n                mainHandler = first.mainHandler;\n                delegateCount = mainHandler[DELEGATE_COUNT];\n                if (!delegateCount || delegateCount < last) {\n                    return events;\n                }\n                while (last <= delegateCount) {\n                    first = list_[last];\n                    first.temporaryTarget = NULL;\n                    ++last;\n                }\n                return events;\n            },\n            nextBubble: function (start, collected) {\n                var parent, element = start.element();\n                if (!start.isElement || element[PARENT_NODE]) {\n                    return BOOLEAN_FALSE;\n                }\n                return start.parent(function (element) {\n                    if (element[__ELID__]) {\n                        parent = start.owner.returnsManager(element);\n                        if (parent.is(CUSTOM_LISTENER)) {\n                            return [parent, BOOLEAN_TRUE];\n                        }\n                    }\n                    return [element[PARENT_NODE], BOOLEAN_FALSE];\n                });\n            },\n            subset: function (list_, evnt) {\n                var parent, found, target, sumCount, element, counter, el, afterwards, selector, branch, first, mainHandler, delegateCount, captureCount, i = 0,\n                    j = 0,\n                    list = [],\n                    manager = evnt.origin;\n                if (!list_[LENGTH]) {\n                    return [];\n                }\n                first = list_[0];\n                mainHandler = first.mainHandler;\n                captureCount = mainHandler[CAPTURE_COUNT];\n                delegateCount = mainHandler[DELEGATE_COUNT];\n                if (evnt.capturing) {\n                    return list_.slice(0, captureCount);\n                }\n                // sumCount = delegateCount - captureCount;\n                manager = evnt.origin;\n                el = manager.element();\n                // only take the target so we don't try to make managers for everyone\n                target = evnt.target;\n                // there are no delegated events, so just return everything after capture\n                if (!delegateCount || evnt.target === el) {\n                    return list_.slice(captureCount);\n                }\n                sumCount = captureCount + delegateCount;\n                i = captureCount;\n                afterwards = list_.slice(sumCount);\n                while (i < sumCount) {\n                    first = list_[i];\n                    ++i;\n                    selector = first.selector;\n                    counter = -1;\n                    parent = target;\n                    while (!found && parent && isElement(parent) && parent !== el) {\n                        ++counter;\n                        if (matches(parent, selector)) {\n                            found = parent;\n                            // hold on to the temporary target\n                            first.temporaryTarget = found;\n                            // how far up did you have to go before you got to the top\n                            first.parentNodeNumber = counter;\n                            if (manager.owner.orderEventsByHeirarchy) {\n                                if (!(j = list[LENGTH])) {\n                                    list.push(first);\n                                } else {\n                                    while (first && list[--j]) {\n                                        if (list[j].parentNodeNumber <= first.parentNodeNumber) {\n                                            list.splice(j + 1, 0, first);\n                                            first = NULL;\n                                        }\n                                    }\n                                }\n                            } else {\n                                list.push(first);\n                            }\n                        }\n                        parent = parent[PARENT_NODE];\n                    }\n                }\n                return list.concat(afterwards);\n            }\n        }),\n        windowIsVisible = function (windo_, perspective) {\n            var notVisible = BOOLEAN_FALSE,\n                windo = windo_;\n            while (!windo.isTop && !notVisible) {\n                windo = perspective.returnsManager(windo.element().parent);\n                if (windo.iframe && windo.is(ACCESSABLE)) {\n                    notVisible = !windo.iframe.visible();\n                }\n            }\n            return !notVisible;\n        },\n        getStringManager = function (events, where) {\n            var attrs = events.directive(ATTRIBUTES),\n                found = attrs[where] = attrs[where] || StringManager();\n            return found;\n        },\n        dimensionFinder = function (element, doc, win) {\n            return function (num) {\n                var ret, manager = this[INDEX](num);\n                if (manager.isElement) {\n                    ret = clientRect(manager.element())[element];\n                } else {\n                    if (manager.isDocument && manager.element()[BODY]) {\n                        ret = manager.element()[BODY][doc];\n                    } else {\n                        if (manager.isWindow) {\n                            ret = manager.element()[win];\n                        }\n                    }\n                }\n                return ret || 0;\n            };\n        },\n        historyResult = app.extendDirective('Registry', 'History'),\n        DomManager = factories.DomManager = factories.Events.extend(DOM_MANAGER_STRING, extend(classApi, {\n            'directive:creation:EventManager': DomEventsDirective,\n            isValidDomManager: BOOLEAN_TRUE,\n            $: manager_query,\n            registeredElementName: function () {\n                return this.owner.registeredElementName(this.registeredAs);\n            },\n            // getValue: getValueCurried,\n            hasValue: hasValue(domContextFind),\n            addValue: addValue(domIterates),\n            removeValue: removeValue(domIterates),\n            toggleValue: toggleValue(domIterates),\n            changeValue: changeValue(domIterates),\n            on: addEventListener,\n            once: addEventListenerOnce,\n            off: removeEventListener,\n            append: appendChild,\n            prepend: prependChild,\n            getAttribute: getValueCurried,\n            setAttribute: setValueCurried,\n            removeAttribute: attributeParody(REMOVE),\n            attr: attrApi(domIterates),\n            data: dataApi(domIterates),\n            prop: propApi(domIterates),\n            html: innardManipulator(INNER_HTML),\n            // outerHTML: innardManipulator(OUTER_HTML),\n            text: innardManipulator(INNER_TEXT),\n            // style: styleManipulator,\n            css: styleManipulator,\n            next: managerHorizontalTraverser('next', 'nextElementSibling', 1),\n            prev: managerHorizontalTraverser('prev', 'previousElementSibling', -1),\n            skip: managerHorizontalTraverser('skip', NULL, 0),\n            height: dimensionFinder(HEIGHT, 'scrollHeight', INNER_HEIGHT),\n            width: dimensionFinder(WIDTH, 'scrollWidth', INNER_WIDTH),\n            siblings: function (filtr) {\n                var original = this,\n                    filter = createDomFilter(filtr);\n                return original.parent().children(function (manager, index, list) {\n                    return manager !== original && filter(manager, index, list);\n                });\n            },\n            constructor: function (el, hash, owner_) {\n                var owner = owner_,\n                    manager = this;\n                manager[TARGET] = el;\n                test(manager, owner);\n                if (manager.isElement || manager.isFragment) {\n                    hash[DOM_MANAGER_STRING] = manager;\n                    owner = ensure(el.ownerDocument, BOOLEAN_TRUE);\n                    if (manager.isElement) {\n                        manager.id = el[__ELID__];\n                    }\n                } else {\n                    if (manager.isDocument) {\n                        owner = manager;\n                    } else {\n                        hash[DOM_MANAGER_STRING] = manager;\n                    }\n                }\n                manager.owner = owner || BOOLEAN_FALSE;\n                if (manager.isIframe) {\n                    manager.on(ATTRIBUTE_CHANGE + ':src detach attach', iframeChangeHandler);\n                }\n                if (manager.isWindow) {\n                    markGlobal(manager);\n                }\n                if (manager.isElement) {\n                    manager.registerAs();\n                }\n                return manager;\n            },\n            clone: function () {\n                var manager = this;\n                if (!manager.isElement) {\n                    return {};\n                }\n                return makeBranch(manager.element()[OUTER_HTML], manager.owner);\n            },\n            element: function () {\n                return this[TARGET];\n            },\n            elements: function () {\n                return [this[TARGET]];\n            },\n            length: function () {\n                return 1;\n            },\n            wrap: function (list) {\n                return this.owner.$(list || this);\n            },\n            unwrap: function () {\n                return [this];\n            },\n            parent: (function () {\n                var finder = function (manager, fn, original) {\n                        var rets, found, parentManager = manager,\n                            parentElement = parentManager.element(),\n                            next = original;\n                        while (parentElement && !found) {\n                            rets = fn(parentElement, original, next);\n                            parentElement = rets[0];\n                            found = rets[1];\n                            next = rets[2];\n                        }\n                        if (found) {\n                            return parentManager.owner.returnsManager(parentElement);\n                        }\n                    },\n                    number = function (element, original, next) {\n                        next -= 1;\n                        if (next < 0 || !isFinite(next) || isNaN(next)) {\n                            next = 0;\n                        }\n                        return [element[PARENT_NODE], !next, next];\n                    },\n                    string = function (element, original, next) {\n                        var parent = element[PARENT_NODE];\n                        return [parent, matches(parent, original)];\n                    },\n                    speshal = {\n                        document: function (element, original, next) {\n                            var parent = element[PARENT_NODE];\n                            if (isDocument(parent)) {\n                                return [parent, BOOLEAN_TRUE];\n                            } else {\n                                if (isElement(parent)) {\n                                    return [parent[PARENT_NODE], BOOLEAN_FALSE];\n                                } else {\n                                    if (isFragment(parent)) {\n                                        return [NULL, BOOLEAN_FALSE];\n                                    }\n                                }\n                            }\n                        },\n                        window: function (element, original, next, origin) {\n                            var parent, defaultView = element[DEFAULT_VIEW];\n                            if (defaultView) {\n                                return [defaultView, BOOLEAN_TRUE];\n                            }\n                            if ((parent = element[PARENT_NODE])) {\n                                return [parent, BOOLEAN_FALSE];\n                            } else {\n                                return [BOOLEAN_FALSE, BOOLEAN_FALSE];\n                            }\n                        },\n                        iframe: function (element, original, next) {\n                            var found, parent = element,\n                                elementIsWindow = isWindow(element);\n                            if (elementIsWindow) {\n                                if (parent === parent.top) {\n                                    return [NULL, BOOLEAN_FALSE];\n                                } else {\n                                    found = wraptry(function () {\n                                        return parent.frameElement;\n                                    });\n                                    return [found, !!found];\n                                }\n                            } else {\n                                return [element[DEFAULT_VIEW]] || element[PARENT_NODE];\n                            }\n                        }\n                    };\n                return function (original) {\n                    var iterator, manager = this,\n                        data = [],\n                        doDefault = BOOLEAN_FALSE;\n                    if (isNumber(original)) {\n                        iterator = number;\n                    } else {\n                        if (isString(original)) {\n                            iterator = speshal[original] || string;\n                        } else {\n                            doDefault = original ? BOOLEAN_TRUE : doDefault;\n                        }\n                    }\n                    if (doDefault) {\n                        return finder(manager, original);\n                    } else {\n                        if (!iterator) {\n                            iterator = number;\n                            original = 1;\n                        }\n                        return finder(manager, iterator, original);\n                    }\n                };\n            }()),\n            contains: function (element_) {\n                var managerElement, target, element = element_,\n                    manager = this;\n                if (isWindow(element)) {\n                    return BOOLEAN_FALSE;\n                }\n                if (isString(element)) {\n                    return !!query(element, manager.element())[LENGTH];\n                }\n                if (element.isValidDOMA) {\n                    return !!element.find(manager.contains, manager);\n                }\n                target = manager.owner.returnsManager(element);\n                if (target.isDocument) {\n                    return target.window() === manager;\n                }\n                managerElement = manager.element();\n                return !!target.parent(function (node) {\n                    var parentNode = node[PARENT_NODE];\n                    return [parentNode, parentNode === managerElement];\n                });\n            },\n            insertAt: function (els, index) {\n                var manager = this,\n                    owner = manager.owner,\n                    fragmentManager = isAppendable(els) ? owner.returnsManager(els) : owner.$(els).fragment(),\n                    fragment = fragmentManager.element(),\n                    children = index == NULL ? NULL : manager.children(),\n                    child = children && children.index(index) || NULL,\n                    element = child && child.element() || NULL,\n                    managerElement = manager && manager.element(),\n                    returns = fragmentManager.children(),\n                    fragmentChildren = collectCustom(fragmentManager, BOOLEAN_TRUE),\n                    detachNotify = dispatchDetached(fragmentChildren, owner),\n                    returnValue = managerElement && managerElement.insertBefore(fragment, element),\n                    notify = isAttached(managerElement, owner) && dispatchAttached(fragmentChildren, owner);\n                return returns;\n            },\n            window: function () {\n                var manager = this;\n                if (manager.isWindow) {\n                    // yay we're here!\n                    return manager;\n                }\n                if (manager.isDocument) {\n                    // it's a document, so return the manager relative to the inside\n                    return manager.returnsManager(manager.element().defaultView);\n                }\n                if (manager.isIframe) {\n                    // it's an iframe, so return the manager relative to the outside\n                    return manager.owner.returnsManager(manager.element().contentWindow);\n                }\n                // it's an element so go up\n                return manager.owner.window();\n            },\n            setAddress: function (address) {\n                var manager = this;\n                address = manager.address = address || manager.address || uuid();\n                return address;\n            },\n            emit: function (message_, referrer_, handler) {\n                var message, post, windo = this.window(),\n                    element = windo.element();\n                if (windo.is(ACCESSABLE)) {\n                    message = parse(message_);\n                    if (handler) {\n                        handler({\n                            // this can be expanded a bit when you get some time\n                            srcElement: element,\n                            timeStamp: _.now(),\n                            data: function () {\n                                return message;\n                            }\n                        });\n                        return this;\n                    }\n                }\n                wraptry(function () {\n                    // do not parse message so it can be sent as is\n                    if (!referrer_) {\n                        console.error('missing referrer: ' + windo.address);\n                    } else {\n                        element.postMessage(message_, referrer_);\n                    }\n                }, console.error);\n                return this;\n            },\n            sameOrigin: function () {\n                var parsedReference, manager = this,\n                    element = manager.element(),\n                    windo = manager.owner.window(),\n                    windoElement = windo.element();\n                if (windo === manager) {\n                    return BOOLEAN_TRUE;\n                }\n                if (manager.is(ACCESSABLE)) {\n                    parsedReference = reference(element.location.href);\n                    if (!parsedReference && manager.iframe) {\n                        parsedReference = reference(manager.iframe.src());\n                    }\n                    return !parsedReference || parsedReference === reference(windoElement.location.href);\n                }\n                return BOOLEAN_FALSE;\n            },\n            registerAs: function (registeredAs_) {\n                var historyDirective, newName, oldName, manager = this,\n                    registeredAs = registeredAs_ || manager.registeredAs;\n                if (!manager.is(CUSTOM) || ((historyDirective = manager.directive('History')) && registeredAs === historyDirective.get('category', CUSTOM))) {\n                    return manager;\n                }\n                oldName = manager.owner.registeredElementName(historyDirective.get('category', CUSTOM));\n                manager.directiveDestruction(oldName);\n                historyDirective.keep('category', CUSTOM, registeredAs);\n                newName = manager.owner.registeredElementName(registeredAs);\n                manager.directive(newName);\n                if (!manager[newName].validCustomElement) {\n                    manager.owner.unregisteredElement(manager);\n                }\n                return manager;\n            },\n            children: function (eq, memo) {\n                var filter, result, manager = this,\n                    children = collectChildren(manager.element());\n                if (eq === UNDEFINED) {\n                    return memo ? ((children = map(children, manager.owner.returnsManager, manager.owner)) && memo.isFragment ? memo.append(children) : (memo.push.apply(memo, children) ? memo : memo)) : manager.wrap(children);\n                } else {\n                    filter = createDomFilter(eq);\n                    result = foldl(children, function (memo, child, idx, children) {\n                        if (filter(child, idx, children)) {\n                            memo.push(manager.owner.returnsManager(child));\n                        }\n                        return memo;\n                    }, memo || []);\n                }\n                return memo ? result : manager.wrap(result);\n            },\n            visible: function () {\n                var client, element, styles, owner, windo, windoElement, innerHeight, innerWidth, manager = this;\n                if (!manager.is(ATTACHED)) {\n                    return BOOLEAN_FALSE;\n                }\n                styles = manager.getStyle();\n                if (+styles.opacity === 0 || styles.display === NONE || styles.height === '0px' || styles.width === '0px' || styles.visibility === HIDDEN) {\n                    return BOOLEAN_FALSE;\n                }\n                element = manager.element();\n                client = element.getBoundingClientRect();\n                if (!client.height || !client.width) {\n                    return BOOLEAN_FALSE;\n                }\n                windoElement = (manager.element().ownerDocument || {}).defaultView;\n                if (!windoElement) {\n                    return BOOLEAN_TRUE;\n                }\n                innerHeight = windoElement[INNER_HEIGHT];\n                innerWidth = windoElement[INNER_WIDTH];\n                if (innerHeight < client.top || innerWidth < client.left || client.right < 0 || client.bottom < 0) {\n                    return BOOLEAN_FALSE;\n                }\n                windo = manager.owner.returnsManager(windoElement);\n                return windo.isTop ? BOOLEAN_TRUE : windowIsVisible(windo, manager.owner);\n            },\n            hide: function () {\n                return this.applyStyle('display', 'none');\n            },\n            show: function () {\n                return this.applyStyle('display', 'block');\n            },\n            applyStyle: function (key, value, important) {\n                applyStyle(key, value, this, important);\n                return this;\n            },\n            getStyle: function (eq) {\n                var returnValue = {},\n                    manager = this,\n                    first = manager.element();\n                if (first && manager.isElement) {\n                    returnValue = getComputed(first, manager.owner.element());\n                }\n                return returnValue;\n            },\n            remove: function (fragment, handler) {\n                var el, parent, manager = this,\n                    cachedRemoving = manager.is(REMOVING) || BOOLEAN_FALSE;\n                if (cachedRemoving || !(el = manager.element()) || !(parent = el[PARENT_NODE])) {\n                    return manager;\n                }\n                manager.mark(REMOVING);\n                if (manager.isIframe && handler && isFunction(handler)) {\n                    setTimeout(bind(handler, NULL, manager));\n                }\n                if (fragment) {\n                    fragment.appendChild(el);\n                } else {\n                    parent.removeChild(el);\n                }\n                dispatchDetached([el], manager.owner);\n                manager.remark(REMOVING, cachedRemoving);\n                return manager;\n            },\n            frame: function (head, body) {\n                var manager = this,\n                    content = head || '';\n                if (body || content.toLowerCase().split('<!doctype ')[LENGTH] === 1) {\n                    content = manager.owner.iframeContent(content, body);\n                }\n                if (manager.isIframe) {\n                    if (manager.is(ATTACHED)) {\n                        manager.html(content);\n                    } else {\n                        manager.cachedContent = content;\n                    }\n                    return manager;\n                } else {\n                    return content;\n                }\n            },\n            // rework how to destroy elements\n            destroy: function (handler) {\n                var customName, manager = this,\n                    registeredAs = manager.registeredAs,\n                    element = manager.element();\n                if (manager.is(DESTROYED)) {\n                    return manager;\n                }\n                manager.mark(DESTROYED);\n                if (manager.isIframe) {\n                    manager.owner.data.remove(element.contentWindow);\n                }\n                manager.remove(NULL, handler);\n                if (registeredAs) {\n                    customName = manager.owner.registeredElementName(registeredAs);\n                    manager.directiveDestruction(customName);\n                }\n                // destroy events\n                manager.directiveDestruction(EVENTS);\n                // remove from global hash\n                manager.owner.data.remove(element);\n                manager[STOP_LISTENING]();\n                return manager;\n            },\n            index: function () {\n                return this;\n            },\n            each: function (fn, ctx) {\n                var manager = this,\n                    wrapped = [manager],\n                    result = ctx ? fn.call(ctx, manager, 0, wrapped) : fn(manager, 0, wrapped);\n                return wrapped;\n            },\n            find: function (fn) {\n                var manager = this;\n                return fn(manager, 0, [manager]) ? manager : UNDEFINED;\n            },\n            client: function () {\n                return clientRect(this.element());\n            },\n            box: function (context) {\n                return box(this.element(), context);\n            },\n            flow: function (context) {\n                return flow(this.element(), context);\n            },\n            dispatchEvent: cannotTrust(function (name, e, capturing_) {\n                return eventDispatcher(this, name, e, capturing_);\n            }),\n            toJSON: function () {\n                var previous, temporaryFragment, childrenLength, children, obj, manager = this,\n                    owner = manager.owner,\n                    node = manager.element();\n                if (manager.isWindow || manager.isDocument) {\n                    return {};\n                }\n                children = manager.children();\n                obj = {\n                    tag: manager.isFragment ? DIV : tag(node)\n                };\n                if ((childrenLength = children[LENGTH]())) {\n                    temporaryFragment = owner.element().createDocumentFragment();\n                    duffRight(children.unwrap(), function (manager) {\n                        var element = manager.element();\n                        temporaryFragment.insertBefore(element, previous || NULL);\n                        previous = element;\n                    });\n                    obj.children = children[TO_JSON]();\n                }\n                if (node[INNER_TEXT]) {\n                    obj[INNER_TEXT] = node[INNER_TEXT];\n                }\n                if (childrenLength) {\n                    node.appendChild(temporaryFragment);\n                }\n                duff(node[ATTRIBUTES], function (attr) {\n                    var attributes = obj.attributes = obj.attributes || {};\n                    attributes[camelCase(attr[LOCAL_NAME])] = attr.nodeValue;\n                });\n                return obj;\n            }\n        }, wrap(directAttributes, function (attr, api) {\n            if (!attr) {\n                attr = api;\n            }\n            return function (string) {\n                var item, manager = this;\n                if (string !== UNDEFINED) {\n                    return manager.attr(attr, string);\n                }\n                return manager.element()[attr];\n            };\n        }), wrap(videoDirectEvents, triggerEventWrapperManager), wrap(directEvents, function (attr) {\n            return triggerEventWrapperManager(attr);\n        }), wrap(gapSplit('add addBack elements push fragment'), function (key) {\n            return function (one, two, three) {\n                return this.wrap()[key](one, two, three);\n            };\n        }))),\n        _removeEventListener = function (manager, name, group, selector, handler, capture_) {\n            var capture = !!capture_,\n                directive = manager.directive(EVENTS),\n                removeFromList = function (list, name) {\n                    return list.obliteration(function (obj) {\n                        if ((!name || name === obj.passedName) && (!handler || obj.handler === handler) && (!group || obj.group === group) && (!selector || obj.selector === selector)) {\n                            directive.detach(obj);\n                        }\n                    });\n                };\n            return name ? duff(gapSplit(name), eventExpander(manager.owner.events.expanders, function (name, passedName) {\n                removeFromList(directive[HANDLERS][name], passedName);\n            })) : each(directive[HANDLERS], passesFirstArgument(removeFromList));\n        },\n        /**\n         * @class DOMA\n         * @augments Model\n         * @augments Collection\n         */\n        eq = _.eq,\n        objectMatches = _.matches,\n        createDomFilter = function (filtr) {\n            return isFunction(filtr) ? filtr : (isString(filtr) ? (filterExpressions[filtr] || function (item) {\n                return matches(item, filtr);\n            }) : (isNumber(filtr) ? function (el, idx) {\n                return idx === filtr;\n            } : (isObject(filtr) ? objectMatches(filtr) : function () {\n                return BOOLEAN_TRUE;\n            })));\n        },\n        unwrapsOnLoop = function (fn) {\n            return function (manager, index, list) {\n                return fn(manager.element(), index, list);\n            };\n        },\n        dataReconstructor = function (list, fn) {\n            return foldl(list, function (memo, arg1, arg2, arg3) {\n                if (fn(arg1, arg2, arg3)) {\n                    memo.push(arg1);\n                }\n                return memo;\n            }, []);\n        },\n        domFilter = function (items, filtr) {\n            var filter = createDomFilter(filtr);\n            return dataReconstructor(items, unwrapsOnLoop(filter));\n        },\n        canBeProcessed = function (item) {\n            return isWindow(item) || isElement(item) || isDocument(item) || isFragment(item);\n        },\n        collectChildren = function (element) {\n            return toArray(element.children || element.childNodes);\n        },\n        returnsManager = function (element, owner) {\n            return element && !isWindow(element) && element.isValidDomManager ? element : ensure(element, owner);\n        },\n        exportResult = _.exports({\n            covers: covers,\n            center: center,\n            closer: closer,\n            distance: distance,\n            // query: query,\n            escape: escape,\n            unescape: unescape,\n            // css: css,\n            box: box,\n            isElement: isElement,\n            isWindow: isWindow,\n            isDocument: isDocument,\n            isFragment: isFragment,\n            unitToNumber: unitToNumber,\n            numberToUnit: numberToUnit\n        }),\n        setupDomContentLoaded = function (handler, documentManager) {\n            var bound = bind(handler, documentManager),\n                windo = documentManager.window(),\n                domHandler = function (e) {\n                    documentManager.off('DOMContentLoaded', domHandler);\n                    windo.off('load', domHandler);\n                    documentManager.$(CUSTOM_ATTRIBUTE).each(documentManager.returnsManager);\n                    bound(documentManager.$, e);\n                };\n            if (documentManager.is('ready')) {\n                bound(documentManager.$, documentManager.DOMContentLoadedEvent);\n            } else {\n                // if (!documentManager.is('setup')) {\n                documentManager.on('DOMContentLoaded', domHandler);\n                windo.on('load', domHandler);\n                // } else {\n                //     debugger;\n                // }\n            }\n            documentManager.mark('setup');\n            return documentManager;\n        },\n        applyToEach = function (method) {\n            return function (one, two, three, four, five, six) {\n                return this.each(function (manager) {\n                    manager[method](one, two, three, four, five, six);\n                });\n            };\n        },\n        allEachMethods = gapSplit('show hide style remove on off once addEventListener removeEventListener dispatchEvent').concat(allDirectMethods),\n        firstMethods = gapSplit('tag element client box flow'),\n        applyToFirst = function (method) {\n            var shouldBeContext = method !== 'tag';\n            return function (one, two) {\n                var element = this.index(one);\n                return element && element[method](shouldBeContext ? this.context : two);\n            };\n        },\n        readMethods = gapSplit('isWindow isElement isDocument isFragment'),\n        applyToTarget = function (property) {\n            return function (one) {\n                var element = this.index(one);\n                return element && element[property];\n            };\n        },\n        DOMA = factories.DOMA = factories.Collection.extend('DOMA', extend(makeValueTarget(CLASS, CLASSNAME, propertyApi, BOOLEAN_TRUE), {\n            /**\n             * @func\n             * @name DOMA#constructor\n             * @param {String | Node | Function} str - string to query the dom with, or a function to run on document load, or an element to wrap in a DOMA instance\n             * @returns {DOMA} instance\n             */\n            isValidDOMA: BOOLEAN_TRUE,\n            destroy: function (handler_) {\n                var handler = isFunction(handler_) ? handler_ : NULL;\n                return this.each(function (manager) {\n                    manager.destroy(handler);\n                });\n            },\n            constructor: function (str, ctx, isValid, validContext, documentContext) {\n                var isArrayResult, els = str,\n                    dom = this,\n                    context = dom.context = validContext ? ctx.index(0) : documentContext,\n                    owner = dom.owner = documentContext,\n                    unwrapped = context.element();\n                if (str && !isWindow(str) && str.isValidDOMA) {\n                    return str;\n                }\n                if (isFunction(str)) {\n                    if (isDocument(unwrapped)) {\n                        return setupDomContentLoaded(str, owner).wrap();\n                    }\n                } else {\n                    if (!isValid) {\n                        if (isString(str)) {\n                            if (str[0] === '<') {\n                                els = makeTree(str, owner);\n                            } else {\n                                els = map(query(str, unwrapped), owner.returnsManager, owner);\n                            }\n                        } else {\n                            els = str;\n                            if (DomManager.isInstance(els)) {\n                                els = [els];\n                            } else {\n                                if (Collection.isInstance(els)) {\n                                    els = els.unwrap();\n                                }\n                                if (canBeProcessed(els)) {\n                                    els = [owner.returnsManager(els)];\n                                } else {\n                                    els = els && map(els, owner.returnsManager, owner);\n                                }\n                            }\n                        }\n                    }\n                    dom.reset(els);\n                }\n                return dom;\n            },\n            setValue: setValue(domIterates),\n            hasValue: hasValue(domContextFind),\n            addValue: addValue(domIterates),\n            removeValue: removeValue(domIterates),\n            toggleValue: toggleValue(domIterates),\n            changeValue: changeValue(domIterates),\n            add: attachPrevious(function (context, query) {\n                var found = context.owner.$(query);\n                return concatUnique(context.unwrap(), found.unwrap());\n            }),\n            addBack: attachPrevious(function (context, selector) {\n                var previous = context._previous;\n                if (!previous) {\n                    return context.unwrap().concat([]);\n                }\n                if (selector) {\n                    previous = previous.filter(selector);\n                }\n                return context.unwrap().concat(previous.unwrap());\n            }),\n            wrap: function () {\n                return this;\n            },\n            push: function () {\n                var owner = this.context.owner;\n                this.items.push.apply(this.items, foldl(arguments, function (memo, el) {\n                    if (!el) {\n                        return memo;\n                    }\n                    if (isWindow(el)) {\n                        memo.push(el);\n                    } else {\n                        memo = memo.concat(!isWindow(el) && isFunction(el.unwrap) ? el.unwrap() : owner.returnsManager(el));\n                    }\n                    return memo;\n                }, [], owner));\n                return this;\n            },\n            elements: function () {\n                // to array of DOMAanagers\n                return this.mapCall('element');\n            },\n            /**\n             * @func\n             * @name DOMA#isWin\n             * @description asks if the first or specified index of the object is a window type object\n             * @returns {Boolean}\n             */\n            /**\n             * @func\n             * @name DOMA#isDoc\n             * @description asks if the first or specified index of the object is a document type object\n             * @returns {Boolean}\n             */\n            fragment: function (els) {\n                return this.context.returnsManager(fragment(els || this.unwrap(), this.context));\n            },\n            /**\n             * @func\n             * @name DOMA#filter\n             * @param {String|Function|Object} filtr - filter variable that will filter by matching the object that is passed in, or by selector if it is a string, or simply with a custom function\n             * @returns {DOMA} new DOMA instance object\n             */\n            filter: attachPrevious(function (context, filter) {\n                return domFilter(context.unwrap(), filter);\n            }),\n            empty: attachPrevious(function (context, filtr) {\n                var filter = createDomFilter(filtr);\n                return dataReconstructor(context.unwrap(), unwrapsOnLoop(function (memo, manager, idx, list) {\n                    return !filter(manager, idx, list) && manager.remove();\n                }));\n            }),\n            /**\n             * @func\n             * @name DOMA#find\n             * @param {String} str - string to use query to find against\n             * @returns {DOMA} matching elements\n             */\n            $: attachPrevious(function (context, str) {\n                var matchers = [],\n                    push = function (el) {\n                        matchers.push(context.owner.returnsManager(el));\n                    };\n                return duff(context.unwrap(), function (manager) {\n                    duff(query(str, manager.element()), push);\n                }) && matchers;\n            }),\n            /**\n             * @func\n             * @name DOMA#children\n             * @param {Number} [eq] - index of the children to gather. If none is provided, then all children will be added\n             * @returns {DOMA} all / matching children\n             */\n            children: attachPrevious(function (context, eq) {\n                return foldl(context.unwrap(), function (memo, manager) {\n                    return manager.children(eq, memo);\n                }, []);\n            }),\n            /**\n             * @func\n             * @name DOMA#once\n             * @param {String} space delimited list of event names to attach handlers to\n             * @param {Function} fn - handler to put on the event loop\n             * @returns {DOMA} instance\n             */\n            /**\n             * @func\n             * @name DOMA#css\n             * @param {...*} splat of objects and key value pairs that create a single object to be applied to the element\n             * @returns {DOMA} instance\n             */\n            css: styleManipulator,\n            // style: styleManipulator,\n            /**\n             * @func\n             * @name DOMA#allDom\n             * @returns {Boolean} value indicating whether or not there were any non dom elements found in the collection\n             */\n            allElements: function () {\n                return !!(this[LENGTH]() && !find(this.unwrap(), function (manager) {\n                    return !manager.isElement;\n                }));\n            },\n            /**\n             * @func\n             * @name DOMA#height\n             * @returns {Number} height of the first object, adjusting for the different types of possible objects such as dom element, document or window\n             */\n            height: dimensionFinder(HEIGHT, 'scrollHeight', INNER_HEIGHT),\n            /**\n             * @func\n             * @name DOMA#width\n             * @returns {Number} width of the first object, adjusting for the different types of possible objects such as dom element, document or window\n             */\n            width: dimensionFinder(WIDTH, 'scrollWidth', INNER_WIDTH),\n            /**\n             * @func\n             * @name DOMA#data\n             * @param {...*} splat of objects and key value pairs that create a single object to be applied to the element\n             * @returns {Object|*} can return the value that is asked for by the initial function call\n             */\n            /**\n             * @func\n             * @name DOMA#attr\n             * @param {...*} splat of objects and key value pairs that create a single object to be applied to the element\n             * @returns {DOMA | *} if multiple attributes were requested then a plain hash is returned, otherwise the DOMA instance is returned\n             */\n            attr: attrApi(domIterates),\n            data: dataApi(domIterates),\n            prop: propApi(domIterates),\n            /**\n             * @func\n             * @name DOMA#eq\n             * @param {Number|Array} [num=0] - index or list of indexes to create a new DOMA element with.\n             * @returns {DOMA} instance\n             */\n            eq: attachPrevious(function (context, num) {\n                return eq(context.unwrap(), num);\n            }),\n            /**\n             * @func\n             * @name DOMA#box\n             * @param {Number} [num=0] - index to get the boxmodel of\n             */\n            /**\n             * @func\n             * @name DOMA#end\n             * @returns {DOMA} object that started the traversal chain\n             */\n            end: function () {\n                var that = this;\n                while (that._previous) {\n                    that = that._previous;\n                }\n                return that;\n            },\n            getAttribute: getValueCurried,\n            setAttribute: setValueCurried,\n            /**\n             * @func\n             * @name DOMA#append\n             */\n            append: function (els, clone) {\n                return this.insertAt(els, NULL, clone);\n            },\n            prepend: function (els, clone) {\n                return this.insertAt(els, 0, clone);\n            },\n            appendTo: function (target) {\n                $(target).append(this);\n                return this;\n            },\n            /**\n             * @func\n             * @name DOMA#next\n             * @returns {DOMA} instance\n             */\n            next: horizontalTraverser('next', 1),\n            /**\n             * @func\n             * @name DOMA#previous\n             * @returns {DOMA} instance\n             */\n            prev: horizontalTraverser('prev', -1),\n            /**\n             * @func\n             * @name DOMA#skip\n             * @returns {DOMA} instance\n             */\n            skip: horizontalTraverser('skip', 0),\n            siblings: attachPrevious(function (context, filtr) {\n                return mappedConcat(context, function (manager) {\n                    return manager.siblings(filtr).unwrap();\n                });\n            }),\n            /**\n             * @func\n             * @name DOMA#insertAt\n             * @returns {DOMA} instance\n             */\n            insertAt: function (els_, index, clone) {\n                var manager = this,\n                    owner = manager.owner,\n                    els = isAppendable(els_) ? this.context.returnsManager(els_) : owner.$(els_).fragment();\n                return this.each(function (manager) {\n                    var elements = els;\n                    if (clone) {\n                        elements = elements.clone();\n                    }\n                    manager.insertAt(elements, index);\n                });\n            },\n            replaceWith: attachPrevious(function (context, els_, shouldClone_) {\n                var isStringResult, els, shouldClone = !!shouldClone_,\n                    owner = context.owner;\n                if (!(isStringResult = isString(element))) {\n                    els = isAppendable(els_) ? owner.returnsManager(els_) : owner.$(els_).fragment();\n                }\n                return mappedConcat(context, function (manager, index) {\n                    var elements = els_;\n                    if (!manager.isElement) {\n                        return [];\n                    }\n                    if (isStringResult) {\n                        elements = context.owner.$(els_);\n                    } else {\n                        if (clone) {\n                            elements = els.clone();\n                        } else {\n                            if (index) {\n                                return [];\n                            }\n                        }\n                    }\n                    parent = manager.parent();\n                    parent.insertAt(elements, parent.children().indexOf(manager));\n                    manager.remove();\n                    return elements.unwrap();\n                });\n            }),\n            contains: function (els) {\n                return !!this.find(function (manager) {\n                    return manager.contains(els);\n                });\n            },\n            clone: attachPrevious(function (context) {\n                return context.foldl(function (memo, manager) {\n                    if (manager.isElement) {\n                        memo.push(manager.clone());\n                    }\n                    return memo;\n                });\n            }),\n            /**\n             * @func\n             * @name DOMA#parent\n             * @param {Number} [count=1] - number of elements to go up in the parent chain\n             * @returns {DOMA} instance of collected, unique parents\n             */\n            parent: attachPrevious(function (context, original) {\n                // ensure unique\n                var hash = {};\n                return context.foldl(function (memo, manager) {\n                    var parent;\n                    if ((parent = manager.parent(original)) && !hash[parent[TARGET][__ELID__]]) {\n                        hash[parent[TARGET][__ELID__]] = parent;\n                        memo.push(parent);\n                    }\n                    return memo;\n                }, []);\n            }),\n            /**\n             * @func\n             * @name DOMA#has\n             * @param {Node|Array} els - list of elements to check the current instance against\n             * @returns {Boolean} whether or not the current doma element has all of the elements that were passed in\n             */\n            has: function (els) {\n                var doma = this,\n                    collection = Collection(els),\n                    length = collection[LENGTH]();\n                return !!length && collection.find(function (el) {\n                    return doma.indexOf(el) === -1;\n                });\n            },\n            /**\n             * @func\n             * @name DOMA#html\n             * @returns {DOMA} instance\n             */\n            html: htmlTextManipulator(INNER_HTML),\n            /**\n             * @func\n             * @name DOMA#text\n             * @returns {DOMA} instance\n             */\n            text: htmlTextManipulator(INNER_TEXT),\n            /**\n             * @func\n             * @name DOMA#childOf\n             */\n            map: function (handler, context) {\n                return Collection(map(this.unwrap(), handler, context));\n            },\n            toJSON: function () {\n                return this.results(TO_JSON).unwrap();\n            },\n            toString: function () {\n                return stringify(this);\n            }\n        }, wrap(allEachMethods, applyToEach), wrap(firstMethods, applyToFirst), wrap(readMethods, applyToTarget))),\n        allSetups = [],\n        setupWindow = function (windo) {\n            var setup = DOMA_SETUP(windo[DOCUMENT]);\n            allSetups.push(setup);\n            windo.DOMA = windo.DOMA || setup;\n            windo.$ = has(windo, '$') ? windo.$ : setup;\n            duff(plugins, function (plugin) {\n                plugin(setup);\n            });\n            return setup;\n        },\n        plugins = [],\n        // pushResult = plugins.push(),\n        $ = setupWindow(win);\n    app.undefine(setupWindow);\n    // collect all templates with an id\n    $.collectTemplates();\n    // register all custom elements...\n    // everything that's created after this should go through the DomManager to be marked appropriately\n    // add $ to module madness\n    // app.addModuleArguments([$]);\n    // define a hash for attribute caching\n    app.defineDirective(ATTRIBUTES, function () {\n        return {};\n    });\n});","app.scope(function (app) {\n    var lastAFId, lastTId, lastOverrideId, _ = app._,\n        factories = _.factories,\n        x = 0,\n        lastTime = 0,\n        frameTime = 0,\n        pI = _.pI,\n        nowish = _.now,\n        gapSplit = _.gapSplit,\n        vendors = gapSplit('ms moz webkit o'),\n        RUNNING = 'running',\n        HALTED = 'halted',\n        STOPPED = 'stopped',\n        DESTROYED = 'destroyed',\n        TIMEOUT = 'Timeout',\n        SET_TIMEOUT = 'set' + TIMEOUT,\n        CLEAR_TIMEOUT = 'clear' + TIMEOUT,\n        ANIMATION_FRAME = 'AnimationFrame',\n        REQUEST_ANIMATION_FRAME = 'request' + ANIMATION_FRAME,\n        CANCEL_ANIMATION_FRAME = 'cancel' + ANIMATION_FRAME,\n        allLoopers = [],\n        runningLoopers = [],\n        eachCall = _.eachCall,\n        time = _.time,\n        remove = _.remove,\n        running = BOOLEAN_FALSE,\n        focused = BOOLEAN_TRUE,\n        request = function (handler) {\n            var nextFrame = Math.max(0, lastTime - frameTime);\n            if (focused) {\n                lastAFId = win[REQUEST_ANIMATION_FRAME](handler);\n            } else {\n                lastTId = win.setTimeout(handler, nextFrame);\n            }\n            if (Looper.playWhileBlurred) {\n                lastOverrideId = win.setTimeout(function () {\n                    focused = BOOLEAN_FALSE;\n                    handler();\n                }, nextFrame + 50);\n            }\n        },\n        basicHandler = function () {\n            win[CANCEL_ANIMATION_FRAME](lastAFId);\n            win[CLEAR_TIMEOUT](lastTId);\n            win[CLEAR_TIMEOUT](lastOverrideId);\n            frameTime = _.now();\n            eachCall(runningLoopers, 'run', frameTime);\n            teardown();\n        },\n        setup = function () {\n            running = BOOLEAN_TRUE;\n            request(basicHandler);\n        },\n        teardown = function () {\n            duffRight(runningLoopers, function (looper, idx) {\n                if (looper.is(HALTED) || looper.is(STOPPED) || looper.is(DESTROYED) || !looper.length()) {\n                    looper.stop();\n                    runningLoopers.splice(idx, 1);\n                }\n            });\n            running = BOOLEAN_FALSE;\n            if (runningLoopers[LENGTH]) {\n                setup();\n            }\n        },\n        add = function (looper) {\n            allLoopers.push(looper);\n        },\n        start = function (looper) {\n            if (indexOf(runningLoopers, looper) === -1) {\n                runningLoopers.push(looper);\n            }\n            if (!running) {\n                setup();\n            }\n        },\n        shim = (function () {\n            for (; x < vendors[LENGTH] && !win[REQUEST_ANIMATION_FRAME]; ++x) {\n                win[REQUEST_ANIMATION_FRAME] = win[vendors[x] + 'RequestAnimationFrame'];\n                win[CANCEL_ANIMATION_FRAME] = win[vendors[x] + upCase(CANCEL_ANIMATION_FRAME)] || win[vendors[x] + 'CancelRequestAnimationFrame'];\n            }\n            if (!win[REQUEST_ANIMATION_FRAME]) {\n                win[REQUEST_ANIMATION_FRAME] = function (callback) {\n                    var currTime = new Date().getTime(),\n                        timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n                        id = win.setTimeout(function () {\n                            callback(currTime + timeToCall);\n                        }, timeToCall);\n                    lastTime = currTime + timeToCall;\n                    return id;\n                };\n            }\n            if (!win[CANCEL_ANIMATION_FRAME]) {\n                win[CANCEL_ANIMATION_FRAME] = function (id) {\n                    win[CLEAR_TIMEOUT](id);\n                };\n            }\n        }()),\n        LOOPER = 'Looper',\n        Collection = factories.Collection,\n        Looper = factories[LOOPER] = Collection.extend(LOOPER, {\n            constructor: function (_runner) {\n                var looper = this;\n                looper.mark(STOPPED);\n                looper.unmark(HALTED);\n                looper.unmark(DESTROYED);\n                looper.unmark(RUNNING);\n                Collection[CONSTRUCTOR].call(looper);\n                looper.removable = factories.List();\n                add(looper);\n                return looper;\n            },\n            destroy: function () {\n                this.mark(DESTROYED);\n                return this.halt();\n            },\n            run: function (_nowish) {\n                var tween = this;\n                if (tween.is(HALTED) || tween.is(STOPPED)) {\n                    return;\n                }\n                tween.find(function (obj) {\n                    tween.current = obj;\n                    if (obj.disabled) {\n                        tween.queueRemoval(obj);\n                        return;\n                    }\n                    if (tween.is(HALTED)) {\n                        return BOOLEAN_TRUE;\n                    }\n                    wraptry(function () {\n                        obj.fn(_nowish);\n                    }, function () {\n                        tween.queueRemoval(obj);\n                    });\n                });\n                tween.current = NULL;\n                tween.unmark(RUNNING);\n                tween.removable.each(passesFirstArgument(bind(tween.remove, tween))).reset();\n            },\n            queueRemoval: function (obj) {\n                var tween = this;\n                obj.disabled = BOOLEAN_TRUE;\n                if (tween.current) {\n                    tween.removable.push(obj);\n                } else {\n                    tween.unqueue(obj);\n                }\n            },\n            dequeue: function (id_) {\n                var fnObj, found, i = 0,\n                    tween = this,\n                    id = id_,\n                    ret = BOOLEAN_FALSE;\n                if (!arguments[LENGTH] && tween.current) {\n                    tween.queueRemoval(tween.current);\n                    return BOOLEAN_TRUE;\n                }\n                if (isObject(id)) {\n                    return tween.queueRemoval(id);\n                }\n                if (!isNumber(id)) {\n                    return BOOLEAN_FALSE;\n                }\n                id = tween.findWhere({\n                    id: id\n                });\n                if (tween.current) {\n                    return tween.queueRemoval(id);\n                } else {\n                    return tween.unqueue(id);\n                }\n            },\n            stop: function () {\n                this.mark(STOPPED);\n                return this;\n            },\n            start: function () {\n                var looper = this;\n                if (looper.is(STOPPED)) {\n                    looper.unmark(STOPPED);\n                    looper.unmark(HALTED);\n                }\n                return looper;\n            },\n            halt: function () {\n                this.mark(HALTED);\n                return this.stop();\n            },\n            queue: function (fn) {\n                var obj, id = uniqueId(BOOLEAN_FALSE),\n                    tween = this;\n                if (!isFunction(fn)) {\n                    return;\n                }\n                if (!tween[LENGTH]()) {\n                    tween.start();\n                }\n                start(tween);\n                obj = {\n                    fn: tween.bind(fn),\n                    id: id,\n                    disabled: BOOLEAN_FALSE,\n                    bound: tween\n                };\n                tween.push(obj);\n                return id;\n            },\n            bind: function (fn) {\n                return bind(fn, this);\n            },\n            once: function (fn) {\n                return this.frames(1, fn);\n            },\n            frames: function (timey, fn_) {\n                var fn, count = 0,\n                    times = pI(timey) || 1;\n                if (!fn_ && isFunction(times)) {\n                    fn_ = timey;\n                    times = 1;\n                }\n                if (!isFunction(fn_)) {\n                    return;\n                }\n                fn = this.bind(fn_);\n                if (times < 1 || !isNumber(times)) {\n                    times = 1;\n                }\n                return this.queue(function (ms) {\n                    var last = 1;\n                    count++;\n                    if (count >= times) {\n                        this.unqueue();\n                        last = 0;\n                    }\n                    fn(ms, !last, count);\n                });\n            },\n            tween: function (time__, fn_) {\n                var fn, added = nowish(),\n                    time_ = time(time__);\n                if (!time_) {\n                    time_ = 0;\n                }\n                if (!isFunction(fn_)) {\n                    return;\n                }\n                fn = this.bind(fn_);\n                return this.interval(0, function (ms) {\n                    var tween = 1,\n                        diff = ms - added;\n                    if (diff >= time_) {\n                        tween = 0;\n                        this.unqueue();\n                    }\n                    fn(ms, Math.min(1, (diff / time_)), !tween);\n                });\n            },\n            time: function (time_, fn_) {\n                var fn;\n                if (!isFunction(fn_)) {\n                    return this;\n                }\n                fn = this.bind(fn_);\n                return this.interval(time(time_), function (ms) {\n                    this.unqueue();\n                    fn(ms);\n                });\n            },\n            frameRate: function (time__, fn_, min) {\n                var fn, tween = this,\n                    minimum = Math.min(min || 0.8, 0.8),\n                    expectedFrameRate = 30 * minimum,\n                    lastDate = 1,\n                    lastSkip = nowish(),\n                    time_ = time__ || 125;\n                if (!isFunction(fn_)) {\n                    return tween;\n                }\n                fn = tween.bind(fn_);\n                return tween.queue(function (ms) {\n                    var frameRate = 1000 / (ms - lastDate);\n                    if (frameRate > 40) {\n                        expectedFrameRate = 60 * minimum;\n                    }\n                    if (frameRate < expectedFrameRate) {\n                        lastSkip = ms;\n                    }\n                    if (ms - lastSkip > time_) {\n                        tween.unqueue();\n                        fn(ms);\n                    }\n                    lastDate = ms;\n                });\n            },\n            interval: function (time, fn_) {\n                var fn, tweener = this,\n                    last = nowish();\n                if (!isFunction(fn_)) {\n                    return;\n                }\n                if (!time) {\n                    time = 0;\n                }\n                fn = tweener.bind(fn_);\n                return tweener.queue(function (ms) {\n                    if (ms - time >= last) {\n                        last = ms;\n                        fn(ms);\n                    }\n                });\n            }\n        }),\n        Scheduler = factories.Scheduler = factories.Directive.extend('Scheduler', {\n            //\n        });\n    Looper.playWhileBlurred = BOOLEAN_TRUE;\n    app.defineDirective('Scheduler', Scheduler[CONSTRUCTOR]);\n    _.exports({\n        AF: Looper()\n    });\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        basicViewTrigger = function (name, e) {\n            return this[DISPATCH_EVENT](name, e);\n        },\n        makeDelegateEventKeys = function (cid, bindings, key) {\n            var viewNamespace = 'delegateEvents' + cid,\n                indexOfAt = indexOf(key, '@'),\n                hasAt = indexOfAt !== -1;\n            return {\n                selector: hasAt ? normalizeUIString(key.slice(indexOfAt), bindings) : EMPTY_STRING,\n                group: viewNamespace,\n                events: hasAt ? key.slice(0, indexOfAt) : key\n            };\n        },\n        normalizeUIString = function (uiString, ui) {\n            return uiString.replace(/@ui\\.[a-zA-Z_$0-9]*/g, function (r) {\n                return ui[r.slice(4)];\n            });\n        },\n        // allows for the use of the @ui. syntax within\n        // a given key for triggers and events\n        // swaps the @ui with the associated selector.\n        // Returns a new, non-mutated, parsed events hash.\n        normalizeUIKeys = function (hash, ui) {\n            return reduce(hash, function (memo, val, key) {\n                var normalizedKey = normalizeUIString(key, ui);\n                memo[normalizedKey] = val;\n                return memo;\n            }, {});\n        },\n        Element = factories.Directive.extend('Element', {\n            constructor: function (view) {\n                this.view = view;\n                return this;\n            },\n            ensure: function () {\n                var el, element = this,\n                    view = element.view,\n                    selector = element[SELECTOR] || result(view, 'el');\n                if (selector) {\n                    element[SELECTOR] = selector;\n                }\n                if (isInstance(selector, factories.DOMA)) {\n                    return;\n                }\n                if (isString(selector)) {\n                    // sets external element\n                    el = selector;\n                } else {\n                    // defauts back to wrapping the element\n                    // creates internal element\n                    el = element.create(view.tagName());\n                    // subclassed to expand the attributes that can be used\n                }\n                element.set(el, BOOLEAN_FALSE);\n            },\n            create: function (tag) {\n                return $.createElement(tag);\n            },\n            unset: function () {\n                var element = this;\n                delete element.view.el;\n                delete element.el;\n            },\n            set: function (el, render) {\n                var directive = this;\n                directive.view.el = directive.el = el;\n            },\n            render: function (html) {\n                var element = this;\n                element.el.html(html || '');\n                return element;\n            },\n            degenerateUIBindings: function () {\n                var directive = this;\n                if (!directive.ui) {\n                    return;\n                }\n                directive.ui = directive.view.ui = directive.uiBindings;\n                delete directive.uiBindings;\n            },\n            generateUIBindings: function () {\n                var directive = this,\n                    uiBindings = directive.uiBindings || result(directive.view, 'ui'),\n                    ui = directive.ui = directive.ui || {};\n                if (directive.uiBindings) {\n                    return directive;\n                }\n                // save it to skip the result call later\n                directive.uiBindings = uiBindings;\n                return directive;\n            },\n            delegateEvents: function () {\n                var key, method, match, directive = this,\n                    view = directive.view,\n                    el = directive.el,\n                    elementBindings = directive.elementBindings || result(view, 'elementEvents'),\n                    __events = [];\n                if (directive.elementBindings) {\n                    directive.elementBindings = elementBindings;\n                }\n                if (!el) {\n                    return directive;\n                }\n                directive.cachedElementBindings = map(elementBindings, function (method, key) {\n                    var object = makeDelegateEventKeys(view.cid, directive.uiBindings, key),\n                        bound = object.fn = bind(isString(method) ? view[method] : method, view);\n                    __events.push(object);\n                    el.on(object.events, object[SELECTOR], bound, object.capture, object.group);\n                });\n                directive.cachedElementBindings = __events;\n                return directive;\n            },\n            undelegateEvents: function () {\n                var key, method, match, directive = this,\n                    view = directive.view,\n                    el = directive.el,\n                    elementBindings = directive.cachedElementBindings;\n                if (!elementBindings || !el) {\n                    return directive;\n                }\n                duff(elementBindings, function (binding) {\n                    el.off(binding.events.join(SPACE), binding[SELECTOR], binding.fn);\n                });\n                directive.cachedElementBindings = UNDEFINED;\n                return directive;\n            },\n            delegateTriggers: function () {\n                var key, method, match, directive = this,\n                    view = directive.view,\n                    el = directive.el,\n                    elementTriggers = directive.elementTriggers || result(view, 'elementTriggers'),\n                    __events = [];\n                if (!directive.elementTriggers) {\n                    directive.elementTriggers = elementTriggers;\n                }\n                if (!el) {\n                    return directive;\n                }\n                each(elementTriggers, function (method, key) {\n                    var object = makeDelegateEventKeys(view.cid, directive.uiBindings, key),\n                        bound = object.fn = basicViewTrigger.bind(view, method);\n                    el.on(object.events, object[SELECTOR], bound, object.capture, object.group);\n                });\n                directive.cachedElementTriggers = __events;\n            },\n            undelegateTriggers: function () {\n                var key, method, match, directive = this,\n                    view = directive.view,\n                    el = directive.el,\n                    elementBindings = directive.cachedElementTriggers;\n                if (!directive.cachedElementTriggers || !el) {\n                    return directive;\n                }\n                duff(elementBindings, function (binding) {\n                    el.off(binding.events.join(SPACE), binding[SELECTOR], binding.fn);\n                });\n                directive.cachedElementTriggers = UNDEFINED;\n                return directive;\n            },\n            setAttributes: function () {\n                var directive = this,\n                    view = directive.view,\n                    attrs = result(view, 'elementAttributes');\n                if (view[CLASSNAME]) {\n                    attrs = attrs || {};\n                    attrs[CLASS] = result(view, CLASSNAME);\n                }\n                if (attrs) {\n                    directive.el.attr(attrs);\n                }\n                return directive;\n            },\n            bindUI: function () {\n                var directive = this,\n                    uiBindings = directive.uiBindings;\n                directive.ui = directive.view.ui = map(uiBindings, directive.el.$, directive.el);\n                return directive;\n            }\n        });\n    app.defineDirective(ELEMENT, Element[CONSTRUCTOR], function (directive, instance) {\n        directive.el.destroy();\n        directive.unset();\n        var ui = directive.ui;\n        directive.degenerateUIBindings();\n        _.eachCall(ui, 'destroy');\n    });\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        Collection = factories.Collection,\n        protoProp = _.protoProp,\n        isFragment = _.isFragment,\n        isInstance = _.isInstance,\n        isFunction = _.isFunction,\n        isArrayLike = _.isArrayLike,\n        reverseParams = _.reverseParams,\n        intendedObject = _.intendedObject,\n        createDocumentFragment = _.createDocumentFragment,\n        RENDER = 'render',\n        RENDERED = RENDER + 'ed',\n        OPTIONS = 'options',\n        PARENT_NODE = 'parentNode',\n        CONSTRUCTOR = 'constructor',\n        BUFFERED_VIEWS = 'bufferedViews',\n        REGION_MANAGER = 'RegionManager',\n        ESTABLISHED_REGIONS = '_establishedRegions',\n        APPEND_CHILD_ELEMENTS = '_appendChildElements',\n        getRegion = function (key) {\n            return this.list.get(ID, key);\n        },\n        addRegion = function (key, selector) {\n            var regionManagerDirective = this;\n            intendedObject(key, selector, function (key, selector) {\n                var region = regionManagerDirective.list.get(key);\n                if (!region) {\n                    regionManagerDirective.establish(key, selector);\n                }\n            });\n        },\n        /**\n         * @class View\n         * @augments Model\n         * @augments Model\n         * @classDesc Objects that have one or more element associated with them, such as a template that needs constant updating from the data\n         */\n        // region views are useful if you're constructing different components\n        // from a separate place and just want it to be in the attach pipeline\n        // very useful for componentizing your ui\n        Parent = factories.Parent,\n        Model = factories.Model,\n        makesView = function (region, view_) {\n            return View.isInstance(view_) ? view_ : region.Child({\n                model: Model.isInstance(view_) ? view_ : view_ = Model(view_)\n            });\n        },\n        disown = function (region, view) {\n            var children = region[CHILDREN];\n            view[PARENT] = NULL;\n            children.remove(view);\n            return region;\n        },\n        Region = factories.Region = Parent.extend('Region', {\n            constructor: function (secondary) {\n                var model = this;\n                Parent[CONSTRUCTOR].call(model, secondary);\n                model.directive(CHILDREN);\n                model.setElement();\n                return model;\n            },\n            add: function (models_, options_) {\n                var bufferedViewsDirective, region = this,\n                    options = options_ || {},\n                    unwrapped = Collection(models_).each(region.adopt, region).unwrap();\n                if (region.el) {\n                    region.render();\n                }\n                return unwrapped;\n            },\n            adopt: function (view_) {\n                var view, region = this,\n                    children = region[CHILDREN];\n                if (!view_) {\n                    return region;\n                }\n                view = makesView(region, view_);\n                if (view[PARENT]) {\n                    if (view[PARENT] === region) {\n                        return region;\n                    } else {\n                        disown(view[PARENT], view);\n                    }\n                }\n                view[PARENT] = region;\n                children.add(view);\n                return region;\n            },\n            attach: function (view) {\n                var parentNode, bufferDirective, region = this,\n                    el = view.el && view.el.element();\n                if (!el) {\n                    return region;\n                }\n                parentNode = el.parentNode;\n                bufferDirective = region.directive(BUFFERED_VIEWS);\n                if (parentNode && parentNode === region.el.element()) {\n                    return region;\n                }\n                bufferDirective.els.appendChild(el);\n                return region;\n            },\n            // this needs to be modified for shared windows\n            setElement: function () {\n                var manager, region = this,\n                    selector = region[SELECTOR],\n                    parent = region[PARENT][PARENT];\n                if (parent !== app) {\n                    if (parent.is(RENDERED)) {\n                        manager = parent.el.$(selector)[INDEX](0);\n                    }\n                } else {\n                    manager = (region._owner$ || $)(selector)[INDEX](0);\n                }\n                if (!manager) {\n                    return region;\n                }\n                region.directive(ELEMENT).set(manager);\n                return region;\n            },\n            render: function () {\n                var region = this,\n                    bufferDirective = region.directive(BUFFERED_VIEWS),\n                    elementDirective = region.directive(ELEMENT);\n                region.unmark(RENDERED);\n                // doc frags on regionviews, list of children to trigger events on\n                bufferDirective.ensure();\n                // request extra data or something before rendering: dom is still completely intact\n                region[DISPATCH_EVENT]('before:' + RENDER);\n                // unbinds and rebinds element only if it changes\n                region.setElement();\n                // update new element's attributes\n                elementDirective.setAttributes();\n                // puts children back inside parent\n                region[CHILDREN].eachCall(RENDER);\n                // attach region element\n                // appends child elements\n                elementDirective.el.append(bufferDirective.els);\n                // pass the buffered views up\n                // region.passBuffered(list);\n                // mark the view as rendered\n                region.mark(RENDERED);\n                // reset buffered objects\n                bufferDirective.reset();\n                // dispatch the render event\n                region[DISPATCH_EVENT](RENDER);\n                return region;\n            }\n        }),\n        establishRegions = function (view) {\n            var regions = result(view, 'regions');\n            var regionsResult = keys(regions)[LENGTH] && view.directive(REGION_MANAGER).establish(regionsResult);\n            return view;\n        },\n        addChildView = function (region, views) {\n            var view = this;\n            intendedObject(region, views, function (regionKey, views) {\n                var region = (region = view.directive(REGION_MANAGER).get(region_)) ? region.add(views) : exception({\n                    message: 'that region does not exist'\n                });\n            });\n            return view;\n        },\n        removeChildView = function (region, views) {\n            var view = this;\n            intendedObject(region, views, function (regionKey, views) {\n                var region = (region = view.directive(REGION_MANAGER).get(region_)) ? region.remove(views) : exception({\n                    message: 'that region does not exist'\n                });\n            });\n            return view;\n        },\n        // view needs to be pitted against a document\n        View = factories.View = Region.extend('View', {\n            getRegion: directives.parody(REGION_MANAGER, 'get'),\n            addRegion: directives.parody(REGION_MANAGER, 'add'),\n            removeRegion: directives.parody(REGION_MANAGER, 'remove'),\n            tagName: function () {\n                return 'div';\n            },\n            filter: function () {\n                return BOOLEAN_TRUE;\n            },\n            templateIsElement: function () {\n                return BOOLEAN_FALSE;\n            },\n            template: function () {\n                return EMPTY_STRING;\n            },\n            parentView: function () {\n                var found, view = this,\n                    parent = view[PARENT];\n                while (found && parent && !isInstance(parent, View)) {\n                    parent = parent[PARENT];\n                    if (isInstance(parent, View)) {\n                        found = parent;\n                    }\n                }\n                return found;\n            },\n            addChildView: addChildView,\n            removeChildView: removeChildView,\n            constructor: function (secondary) {\n                var view = this;\n                Parent[CONSTRUCTOR].call(view, secondary);\n                view.directive(ELEMENT).ensure();\n                this.id = uniqueId(BOOLEAN_FALSE, BOOLEAN_TRUE);\n                establishRegions(this);\n                return view;\n            },\n            valueOf: function () {\n                return this.model.id;\n            },\n            destroy: function (handler) {\n                var view = this;\n                if (view.is(DESTROYING)) {\n                    return view;\n                } else {\n                    view[DISPATCH_EVENT](BEFORE_DESTROY);\n                }\n                view.mark(DESTROYING);\n                if (view[REGION_MANAGER]) {\n                    view[REGION_MANAGER].list.eachCall(DESTROY);\n                }\n                if (view.el) {\n                    view.el.destroy(handler);\n                }\n                view.directiveDestruction(ELEMENT);\n                Parent[CONSTRUCTOR][PROTOTYPE].destroy.call(view);\n                return view;\n            },\n            render: function () {\n                var newelementisDifferent, element, json, html, renderResult, bufferedDirective, template, settingElement, view = this,\n                    // you might be able to do this a better way\n                    neverRendered = !view.is(RENDERED);\n                view.unmark(RENDERED);\n                if (!view.filter()) {\n                    return view;\n                }\n                element = view.directive(ELEMENT);\n                // prep the object with extra members (doc frags on regionviews,\n                // list of children to trigger events on)\n                // request extra data or something before rendering: dom is still completely intact\n                view[DISPATCH_EVENT]('before:' + RENDER);\n                // renders the html\n                json = view.model && view.model.toJSON();\n                // try to generate template\n                html = view.template(json);\n                settingElement = view.el;\n                if (view.templateIsElement()) {\n                    settingElement = view.el.owner.fragment(html).children();\n                    html = BOOLEAN_FALSE;\n                }\n                newelementisDifferent = settingElement !== element.el;\n                if (newelementisDifferent) {\n                    element.unset();\n                }\n                // turns ui into a string\n                element.degenerateUIBindings();\n                // unbinds and rebinds element only if it changes\n                element.set(settingElement);\n                if (html !== BOOLEAN_FALSE) {\n                    element.render(html);\n                }\n                element.generateUIBindings();\n                element.bindUI();\n                if (newelementisDifferent || neverRendered) {\n                    element.delegateEvents();\n                    element.delegateTriggers();\n                }\n                // update new element's attributes\n                element.setAttributes();\n                // mark the view as rendered\n                establishRegions(view);\n                view.mark(RENDERED);\n                // dispatch the render event\n                view[DISPATCH_EVENT](RENDER);\n                // pass buffered views up to region\n                if (view[REGION_MANAGER]) {\n                    view[REGION_MANAGER].list.eachCall(RENDER);\n                }\n                element = view[PARENT] && view[PARENT].attach(view);\n                return view;\n            }\n        }),\n        Child = Region[CONSTRUCTOR][PROTOTYPE].Child = View,\n        _View = factories.View,\n        establishRegion = function (key, selector) {\n            var regionManagerDirective = this,\n                parentView = regionManagerDirective[PARENT];\n            if (!key) {\n                return regionManagerDirective;\n            }\n            intendedObject(key, selector, function (key, selector) {\n                var $selected, region = regionManagerDirective.list.get(key);\n                if (!region) {\n                    region = regionManagerDirective.create(key, selector);\n                }\n                if (parentView !== app) {\n                    $selected = parentView.$(region[SELECTOR])[INDEX](0);\n                } else {\n                    $selected = $(region[SELECTOR])[INDEX](0);\n                }\n                // if ($selected) {\n                region.el = $selected;\n                // }\n            });\n            return regionManagerDirective;\n        },\n        removeRegion = function (region_) {\n            // var regionManager = this;\n            // var region = isString(region_) ? regionManager.get(region_) : region_;\n            // regionManager.remove(region);\n            // regionManager.unRegister(region.id, region);\n        },\n        createRegion = function (where, region_) {\n            var key, regionManagerDirective = this,\n                parent = regionManagerDirective[PARENT],\n                // assume that it is a region\n                selector = region_,\n                region = region_;\n            if (isInstance(region, Region)) {\n                return region;\n            }\n            region = Region(extend({\n                selector: selector || EMPTY_STRING\n            }, isObject(region) ? region : {}, {\n                id: where,\n                parent: regionManagerDirective,\n                isAttached: parent === app ? BOOLEAN_TRUE : parent.isAttached\n            }));\n            regionManagerDirective.list.push(region);\n            regionManagerDirective.list.register(ID, where, region);\n            return region;\n        },\n        bufferedEnsure = function () {\n            var buffers = this,\n                // _bufferedViews = isArray(buffers.views) ? 1 : buffers.resetViews(),\n                _bufferedEls = isFragment(buffers.els) ? 1 : buffers.resetEls();\n        },\n        bufferedReset = function () {\n            var cached = this.views;\n            this.resetEls();\n            return cached;\n        },\n        bufferedElsReset = function () {\n            this.els = document.createDocumentFragment();\n        };\n    app.defineDirective(REGION_MANAGER, function (instance) {\n        return {\n            list: Collection(),\n            parent: instance,\n            create: createRegion,\n            establish: establishRegion,\n            remove: removeRegion,\n            add: addRegion,\n            get: getRegion\n        };\n    });\n    app.defineDirective(BUFFERED_VIEWS, function (instance) {\n        return {\n            region: instance,\n            els: $.createDocumentFragment(),\n            reset: bufferedReset,\n            ensure: bufferedEnsure,\n            resetEls: bufferedElsReset\n        };\n    });\n    app.extend(foldl(gapSplit('add remove get'), function (memo, key) {\n        memo[key + 'Region'] = directives.parody(REGION_MANAGER, key);\n        return memo;\n    }, {\n        addChildView: addChildView,\n        removeChildView: removeChildView\n    }));\n    app.directive(REGION_MANAGER);\n});","app.scope(function (app) {\n    var _ = app._,\n        factories = _.factories,\n        parse = _.parse,\n        stringify = _.stringify,\n        ENCODED_BRACKET = '%7B',\n        IS_LATE = 'isLate',\n        DOCUMENT_READY = 'documentReady',\n        IS_WINDOW = 'isWindow',\n        DEFERRED = 'deferred',\n        RESOLVED = 'resolved',\n        IS_DEFERRED = 'is' + upCase(DEFERRED),\n        GROUP = 'group',\n        POST_TO = 'postTo',\n        COMMAND = 'command',\n        RUN_COUNT = 'runCount',\n        FLUSHING = 'flushing',\n        CONNECT = 'connect',\n        CONNECTED = CONNECT + 'ed',\n        DISCONNECTED = 'dis' + CONNECTED,\n        COMPONENT = 'component',\n        INITIALIZE = 'initialize',\n        RESPONSE = 'response',\n        MESSAGE = 'message',\n        RESPONSE_OPTIONS = RESPONSE + 'Options',\n        CAPITAL_RESPONSE = upCase(RESPONSE),\n        LATEST_RESPONSE = 'latest' + CAPITAL_RESPONSE,\n        LAST_RESPONSE = 'last' + CAPITAL_RESPONSE,\n        RESPONDED = 'responded',\n        RESPONDED_WITH = RESPONDED + 'With',\n        RECEIVED = 'received',\n        BEFORE_RESPONDED = BEFORE_COLON + RESPONDED,\n        BEFORE_RECEIVED = BEFORE_COLON + RECEIVED,\n        QUEUED_MESSAGE_INDEX = 'queuedMessageIndex',\n        SENT_MESSAGE_INDEX = 'sentMessageIndex',\n        RECEIVED_REFERRER = 'receiveReferrer',\n        EMIT_REFERRER = 'emitReferrer',\n        BUSTER = 'buster',\n        PACKET = 'packet',\n        VERSION = 'version',\n        busterGroupHash = {},\n        receive = function (evt) {\n            var buster, data = evt.data(),\n                postTo = data.postTo;\n            if (app.isDestroyed || !data || !postTo || (app[VERSION] !== data[VERSION] && data[VERSION] !== '*')) {\n                return;\n            }\n            buster = (busterGroupHash[data.group] || {})[data.postTo];\n            if (!buster) {\n                return;\n            }\n            var originalMessage, runCount = data.runCount,\n                children = buster.directive(CHILDREN);\n            if (runCount) {\n                originalMessage = children.get(ID, data.messageId);\n                if (!originalMessage) {\n                    return buster;\n                }\n                // found the message that i originally sent you\n                // allow the buster to set some things up\n                buster.response(originalMessage, data);\n            } else {\n                buster.receive(data);\n            }\n        },\n        /**\n         * single function to stringify and post message an object to the other side\n         * @private\n         * @arg {object} object to be stringified and sent to the receive function,\n         * either through a post message, or through a setTimeout\n         * @arg {buster}\n         */\n        postMessage = function (base, buster) {\n            var referrer, message = stringify(base);\n            return buster.emitWindow.emit(message, buster.get(EMIT_REFERRER), receive);\n        },\n        defaultGroupId = uuid(),\n        RESPOND_HANDLERS = 'respondHandlers',\n        Message = factories.Model.extend(upCase(MESSAGE), {\n            idAttribute: MESSAGE + 'Id',\n            initialize: function () {\n                var message = this;\n                message[RESPOND_HANDLERS] = [];\n                message.once(RESPONSE, message.saveReceived);\n                message.on(DEFERRED, message.saveDeferred);\n            },\n            saveReceived: function (e) {\n                this.responseEventObject = e;\n            },\n            saveDeferred: function (e) {\n                this.deferredEventObject = e;\n            },\n            packet: function (data) {\n                var message = this;\n                if (arguments[0]) {\n                    message.set(PACKET, data || {});\n                } else {\n                    message = parse(stringify(message.get(PACKET)));\n                }\n                return message;\n            },\n            defaults: function () {\n                return {\n                    command: NULL + EMPTY_STRING,\n                    packet: {}\n                };\n            },\n            response: function (handler) {\n                var message = this;\n                if (!isFunction(handler)) {\n                    return message;\n                }\n                if (message.get(RESPONDED_WITH)) {\n                    handler.call(message, message.responseEventObject);\n                } else {\n                    message.once(RESPONSE, handler);\n                }\n                return message;\n            },\n            deferred: function (handler) {\n                var message = this,\n                    latestResponse = message.get(LATEST_RESPONSE);\n                message.on(DEFERRED, handler);\n                if (latestResponse && latestResponse.isDeferred) {\n                    handler.call(message, message.deferredEventObject);\n                }\n                return message;\n            },\n            send: function () {\n                return this[PARENT].flush();\n            }\n        }),\n        receiveWindowEvents = {\n            message: receive\n        },\n        wipe = function (buster) {\n            return find(busterGroupHash, function (groupHash) {\n                return find(groupHash, function (previousbuster, key, groupHash) {\n                    return buster === previousbuster && delete groupHash[key];\n                });\n            });\n        },\n        disconnected = function () {\n            var buster = this;\n            if (buster.connectPromise) {\n                buster.connectPromise.reject();\n            }\n            buster.unmark(CONNECTED);\n            buster[DISPATCH_EVENT](DISCONNECTED);\n            buster.connectPromise = _.Promise();\n        },\n        connected = function (buster, message) {\n            buster.connectPromise.fulfill(message);\n            buster.mark(CONNECTED);\n            buster[DISPATCH_EVENT](CONNECTED);\n        },\n        connectReceived = function (e) {\n            // first submit a response so the other side can flush\n            var buster = this,\n                dataDirective = buster.directive(DATA);\n            if (dataDirective.get(IS_LATE)) {\n                dataDirective.set(SENT_MESSAGE_INDEX, 1);\n            }\n            buster.respond((e.message || e.origin).id);\n            buster.mark(CONNECTED);\n            buster[DISPATCH_EVENT](CONNECTED);\n        },\n        UPCASED_BUSTER = upCase(BUSTER),\n        defaultMessage = function (buster) {\n            return {\n                from: buster.get(ID),\n                postTo: buster.get(POST_TO),\n                group: buster.get(GROUP),\n                version: app[VERSION],\n                messageId: buster.directive(CHILDREN)[LENGTH](),\n                timeStamp: _.now()\n            };\n        },\n        Buster = factories[UPCASED_BUSTER] = factories.Model.extend(UPCASED_BUSTER, {\n            Child: Message,\n            bounce: function (e) {\n                return this.respond(e.message.id);\n            },\n            connected: function () {\n                this.connectPromise.success(arguments);\n                return this;\n            },\n            response: function (original, data) {\n                var buster = this,\n                    originalData = original[DATA];\n                if (!originalData) {\n                    return;\n                }\n                originalData.set(LATEST_RESPONSE, data);\n                if (original.is(RESOLVED)) {\n                    original[DISPATCH_EVENT](DEFERRED, data.packet);\n                } else {\n                    originalData.set(RESPONDED_WITH, data);\n                    original.mark(RESOLVED);\n                    original[DISPATCH_EVENT](RESPONSE, data.packet);\n                }\n            },\n            receive: function (data) {\n                var message, buster = this,\n                    receiveHistory = buster.receiveHistory;\n                data.originMessageId = data.messageId;\n                data.messageId = receiveHistory.length();\n                data.isDeferred = BOOLEAN_FALSE;\n                message = Message(data);\n                receiveHistory.push(message);\n                receiveHistory.register(ID, data.messageId, message);\n                buster[DISPATCH_EVENT](BEFORE_RECEIVED);\n                buster[DISPATCH_EVENT](RECEIVED + COLON + data.command, data.packet, {\n                    message: message\n                });\n                buster[DISPATCH_EVENT](RECEIVED);\n                return buster;\n            },\n            setGroup: function () {\n                var buster = this,\n                    group = buster.get(GROUP),\n                    id = buster.get(ID),\n                    resultant = wipe(buster),\n                    groupHash = busterGroupHash[group] = busterGroupHash[group] || {};\n                groupHash[id] = buster;\n                return buster;\n            },\n            /**\n             * @func\n             * @name Buster#defaults\n             */\n            defineWindows: function (receiveWindow, emitWindow) {\n                var buster = this,\n                    busterData = buster.directive(DATA);\n                if (receiveWindow && receiveWindow[IS_WINDOW]) {\n                    // takes care of preventing duplicate handlers\n                    buster.receiveWindow = receiveWindow.on(receiveWindowEvents);\n                    buster.mark(DOCUMENT_READY);\n                    buster.flush();\n                }\n                if (emitWindow && emitWindow[IS_WINDOW]) {\n                    buster.emitWindow = emitWindow;\n                    busterData.set(POST_TO, busterData.get(POST_TO) || buster.emitWindow.address);\n                }\n            },\n            defineIframe: function (iframe) {\n                var busterData, emitReferrer, receiveReferrer, iframeSrc, referrer, receiveWindow, data, href, windo, buster = this;\n                if (!iframe || !iframe.isIframe) {\n                    return;\n                }\n                buster[IFRAME] = iframe;\n                if (iframe.is('attached') && (windo = iframe.window())) {\n                    buster.defineWindows(NULL, windo);\n                }\n                if (iframe) {\n                    buster.setupIframe();\n                }\n            },\n            setupIframe: function () {\n                var emitReferrer, buster = this,\n                    iframe = buster[IFRAME],\n                    busterData = buster.directive(DATA),\n                    hrefSplit = buster.receiveWindow.element().location.href.split(ENCODED_BRACKET),\n                    hrefShift = hrefSplit.shift(),\n                    unshifted = hrefSplit.unshift(EMPTY_STRING),\n                    href = hrefSplit.join(ENCODED_BRACKET),\n                    receiveReferrer = parseUrl(busterData.get(RECEIVED_REFERRER) || href).origin,\n                    iframeSrc = busterData.get(IFRAME + 'Src'),\n                    iframeContent = busterData.get(IFRAME + 'Content'),\n                    // this is going to the\n                    data = {\n                        postTo: buster.id,\n                        useTop: false,\n                        // post to me\n                        useParent: true,\n                        emitReferrer: receiveReferrer,\n                        id: busterData.get(POST_TO),\n                        group: busterData.get(GROUP)\n                    };\n                busterData.set(RECEIVED_REFERRER, receiveReferrer);\n                if (iframeSrc) {\n                    emitReferrer = busterData.set(EMIT_REFERRER, _.reference(iframeSrc));\n                    data.receiveReferrer = emitReferrer;\n                }\n                if (iframeSrc) {\n                    iframe.src(stringifyQuery({\n                        url: iframeSrc,\n                        hash: data\n                    }));\n                }\n                if (iframeContent) {\n                    iframe.data(BUSTER, encodeURI(stringify(data)));\n                    iframe.html(iframeContent);\n                    buster.begin(INITIALIZE);\n                }\n            },\n            stripData: function () {\n                var hashSplit, hashShift, hashString, buster = this,\n                    receiveWindow = buster.receiveWindow;\n                if (!receiveWindow || !receiveWindow[IS_WINDOW]) {\n                    return;\n                }\n                hashString = receiveWindow.element().location.hash.slice(1);\n                hashSplit = hashString.split(ENCODED_BRACKET);\n                hashShift = hashSplit.shift();\n                hashSplit.unshift(EMPTY_STRING);\n                hashString = hashSplit.join(ENCODED_BRACKET);\n                buster.set(parse(decodeURI(hashString || wraptry(function () {\n                    return receiveWindow.parent(IFRAME).data(BUSTER);\n                }))));\n            },\n            constructor: function (listen, talk, settings_, events) {\n                var buster = this;\n                var settings = settings_ || {};\n                // normalize to manager\n                var receiveWindow = $(listen).index(0);\n                var manager = $(talk).index(0);\n                settings.id = settings.id === UNDEFINED ? uuid() : settings.id;\n                buster.receiveHistory = factories.Collection();\n                disconnected.call(buster);\n                settings.group = defaultGroupId;\n                factories.Model[CONSTRUCTOR].call(buster, settings);\n                buster.on(CONNECTED, function (e) {\n                    buster.connectPromise.fulfill(buster.directive(CHILDREN).first());\n                    buster.flush();\n                });\n                buster.on({\n                    'received:update': 'bounce',\n                    'received:unload': 'destroy',\n                    destroy: disconnected,\n                    'received:initialize received:connect': connectReceived,\n                    'change:group change:id': 'setGroup'\n                });\n                buster.on(events);\n                buster.setGroup();\n                if (receiveWindow && receiveWindow[IS_WINDOW]) {\n                    buster.defineWindows(receiveWindow);\n                }\n                if (manager[IS_WINDOW]) {\n                    buster.defineWindows(NULL, manager);\n                    // window tests... because messages are going up\n                } else {\n                    buster.defineIframe(manager);\n                    // iframe tests... because messages are going down\n                }\n                if (buster.get('strip')) {\n                    buster.stripData();\n                }\n                buster.set(SENT_MESSAGE_INDEX, 0);\n                if (buster[IFRAME]) {\n                    // oh, are we late?\n                    if (buster.get(IS_LATE)) {\n                        buster.begin(INITIALIZE);\n                    }\n                } else {\n                    // is an inner buster... let's check to see if anyone is waiting for us\n                    buster.begin(CONNECT);\n                }\n                return buster;\n            },\n            /**\n             * tries to flush the cache. only works if the connected attribute is set to true. If it is, then the post message pipeline begins\n             * @returns {buster} returns this;\n             * @func\n             * @name Buster#flush\n             */\n            flush: function () {\n                var command, children, n, item, gah, childrenLen, queuedMsg, nuData, i = 0,\n                    buster = this,\n                    dataManager = buster.directive(DATA),\n                    currentIdx = dataManager.get(SENT_MESSAGE_INDEX),\n                    connected = buster.is(CONNECTED),\n                    initedFrom = dataManager.get('initedFromPartner'),\n                    flushing = dataManager.get(FLUSHING);\n                if (!buster.is(DOCUMENT_READY)) {\n                    return buster;\n                }\n                if (!initedFrom || connected && ((connected || !currentIdx) && !flushing)) {\n                    dataManager.set(FLUSHING, BOOLEAN_TRUE);\n                    children = buster.directive(CHILDREN);\n                    childrenLen = children[LENGTH]();\n                    queuedMsg = children.index(currentIdx);\n                    while (queuedMsg && currentIdx < childrenLen) {\n                        queuedMsg.directive(DATA).set(RUN_COUNT, 0);\n                        if (currentIdx || connected) {\n                            queuedMsg = children.index(currentIdx);\n                            currentIdx = (dataManager.get(SENT_MESSAGE_INDEX) + 1) || 0;\n                            dataManager.set(SENT_MESSAGE_INDEX, currentIdx);\n                            postMessage(queuedMsg, buster);\n                        } else {\n                            // initializing\n                            childrenLen = UNDEFINED;\n                            command = queuedMsg.get(COMMAND);\n                            if (command === CONNECT || command === INITIALIZE) {\n                                postMessage(queuedMsg, buster);\n                            }\n                        }\n                    }\n                    buster.set(FLUSHING, BOOLEAN_FALSE);\n                    if (buster.is(CONNECTED)) {\n                        if (children[LENGTH]() > buster.get(SENT_MESSAGE_INDEX)) {\n                            buster.flush();\n                        }\n                    }\n                }\n                return buster;\n            },\n            /**\n             * basic send message function, adds to queue, then calls flush\n             * @arg {string} can be string or object. if object, must have command property as string\n             * @arg {object} base object to be sent\n             * @returns {buster}\n             * @func\n             * @name Buster#send\n             */\n            create: function (command, packet, extra) {\n                var buster = this,\n                    message = buster.add(extend({\n                        command: command,\n                        packet: packet\n                    }, defaultMessage(buster), extra));\n                return message[0];\n            },\n            /**\n             * shorthand for creating a function that gets called after the buster's partner has responded\n             * @func\n             * @name Buster#sync\n             */\n            sync: function (fn) {\n                return this.create('update').response(fn).send();\n            },\n            /**\n             * creates a default message based on the attributes of the buster\n             * @returns {object} blank / default message object\n             * @func\n             * @name Buster#defaultMessage\n             */\n            /**\n             * respond trigger.\n             * @arg {object} original data object (same pointer) that was sent over\n             * @arg {object} extend object, that will be applied to a base object, that is created by the responseExtend attribute set on the buster object\n             * @returns {buster}\n             * @func\n             * @name Buster#respond\n             */\n            respond: function (messageId, packet_) {\n                var messageData, packet, lastRespondUpdate, newMessage, buster = this,\n                    originalMessage = buster.receiveHistory.get(ID, messageId);\n                if (!originalMessage) {\n                    return buster;\n                }\n                buster[DISPATCH_EVENT](BEFORE_RESPONDED);\n                // if (buster.el && (!data.canThrottle || buster.shouldUpdate(arguments))) {\n                // on the inner functions, we don't want to allow this\n                // module to be present, so the inner does not influence the outer\n                messageData = originalMessage.directive(DATA);\n                messageData.set(RUN_COUNT, (messageData.get(RUN_COUNT) || 0) + 1);\n                packet = extend(BOOLEAN_TRUE, result(buster, 'package') || {}, packet_);\n                newMessage = extend(defaultMessage(buster), {\n                    from: originalMessage.get(POST_TO),\n                    postTo: originalMessage.get('from'),\n                    messageId: originalMessage.get('originMessageId'),\n                    isResponse: BOOLEAN_TRUE,\n                    isDeferred: originalMessage.get(IS_DEFERRED),\n                    runCount: originalMessage.get(RUN_COUNT),\n                    command: originalMessage.get(COMMAND),\n                    timeStamp: _.now(),\n                    packet: packet,\n                    version: originalMessage.get(VERSION)\n                });\n                // silent sets\n                messageData.set(LAST_RESPONSE, newMessage.timeStamp);\n                messageData.set(IS_DEFERRED, BOOLEAN_TRUE);\n                // loud set\n                buster.set(LAST_RESPONSE, newMessage.timeStamp);\n                postMessage(newMessage, buster);\n                buster[DISPATCH_EVENT](RESPONDED, packet);\n                return buster;\n            },\n            /**\n             * starts a relationship between two busters. simplifies the initialization process.\n             * @returns {number} just for responding to the original message in case there's a handler\n             * @func\n             * @name Buster#begin\n             */\n            begin: function (command) {\n                var buster = this,\n                    children = buster.directive(CHILDREN);\n                return children.index(0) || buster.create(command).response(function (e) {\n                    connectReceived.call(buster, e);\n                }).send();\n            }\n        });\n    if (app.topAccess()) {\n        $(win[TOP]).on(MESSAGE, receive);\n    }\n});","application.scope().run(function (app, _, factories) {\n    var currentTest, current, pollerTimeout, failedTests = 0,\n        testisrunning = BOOLEAN_FALSE,\n        EXPECTED = 'expected',\n        SPACE_NOT = ' not',\n        TO_EQUAL = ' to equal ',\n        AN_ERROR = ' an error',\n        TO_BE_THROWN = ' to be thrown',\n        TO_BE_STRICTLY_EQUAL_STRING = ' to be strictly equal to ',\n        console = _.console,\n        stringify = _.stringify,\n        negate = _.negate,\n        allIts = [],\n        successfulIts = [],\n        failedIts = [],\n        stack = [],\n        queue = [],\n        allExpectations = [],\n        successful = [],\n        failures = [],\n        successfulExpectations = [],\n        failedExpectations = [],\n        globalBeforeEachStack = [],\n        globalAfterEachStack = [],\n        errIfFalse = function (handler, makemessage) {\n            return function (arg) {\n                var err, expectation = {};\n                if (handler.call(this, current, arg)) {\n                    successfulExpectations.push(expectation);\n                } else {\n                    ++failedTests;\n                    expectation = new Error(makemessage.apply(this, arguments));\n                    console.error(expectation);\n                    failedExpectations.push(expectation);\n                }\n                allExpectations.push(expectation);\n                return this;\n            };\n        },\n        expectationsHash = {\n            not: {}\n        },\n        expect = function (start) {\n            current = start;\n            return expectationsHash;\n        },\n        maker = expect.maker = function (where, test, positive, negative) {\n            expectationsHash[where] = errIfFalse(test, positive);\n            expectationsHash.not[where] = errIfFalse(negate(test), negative);\n        },\n        internalToThrowResult = maker('toThrow', function (handler) {\n            var errRan = BOOLEAN_FALSE;\n            return _.wraptry(handler, function () {\n                errRan = BOOLEAN_TRUE;\n            }, function () {\n                return errRan;\n            });\n        }, function () {\n            return EXPECTED + AN_ERROR + TO_BE_THROWN;\n        }, function () {\n            return EXPECTED + AN_ERROR + SPACE_NOT + TO_BE_THROWN;\n        }),\n        internalToBeResult = maker('toBe', function (current, comparison) {\n            return current === comparison;\n        }, function (current, comparison) {\n            return EXPECTED + SPACE + stringify(current) + TO_BE_STRICTLY_EQUAL_STRING + stringify(comparison);\n        }, function (current, comparison) {\n            return EXPECTED + SPACE + stringify(current) + SPACE_NOT + TO_BE_STRICTLY_EQUAL_STRING + stringify(comparison);\n        }),\n        internalToEqualResult = maker('toEqual', function (current, comparison) {\n            return _.isEqual(current, comparison);\n        }, function (current, comparison) {\n            return EXPECTED + SPACE + current + TO_EQUAL + comparison;\n        }, function (current, comparison) {\n            return EXPECTED + SPACE + stringify(current) + SPACE_NOT + TO_EQUAL + stringify(comparison);\n        }),\n        errHandler = function (expectation) {\n            return function (err) {\n                expectation.erred = err;\n                console.error(err);\n            };\n        },\n        executedone = function (expectation) {\n            var queued;\n            expectation.endTime = _.performance.now();\n            stack.pop();\n            if (failedTests || expectation.erred) {\n                failedIts.push(expectation);\n            } else {\n                successfulIts.push(expectation);\n            }\n            failedTests = 0;\n            runningEach(expectation.afterStack);\n            testisrunning = BOOLEAN_FALSE;\n            if (queue[0]) {\n                queued = queue.shift();\n                setup(queued);\n            }\n            setupPoller();\n        },\n        describe = function (string, handler) {\n            stack.push(string);\n            globalBeforeEachStack.push([]);\n            globalAfterEachStack.push([]);\n            _.wraptry(handler, console.error, function () {\n                globalAfterEachStack.pop();\n                globalBeforeEachStack.pop();\n                stack.pop();\n            });\n        },\n        makesOwnCallback = function (handler) {\n            var stringHandler = handler.toString();\n            var split = stringHandler.split('(');\n            var shifted = split.shift();\n            var sliced = split.join('(');\n            split = sliced.split(')');\n            var target = split.shift();\n            return target.trim().length;\n        },\n        timeoutErr = function (stack) {\n            console.error('timeout:\\n' + stack.join('\\n'));\n        },\n        setup = function (expectation) {\n            testisrunning = BOOLEAN_TRUE;\n            expectation.runId = setTimeout(function () {\n                var errThat, doThis, errThis, err, finallyThis;\n                currentTest = expectation;\n                runningEach(expectation.beforeStack);\n                errThis = errHandler(expectation);\n                if (makesOwnCallback(expectation.handler)) {\n                    err = new Error();\n                    expectation.timeoutId = setTimeout(function () {\n                        console.error('timeout:\\n' + expectation.current.join('\\n'));\n                        errThat(err);\n                        executedone(expectation);\n                    }, 5000);\n                    doThis = function () {\n                        expectation.handler(function () {\n                            clearTimeout(expectation.timeoutId);\n                            executedone(expectation);\n                        });\n                    };\n                    errThat = errThis;\n                    errThis = function (e) {\n                        errThat(e);\n                        executedone(expectation);\n                    };\n                    finallyThis = _.noop;\n                } else {\n                    doThis = expectation.handler;\n                    finallyThis = function () {\n                        executedone(expectation);\n                    };\n                }\n                expectation.startTime = _.performance.now();\n                _.wraptry(doThis, errThis, finallyThis);\n            });\n        },\n        it = function (string, handler) {\n            var copy, expectation;\n            stack.push(string);\n            copy = stack.slice(0);\n            stack.pop();\n            expectation = {\n                string: string,\n                handler: handler,\n                current: copy,\n                beforeStack: globalBeforeEachStack.slice(0),\n                afterStack: globalAfterEachStack.slice(0)\n            };\n            allIts.push(expectation);\n            if (testisrunning) {\n                queue.push(expectation);\n                return;\n            }\n            setup(expectation);\n        },\n        runningEach = function (globalStack) {\n            for (var i = 0; i < globalStack[LENGTH]; i++) {\n                var itemized = globalStack[i];\n                for (var j = 0; j < itemized[LENGTH]; j++) {\n                    itemized[j]();\n                }\n            }\n        },\n        beforeEach = function (handler) {\n            globalBeforeEachStack[globalBeforeEachStack[LENGTH] - 1].push(handler);\n        },\n        afterEach = function (handler) {\n            globalAfterEachStack[globalAfterEachStack[LENGTH] - 1].push(handler);\n        },\n        setupPoller = function () {\n            pollerTimeout = pollerTimeout === void 0 ? setTimeout(function loops() {\n                var theIt, i = 0,\n                    totalTime = 0;\n                if (!testisrunning) {\n                    for (; i < allIts[LENGTH]; i++) {\n                        theIt = allIts[i];\n                        totalTime += (theIt.endTime - theIt.startTime);\n                    }\n                    console.log(successfulExpectations.length + ' successful expectations\\n' + failedExpectations.length + ' failed expectations\\n' + allExpectations.length + ' expectations ran\\n' + successfulIts.length + ' out of ' + allIts.length + ' tests passed\\nin ' + totalTime + 'ms');\n                } else {\n                    pollerTimeout = setTimeout(loops, 100);\n                }\n            }, 100) : pollerTimeout;\n        };\n    _.exports({\n        afterEach: afterEach,\n        beforeEach: beforeEach,\n        expect: expect,\n        describe: describe,\n        it: it\n    });\n});"],"sourceRoot":"/source/"}